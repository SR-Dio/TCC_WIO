

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Nov 04 15:35:32 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D  ;; Function _dispLCDstr is unused but had its address taken
  1492                           global _dispLCDstr
  1493                           _dispLCDstr equ 0
  1494  0000  ;; Function _dispLCD_num is unused but had its address taken
  1495                           global _dispLCD_num
  1496                           _dispLCD_num equ 0
  1497  0000  ;; Function _previousKey is unused but had its address taken
  1498                           global _previousKey
  1499                           _previousKey equ 0
  1500  0000  ;; Function _currentKey is unused but had its address taken
  1501                           global _currentKey
  1502                           _currentKey equ 0
  1503  0000  ;; Function _keyboard_scan is unused but had its address taken
  1504                           global _keyboard_scan
  1505                           _keyboard_scan equ 0
  1506  0000  ;; Function _rxEUSART is unused but had its address taken
  1507                           global _rxEUSART
  1508                           _rxEUSART equ 0
  1509  0000  ;; Function _rxStatusEUSART is unused but had its address taken
  1510                           global _rxStatusEUSART
  1511                           _rxStatusEUSART equ 0
  1512  0000  ;; Function _rxErrorEUSART is unused but had its address taken
  1513                           global _rxErrorEUSART
  1514                           _rxErrorEUSART equ 0
  1515  0000  ;; Function _rxResetErrorEUSART is unused but had its address taken
  1516                           global _rxResetErrorEUSART
  1517                           _rxResetErrorEUSART equ 0
  1518  0000  ;; Function _search is unused but had its address taken
  1519                           global _search
  1520                           _search equ 0
  1521  0000  ;; Function _wifi_receive is unused but had its address taken
  1522                           global _wifi_receive
  1523                           _wifi_receive equ 0
  1524  0000  ;; Function _Wifi_ip is unused but had its address taken
  1525                           global _Wifi_ip
  1526                           _Wifi_ip equ 0
  1527  0000  ;; Function _Wifi_autoconnect is unused but had its address taken
  1528                           global _Wifi_autoconnect
  1529                           _Wifi_autoconnect equ 0
  1530  0000                     	FNCALL	_main,_Wifi_connect
  1531                           	FNCALL	_main,_Wifi_mode
  1532                           	FNCALL	_main,_Wifi_state
  1533                           	FNCALL	_main,_delay
  1534                           	FNCALL	_main,_dispLCD
  1535                           	FNCALL	_main,_dispLCD_B0
  1536                           	FNCALL	_main,_dispLCD_B1
  1537                           	FNCALL	_main,_dispLCD_clr
  1538                           	FNCALL	_main,_dispLCD_init
  1539                           	FNCALL	_main,_fifo_retirar
  1540                           	FNCALL	_main,_fifo_tam
  1541                           	FNCALL	_main,_keyboard_init
  1542                           	FNCALL	_main,_wifi_init
  1543                           	FNCALL	_wifi_init,_initEUSART
  1544                           	FNCALL	_initEUSART,___lldiv
  1545                           	FNCALL	_dispLCD_init,_delay
  1546                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1547                           	FNCALL	_dispLCD_init,_dispLCD_newChar
  1548                           	FNCALL	_dispLCD_newChar,_dispLCD_dataReg
  1549                           	FNCALL	_dispLCD_newChar,_dispLCD_instReg
  1550                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  1551                           	FNCALL	_dispLCD,___awdiv
  1552                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1553                           	FNCALL	_dispLCD,_dispLCD_lincol
  1554                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1555                           	FNCALL	_Wifi_state,_wifi_send
  1556                           	FNCALL	_Wifi_mode,_wifi_send
  1557                           	FNCALL	_Wifi_connect,_wifi_send
  1558                           	FNCALL	_wifi_send,_txEUSART
  1559                           	FNCALL	_wifi_send,_txStatusEUSART
  1560                           	FNROOT	_main
  1561                           	FNCALL	_isr,_fifo_inserir
  1562                           	FNCALL	intlevel1,_isr
  1563                           	global	intlevel1
  1564                           	FNROOT	intlevel1
  1565                           	global	_eusart
  1566                           	global	_wifi
  1567                           	global	_lcd
  1568                           	global	_keyboard
  1569                           	global	main@F1436
  1570                           	global	main@F1434
  1571                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1572                           global __pidataBANK0
  1573                           __pidataBANK0:
  1574  06DB                     	file	"eusart.c"
  1575                           	line	26
  1576                           
  1577                           ;initializer for _eusart
  1578                           	retlw	low(0)
  1579  06DB  3400               	retlw	low(0)
  1580  06DC  3400               	retlw	low(0)
  1581  06DD  3400               	retlw	low(0)
  1582  06DE  3400               	retlw	low((fp__txEUSART-fpbase))
  1583  06DF  3401               	retlw	low((fp__txStatusEUSART-fpbase))
  1584  06E0  3404               	retlw	low((fp__initEUSART-fpbase))
  1585  06E1  3425               	retlw	low(0)
  1586  06E2  3400               	file	"./wifi.h"
  1587                           	line	32
  1588                           
  1589                           ;initializer for _wifi
  1590                           	retlw	low((fp__wifi_init-fpbase))
  1591  06E3  3428               	retlw	low((fp__wifi_send-fpbase))
  1592  06E4  3407               	retlw	low(0)
  1593  06E5  3400               	retlw	low((fp__Wifi_mode-fpbase))
  1594  06E6  340D               	retlw	low((fp__Wifi_connect-fpbase))
  1595  06E7  340A               	retlw	low(0)
  1596  06E8  3400               	retlw	low(0)
  1597  06E9  3400               	retlw	low((fp__Wifi_state-fpbase))
  1598  06EA  3410               	file	"./ihm.h"
  1599                           	line	17
  1600                           
  1601                           ;initializer for _lcd
  1602                           	retlw	low((fp__dispLCD_init-fpbase))
  1603  06EB  341F               	retlw	low(0)
  1604  06EC  3400               	retlw	low((fp__dispLCD-fpbase))
  1605  06ED  3413               	retlw	low(0)
  1606  06EE  3400               	retlw	low((fp__dispLCD_clr-fpbase))
  1607  06EF  341C               	retlw	low((fp__dispLCD_B0-fpbase))
  1608  06F0  3416               	retlw	low((fp__dispLCD_B1-fpbase))
  1609  06F1  3419               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1610                           global __pidataBANK1
  1611                           __pidataBANK1:
  1612  07B7                     	line	26
  1613                           
  1614                           ;initializer for _keyboard
  1615                           	retlw	low(0)
  1616  07B7  3400               	retlw	low(0)
  1617  07B8  3400               	retlw	low(0)
  1618  07B9  3400               	retlw	low((fp__keyboard_init-fpbase))
  1619  07BA  3422               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  1620                           global __pidataBANK3
  1621                           __pidataBANK3:
  1622  0568                     	file	"main.c"
  1623                           	line	51
  1624                           
  1625                           ;initializer for main@F1436
  1626                           	retlw	020h
  1627  0568  3420               	retlw	low(0)
  1628  0569  3400               	retlw	0
  1629  056A  3400               	retlw	0
  1630  056B  3400               	retlw	0
  1631  056C  3400               	retlw	0
  1632  056D  3400               	retlw	0
  1633  056E  3400               	retlw	0
  1634  056F  3400               	retlw	0
  1635  0570  3400               	retlw	0
  1636  0571  3400               	retlw	0
  1637  0572  3400               	retlw	0
  1638  0573  3400               	retlw	0
  1639  0574  3400               	retlw	0
  1640  0575  3400               	retlw	0
  1641  0576  3400               	retlw	0
  1642  0577  3400               	retlw	0
  1643  0578  3400               	retlw	0
  1644  0579  3400               	retlw	0
  1645  057A  3400               	retlw	0
  1646  057B  3400               	retlw	0
  1647  057C  3400               	retlw	0
  1648  057D  3400               	retlw	0
  1649  057E  3400               	retlw	0
  1650  057F  3400               	retlw	0
  1651  0580  3400               	retlw	0
  1652  0581  3400               	retlw	0
  1653  0582  3400               	retlw	0
  1654  0583  3400               	retlw	0
  1655  0584  3400               	retlw	0
  1656  0585  3400               	retlw	0
  1657  0586  3400               	retlw	0
  1658  0587  3400               	retlw	0
  1659  0588  3400               	retlw	0
  1660  0589  3400               	retlw	0
  1661  058A  3400               	retlw	0
  1662  058B  3400               	retlw	0
  1663  058C  3400               	retlw	0
  1664  058D  3400               	retlw	0
  1665  058E  3400               	retlw	0
  1666  058F  3400               	line	50
  1667                           
  1668                           ;initializer for main@F1434
  1669                           	retlw	020h
  1670  0590  3420               	retlw	low(0)
  1671  0591  3400               	retlw	0
  1672  0592  3400               	retlw	0
  1673  0593  3400               	retlw	0
  1674  0594  3400               	retlw	0
  1675  0595  3400               	retlw	0
  1676  0596  3400               	retlw	0
  1677  0597  3400               	retlw	0
  1678  0598  3400               	retlw	0
  1679  0599  3400               	retlw	0
  1680  059A  3400               	retlw	0
  1681  059B  3400               	retlw	0
  1682  059C  3400               	retlw	0
  1683  059D  3400               	retlw	0
  1684  059E  3400               	retlw	0
  1685  059F  3400               	retlw	0
  1686  05A0  3400               	retlw	0
  1687  05A1  3400               	retlw	0
  1688  05A2  3400               	retlw	0
  1689  05A3  3400               	retlw	0
  1690  05A4  3400               	retlw	0
  1691  05A5  3400               	retlw	0
  1692  05A6  3400               	retlw	0
  1693  05A7  3400               	retlw	0
  1694  05A8  3400               	retlw	0
  1695  05A9  3400               	retlw	0
  1696  05AA  3400               	retlw	0
  1697  05AB  3400               	retlw	0
  1698  05AC  3400               	retlw	0
  1699  05AD  3400               	retlw	0
  1700  05AE  3400               	retlw	0
  1701  05AF  3400               	retlw	0
  1702  05B0  3400               	global	_keyboardMatrix
  1703                           psect	strings,class=STRING,delta=2,noexec
  1704                           global __pstrings
  1705                           __pstrings:
  1706  0234                     stringtab:
  1707  0234                     	global    __stringtab
  1708                           __stringtab:
  1709  0234                     ;	String table - string pointers are 1 byte each
  1710                           stringcode:stringdir:
  1711  0234                     movlw high(stringdir)
      + 0234                     stringdir:	
  1712  0234  3002               movwf pclath
  1713  0235  008A               movf fsr,w
  1714  0236  0804               incf fsr
  1715  0237  0A84               	addwf pc
  1716  0238  0782               	global __stringbase
  1717                           __stringbase:
  1718  0239                     	retlw	0
  1719  0239  3400               psect	strings
  1720                           	global    __end_of__stringtab
  1721                           __end_of__stringtab:
  1722  023A                     	file	"keyboard.c"
  1723                           	line	40
  1724                           _keyboardMatrix:
  1725  023A                     	retlw	031h
  1726  023A  3431               	retlw	032h
  1727  023B  3432               	retlw	033h
  1728  023C  3433               	retlw	041h
  1729  023D  3441               	retlw	034h
  1730  023E  3434               	retlw	035h
  1731  023F  3435               	retlw	036h
  1732  0240  3436               	retlw	042h
  1733  0241  3442               	retlw	037h
  1734  0242  3437               	retlw	038h
  1735  0243  3438               	retlw	039h
  1736  0244  3439               	retlw	043h
  1737  0245  3443               	retlw	02Ah
  1738  0246  342A               	retlw	030h
  1739  0247  3430               	retlw	023h
  1740  0248  3423               	retlw	044h
  1741  0249  3444               	global __end_of_keyboardMatrix
  1742                           __end_of_keyboardMatrix:
  1743  024A                     psect	strings
  1744                           	file	"wifi.c"
  1745                           	line	66
  1746                           _SSID:
  1747  024A                     	retlw	061h
  1748  024A  3461               	retlw	075h
  1749  024B  3475               	retlw	074h
  1750  024C  3474               	retlw	06Fh
  1751  024D  346F               	retlw	06Dh
  1752  024E  346D               	retlw	061h
  1753  024F  3461               	retlw	074h
  1754  0250  3474               	retlw	069h
  1755  0251  3469               	retlw	06Fh
  1756  0252  346F               	retlw	06Eh
  1757  0253  346E               	retlw	low(0)
  1758  0254  3400               	global __end_of_SSID
  1759                           __end_of_SSID:
  1760  0255                     psect	strings
  1761                           	file	"wifi.c"
  1762                           	line	67
  1763                           _PASS:
  1764  0255                     	retlw	031h
  1765  0255  3431               	retlw	032h
  1766  0256  3432               	retlw	033h
  1767  0257  3433               	retlw	034h
  1768  0258  3434               	retlw	035h
  1769  0259  3435               	retlw	036h
  1770  025A  3436               	retlw	037h
  1771  025B  3437               	retlw	038h
  1772  025C  3438               	retlw	low(0)
  1773  025D  3400               	global __end_of_PASS
  1774                           __end_of_PASS:
  1775  025E                     psect	strings
  1776                           	file	"main.c"
  1777                           	line	50
  1778                           main@string:
  1779  025E                     	retlw	04Fh
  1780  025E  344F               	retlw	04Bh
  1781  025F  344B               	retlw	low(0)
  1782  0260  3400               	global __end_ofmain@string
  1783                           __end_ofmain@string:
  1784  0261                     	global	_newChar_degree
  1785                           psect	strings
  1786                           	file	"lcd.c"
  1787                           	line	31
  1788                           _newChar_degree:
  1789  0261                     	retlw	04h
  1790  0261  3404               	retlw	0Ah
  1791  0262  340A               	retlw	04h
  1792  0263  3404               	retlw	low(0)
  1793  0264  3400               	retlw	low(0)
  1794  0265  3400               	retlw	low(0)
  1795  0266  3400               	retlw	low(0)
  1796  0267  3400               	retlw	low(0)
  1797  0268  3400               	global __end_of_newChar_degree
  1798                           __end_of_newChar_degree:
  1799  0269                     	global	_keyboardMatrix
  1800                           	global	_newChar_degree
  1801                           	global	_currKey
  1802                           	global	_prevKey
  1803                           	global	_fifo
  1804                           	global	_fifo_tail
  1805                           	global	_fifo_head
  1806                           	global	_INTCONbits
  1807                           _INTCONbits	set	0xB
  1808  000B                     	global	_TXREG
  1809                           _TXREG	set	0x19
  1810  0019                     	global	_RCSTAbits
  1811                           _RCSTAbits	set	0x18
  1812  0018                     	global	_PIR1bits
  1813                           _PIR1bits	set	0xC
  1814  000C                     	global	_RCREG
  1815                           _RCREG	set	0x1A
  1816  001A                     	global	_PORTB
  1817                           _PORTB	set	0x6
  1818  0006                     	global	_KEYBOARDbits
  1819                           _KEYBOARDbits	set	0x6
  1820  0006                     	global	_LCDbits
  1821                           _LCDbits	set	8
  1822  0008                     	global	_PORTAbits
  1823                           _PORTAbits	set	0x5
  1824  0005                     	global	_SPBRbits
  1825                           _SPBRbits	set	0x99
  1826  0099                     	global	_PIE1bits
  1827                           _PIE1bits	set	0x8C
  1828  008C                     	global	_TXSTAbits
  1829                           _TXSTAbits	set	0x98
  1830  0098                     	global	_OPTION_REGbits
  1831                           _OPTION_REGbits	set	0x81
  1832  0081                     	global	_WPUB
  1833                           _WPUB	set	0x95
  1834  0095                     	global	_TRISB
  1835                           _TRISB	set	0x86
  1836  0086                     	global	_TRISDbits
  1837                           _TRISDbits	set	0x88
  1838  0088                     	global	_TRISAbits
  1839                           _TRISAbits	set	0x85
  1840  0085                     	global	_BAUDCTLbits
  1841                           _BAUDCTLbits	set	0x187
  1842  0187                     	global	_ANSELH
  1843                           _ANSELH	set	0x189
  1844  0189                     	
  1845                           STR_9:	
  1846  0269                     	retlw	65	;'A'
  1847  0269  3441               	retlw	84	;'T'
  1848  026A  3454               	retlw	43	;'+'
  1849  026B  342B               	retlw	67	;'C'
  1850  026C  3443               	retlw	87	;'W'
  1851  026D  3457               	retlw	74	;'J'
  1852  026E  344A               	retlw	65	;'A'
  1853  026F  3441               	retlw	80	;'P'
  1854  0270  3450               	retlw	61	;'='
  1855  0271  343D               	retlw	34	;'"'
  1856  0272  3422               	retlw	97	;'a'
  1857  0273  3461               	retlw	117	;'u'
  1858  0274  3475               	retlw	116	;'t'
  1859  0275  3474               	retlw	111	;'o'
  1860  0276  346F               	retlw	109	;'m'
  1861  0277  346D               	retlw	97	;'a'
  1862  0278  3461               	retlw	116	;'t'
  1863  0279  3474               	retlw	105	;'i'
  1864  027A  3469               	retlw	111	;'o'
  1865  027B  346F               	retlw	110	;'n'
  1866  027C  346E               	retlw	34	;'"'
  1867  027D  3422               	retlw	44	;','
  1868  027E  342C               	retlw	34	;'"'
  1869  027F  3422               	retlw	49	;'1'
  1870  0280  3431               	retlw	50	;'2'
  1871  0281  3432               	retlw	51	;'3'
  1872  0282  3433               	retlw	52	;'4'
  1873  0283  3434               	retlw	53	;'5'
  1874  0284  3435               	retlw	54	;'6'
  1875  0285  3436               	retlw	55	;'7'
  1876  0286  3437               	retlw	56	;'8'
  1877  0287  3438               	retlw	34	;'"'
  1878  0288  3422               	retlw	13
  1879  0289  340D               	retlw	10
  1880  028A  340A               	retlw	0
  1881  028B  3400               psect	strings
  1882                           	
  1883                           STR_12:	
  1884  028C                     	retlw	65	;'A'
  1885  028C  3441               	retlw	84	;'T'
  1886  028D  3454               	retlw	43	;'+'
  1887  028E  342B               	retlw	67	;'C'
  1888  028F  3443               	retlw	87	;'W'
  1889  0290  3457               	retlw	65	;'A'
  1890  0291  3441               	retlw	85	;'U'
  1891  0292  3455               	retlw	84	;'T'
  1892  0293  3454               	retlw	79	;'O'
  1893  0294  344F               	retlw	67	;'C'
  1894  0295  3443               	retlw	79	;'O'
  1895  0296  344F               	retlw	78	;'N'
  1896  0297  344E               	retlw	78	;'N'
  1897  0298  344E               	retlw	61	;'='
  1898  0299  343D               	retlw	48	;'0'
  1899  029A  3430               	retlw	13
  1900  029B  340D               	retlw	10
  1901  029C  340A               	retlw	0
  1902  029D  3400               psect	strings
  1903                           	
  1904                           STR_8:	
  1905  029E                     	retlw	65	;'A'
  1906  029E  3441               	retlw	84	;'T'
  1907  029F  3454               	retlw	43	;'+'
  1908  02A0  342B               	retlw	67	;'C'
  1909  02A1  3443               	retlw	87	;'W'
  1910  02A2  3457               	retlw	77	;'M'
  1911  02A3  344D               	retlw	79	;'O'
  1912  02A4  344F               	retlw	68	;'D'
  1913  02A5  3444               	retlw	69	;'E'
  1914  02A6  3445               	retlw	61	;'='
  1915  02A7  343D               	retlw	48	;'0'
  1916  02A8  3430               	retlw	13
  1917  02A9  340D               	retlw	10
  1918  02AA  340A               	retlw	0
  1919  02AB  3400               psect	strings
  1920                           	
  1921                           STR_5:	
  1922  02AC                     	retlw	65	;'A'
  1923  02AC  3441               	retlw	84	;'T'
  1924  02AD  3454               	retlw	43	;'+'
  1925  02AE  342B               	retlw	67	;'C'
  1926  02AF  3443               	retlw	87	;'W'
  1927  02B0  3457               	retlw	77	;'M'
  1928  02B1  344D               	retlw	79	;'O'
  1929  02B2  344F               	retlw	68	;'D'
  1930  02B3  3444               	retlw	69	;'E'
  1931  02B4  3445               	retlw	61	;'='
  1932  02B5  343D               	retlw	49	;'1'
  1933  02B6  3431               	retlw	13
  1934  02B7  340D               	retlw	10
  1935  02B8  340A               	retlw	0
  1936  02B9  3400               psect	strings
  1937                           	
  1938                           STR_6:	
  1939  02BA                     	retlw	65	;'A'
  1940  02BA  3441               	retlw	84	;'T'
  1941  02BB  3454               	retlw	43	;'+'
  1942  02BC  342B               	retlw	67	;'C'
  1943  02BD  3443               	retlw	87	;'W'
  1944  02BE  3457               	retlw	77	;'M'
  1945  02BF  344D               	retlw	79	;'O'
  1946  02C0  344F               	retlw	68	;'D'
  1947  02C1  3444               	retlw	69	;'E'
  1948  02C2  3445               	retlw	61	;'='
  1949  02C3  343D               	retlw	50	;'2'
  1950  02C4  3432               	retlw	13
  1951  02C5  340D               	retlw	10
  1952  02C6  340A               	retlw	0
  1953  02C7  3400               psect	strings
  1954                           	
  1955                           STR_7:	
  1956  02C8                     	retlw	65	;'A'
  1957  02C8  3441               	retlw	84	;'T'
  1958  02C9  3454               	retlw	43	;'+'
  1959  02CA  342B               	retlw	67	;'C'
  1960  02CB  3443               	retlw	87	;'W'
  1961  02CC  3457               	retlw	77	;'M'
  1962  02CD  344D               	retlw	79	;'O'
  1963  02CE  344F               	retlw	68	;'D'
  1964  02CF  3444               	retlw	69	;'E'
  1965  02D0  3445               	retlw	61	;'='
  1966  02D1  343D               	retlw	51	;'3'
  1967  02D2  3433               	retlw	13
  1968  02D3  340D               	retlw	10
  1969  02D4  340A               	retlw	0
  1970  02D5  3400               psect	strings
  1971                           	
  1972                           STR_10:	
  1973  02D6                     	retlw	65	;'A'
  1974  02D6  3441               	retlw	84	;'T'
  1975  02D7  3454               	retlw	43	;'+'
  1976  02D8  342B               	retlw	67	;'C'
  1977  02D9  3443               	retlw	87	;'W'
  1978  02DA  3457               	retlw	76	;'L'
  1979  02DB  344C               	retlw	65	;'A'
  1980  02DC  3441               	retlw	80	;'P'
  1981  02DD  3450               	retlw	13
  1982  02DE  340D               	retlw	10
  1983  02DF  340A               	retlw	0
  1984  02E0  3400               psect	strings
  1985                           	
  1986                           STR_11:	
  1987  02E1                     	retlw	65	;'A'
  1988  02E1  3441               	retlw	84	;'T'
  1989  02E2  3454               	retlw	43	;'+'
  1990  02E3  342B               	retlw	67	;'C'
  1991  02E4  3443               	retlw	73	;'I'
  1992  02E5  3449               	retlw	70	;'F'
  1993  02E6  3446               	retlw	83	;'S'
  1994  02E7  3453               	retlw	82	;'R'
  1995  02E8  3452               	retlw	13
  1996  02E9  340D               	retlw	10
  1997  02EA  340A               	retlw	0
  1998  02EB  3400               psect	strings
  1999                           	
  2000                           STR_1:	
  2001  02EC                     	retlw	110	;'n'
  2002  02EC  346E               	retlw	117	;'u'
  2003  02ED  3475               	retlw	108	;'l'
  2004  02EE  346C               	retlw	108	;'l'
  2005  02EF  346C               	retlw	0
  2006  02F0  3400               psect	strings
  2007                           STR_2	equ	STR_1+0
  2008  02EC                     STR_3	equ	STR_1+0
  2009  02EC                     STR_4	equ	STR_1+0
  2010  02EC                     ; #config settings
  2011                           global __CFG_FOSC$HS
  2012                           __CFG_FOSC$HS equ 0x0
  2013  0000                     global __CFG_WDTE$OFF
  2014                           __CFG_WDTE$OFF equ 0x0
  2015  0000                     global __CFG_PWRTE$OFF
  2016                           __CFG_PWRTE$OFF equ 0x0
  2017  0000                     global __CFG_MCLRE$OFF
  2018                           __CFG_MCLRE$OFF equ 0x0
  2019  0000                     global __CFG_CP$OFF
  2020                           __CFG_CP$OFF equ 0x0
  2021  0000                     global __CFG_CPD$OFF
  2022                           __CFG_CPD$OFF equ 0x0
  2023  0000                     global __CFG_BOREN$OFF
  2024                           __CFG_BOREN$OFF equ 0x0
  2025  0000                     global __CFG_IESO$OFF
  2026                           __CFG_IESO$OFF equ 0x0
  2027  0000                     global __CFG_FCMEN$OFF
  2028                           __CFG_FCMEN$OFF equ 0x0
  2029  0000                     global __CFG_LVP$OFF
  2030                           __CFG_LVP$OFF equ 0x0
  2031  0000                     global __CFG_BOR4V$BOR40V
  2032                           __CFG_BOR4V$BOR40V equ 0x0
  2033  0000                     global __CFG_WRT$OFF
  2034                           __CFG_WRT$OFF equ 0x0
  2035  0000                     	file	"C:\Users\21193665\AppData\Local\Temp\shbs."
  2036                           	line	#
  2037                           psect cinit,class=CODE,delta=2
  2038                           global start_initialization
  2039                           start_initialization:
  2040  0011                     
  2041                           global __initialization
  2042                           __initialization:
  2043  0011                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2044                           global __pbssCOMMON
  2045                           __pbssCOMMON:
  2046  0076                     _currKey:
  2047  0076                            ds      1
  2048  0076                     
  2049                           _prevKey:
  2050  0077                            ds      1
  2051  0077                     
  2052                           psect	bssBANK0,class=BANK0,space=1,noexec
  2053                           global __pbssBANK0
  2054                           __pbssBANK0:
  2055  0057                     _fifo:
  2056  0057                            ds      16
  2057  0057                     
  2058                           _fifo_tail:
  2059  0067                            ds      1
  2060  0067                     
  2061                           _fifo_head:
  2062  0068                            ds      1
  2063  0068                     
  2064                           psect	dataBANK0,class=BANK0,space=1,noexec
  2065                           global __pdataBANK0
  2066                           __pdataBANK0:
  2067  0040                     	file	"eusart.c"
  2068                           	line	26
  2069                           _eusart:
  2070  0040                            ds      8
  2071  0040                     
  2072                           psect	dataBANK0
  2073                           	file	"./wifi.h"
  2074                           	line	32
  2075                           _wifi:
  2076  0048                            ds      8
  2077  0048                     
  2078                           psect	dataBANK0
  2079                           	file	"./ihm.h"
  2080                           	line	17
  2081                           _lcd:
  2082  0050                            ds      7
  2083  0050                     
  2084                           psect	dataBANK1,class=BANK1,space=1,noexec
  2085                           global __pdataBANK1
  2086                           __pdataBANK1:
  2087  00EB                     	file	"./ihm.h"
  2088                           	line	26
  2089                           _keyboard:
  2090  00EB                            ds      4
  2091  00EB                     
  2092                           psect	dataBANK3,class=BANK3,space=1,noexec
  2093                           global __pdataBANK3
  2094                           __pdataBANK3:
  2095  0190                     	file	"main.c"
  2096                           	line	51
  2097                           main@F1436:
  2098  0190                            ds      40
  2099  0190                     
  2100                           psect	dataBANK3
  2101                           	file	"main.c"
  2102                           	line	50
  2103                           main@F1434:
  2104  01B8                            ds      33
  2105  01B8                     
  2106                           	file	"C:\Users\21193665\AppData\Local\Temp\shbs."
  2107                           	line	#
  2108                           global btemp
  2109                           psect inittext,class=CODE,delta=2
  2110                           global init_fetch0,btemp
  2111                           ;	Called with low address in FSR and high address in W
  2112                           init_fetch0:
  2113  0732                     	movf btemp,w
  2114  0732  087E               	movwf pclath
  2115  0733  008A               	movf btemp+1,w
  2116  0734  087F               	movwf pc
  2117  0735  0082               global init_ram0
  2118                           ;Called with:
  2119                           ;	high address of idata address in btemp 
  2120                           ;	low address of idata address in btemp+1 
  2121                           ;	low address of data in FSR
  2122                           ;	high address + 1 of data in btemp-1
  2123                           init_ram0:
  2124  0736                     	fcall init_fetch0
  2125  0736  120A  118A  2732  120A  118A  	movwf indf,f
  2126  073B  0080               	incf fsr,f
  2127  073C  0A84               	movf fsr,w
  2128  073D  0804               	xorwf btemp-1,w
  2129  073E  067D               	btfsc status,2
  2130  073F  1903               	retlw 0
  2131  0740  3400               	incf btemp+1,f
  2132  0741  0AFF               	btfsc status,2
  2133  0742  1903               	incf btemp,f
  2134  0743  0AFE               	goto init_ram0
  2135  0744  2F36               ; Initialize objects allocated to BANK3
  2136                           psect cinit,class=CODE,delta=2,merge=1
  2137                           global init_ram0, __pidataBANK3
  2138                           	bsf	status, 7	;select IRP bank2
  2139  0011  1783               	movlw low(__pdataBANK3+73)
  2140  0012  30D9               	movwf btemp-1,f
  2141  0013  00FD               	movlw high(__pidataBANK3)
  2142  0014  3005               	movwf btemp,f
  2143  0015  00FE               	movlw low(__pidataBANK3)
  2144  0016  3068               	movwf btemp+1,f
  2145  0017  00FF               	movlw low(__pdataBANK3)
  2146  0018  3090               	movwf fsr,f
  2147  0019  0084               	fcall init_ram0
  2148  001A  120A  118A  2736  120A  118A  ; Initialize objects allocated to BANK1
  2149                           psect cinit,class=CODE,delta=2,merge=1
  2150                           global init_ram0, __pidataBANK1
  2151                           	bcf	status, 7	;select IRP bank0
  2152  001F  1383               	movlw low(__pdataBANK1+4)
  2153  0020  30EF               	movwf btemp-1,f
  2154  0021  00FD               	movlw high(__pidataBANK1)
  2155  0022  3007               	movwf btemp,f
  2156  0023  00FE               	movlw low(__pidataBANK1)
  2157  0024  30B7               	movwf btemp+1,f
  2158  0025  00FF               	movlw low(__pdataBANK1)
  2159  0026  30EB               	movwf fsr,f
  2160  0027  0084               	fcall init_ram0
  2161  0028  120A  118A  2736  120A  118A  ; Initialize objects allocated to BANK0
  2162                           psect cinit,class=CODE,delta=2,merge=1
  2163                           global init_ram0, __pidataBANK0
  2164                           	movlw low(__pdataBANK0+23)
  2165  002D  3057               	movwf btemp-1,f
  2166  002E  00FD               	movlw high(__pidataBANK0)
  2167  002F  3006               	movwf btemp,f
  2168  0030  00FE               	movlw low(__pidataBANK0)
  2169  0031  30DB               	movwf btemp+1,f
  2170  0032  00FF               	movlw low(__pdataBANK0)
  2171  0033  3040               	movwf fsr,f
  2172  0034  0084               	fcall init_ram0
  2173  0035  120A  118A  2736  120A  118A  	line	#
  2174                           psect clrtext,class=CODE,delta=2
  2175                           global clear_ram0
  2176                           ;	Called with FSR containing the base address, and
  2177                           ;	W with the last address+1
  2178                           clear_ram0:
  2179  079B                     	clrwdt			;clear the watchdog before getting into this loop
  2180  079B  0064               clrloop0:
  2181  079C                     	clrf	indf		;clear RAM location pointed to by FSR
  2182  079C  0180               	incf	fsr,f		;increment pointer
  2183  079D  0A84               	xorwf	fsr,w		;XOR with final address
  2184  079E  0604               	btfsc	status,2	;have we reached the end yet?
  2185  079F  1903               	retlw	0		;all done for this memory range, return
  2186  07A0  3400               	xorwf	fsr,w		;XOR again to restore value
  2187  07A1  0604               	goto	clrloop0		;do the next byte
  2188  07A2  2F9C               
  2189                           ; Clear objects allocated to BANK0
  2190                           psect cinit,class=CODE,delta=2,merge=1
  2191                           	movlw	low(__pbssBANK0)
  2192  003A  3057               	movwf	fsr
  2193  003B  0084               	movlw	low((__pbssBANK0)+012h)
  2194  003C  3069               	fcall	clear_ram0
  2195  003D  120A  118A  279B  120A  118A  ; Clear objects allocated to COMMON
  2196                           psect cinit,class=CODE,delta=2,merge=1
  2197                           	clrf	((__pbssCOMMON)+0)&07Fh
  2198  0042  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
  2199  0043  01F7               psect cinit,class=CODE,delta=2,merge=1
  2200                           global end_of_initialization,__end_of__initialization
  2201                           
  2202                           ;End of C runtime variable initialization code
  2203                           
  2204                           end_of_initialization:
  2205  0044                     __end_of__initialization:
  2206  0044                     clrf status
  2207  0044  0183               ljmp _main	;jump to C main() function
  2208  0045  120A  118A  2878   psect	cstackBANK1,class=BANK1,space=1,noexec
  2209                           global __pcstackBANK1
  2210                           __pcstackBANK1:
  2211  00A0                     	global	main@hex
  2212                           main@hex:	; 40 bytes @ 0x0
  2213  00A0                     	ds	40
  2214  00A0                     	global	main@vtr
  2215                           main@vtr:	; 33 bytes @ 0x28
  2216  00C8                     	ds	33
  2217  00C8                     	global	main@d
  2218                           main@d:	; 1 bytes @ 0x49
  2219  00E9                     	ds	1
  2220  00E9                     	global	main@indice
  2221                           main@indice:	; 1 bytes @ 0x4A
  2222  00EA                     	ds	1
  2223  00EA                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2224                           global __pcstackCOMMON
  2225                           __pcstackCOMMON:
  2226  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  2227  0070                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  2228  0070                     ?_dispLCD_B0:	; 1 bytes @ 0x0
  2229  0070                     ?_dispLCD_B1:	; 1 bytes @ 0x0
  2230  0070                     ?_keyboard_init:	; 1 bytes @ 0x0
  2231  0070                     ?_Wifi_connect:	; 1 bytes @ 0x0
  2232  0070                     ?_Wifi_state:	; 1 bytes @ 0x0
  2233  0070                     ?_fifo_retirar:	; 1 bytes @ 0x0
  2234  0070                     ?_fifo_tam:	; 1 bytes @ 0x0
  2235  0070                     ?_txStatusEUSART:	; 1 bytes @ 0x0
  2236  0070                     ?_fifo_inserir:	; 1 bytes @ 0x0
  2237  0070                     ??_fifo_inserir:	; 1 bytes @ 0x0
  2238  0070                     ?_main:	; 1 bytes @ 0x0
  2239  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  2240  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  2241  0070                     ?_isr:	; 1 bytes @ 0x0
  2242  0070                     	ds	2
  2243  0070                     	global	fifo_inserir@d
  2244                           fifo_inserir@d:	; 1 bytes @ 0x2
  2245  0072                     	ds	1
  2246  0072                     ??_isr:	; 1 bytes @ 0x3
  2247  0073                     	ds	3
  2248  0073                     ??_dispLCD_clr:	; 1 bytes @ 0x6
  2249  0076                     ??_dispLCD_B0:	; 1 bytes @ 0x6
  2250  0076                     ??_dispLCD_B1:	; 1 bytes @ 0x6
  2251  0076                     ??_keyboard_init:	; 1 bytes @ 0x6
  2252  0076                     ??_wifi_init:	; 1 bytes @ 0x6
  2253  0076                     ??_fifo_tam:	; 1 bytes @ 0x6
  2254  0076                     ??_txEUSART:	; 1 bytes @ 0x6
  2255  0076                     ??_txStatusEUSART:	; 1 bytes @ 0x6
  2256  0076                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2257                           global __pcstackBANK0
  2258                           __pcstackBANK0:
  2259  0020                     ?_delay:	; 1 bytes @ 0x0
  2260  0020                     ??_fifo_retirar:	; 1 bytes @ 0x0
  2261  0020                     ?_txEUSART:	; 1 bytes @ 0x0
  2262  0020                     ??_dispLCD_instReg:	; 1 bytes @ 0x0
  2263  0020                     ??_dispLCD_dataReg:	; 1 bytes @ 0x0
  2264  0020                     	global	?___awdiv
  2265                           ?___awdiv:	; 2 bytes @ 0x0
  2266  0020                     	global	?___lldiv
  2267                           ?___lldiv:	; 4 bytes @ 0x0
  2268  0020                     	global	txEUSART@d
  2269                           txEUSART@d:	; 1 bytes @ 0x0
  2270  0020                     	global	delay@t
  2271                           delay@t:	; 2 bytes @ 0x0
  2272  0020                     	global	___awdiv@divisor
  2273                           ___awdiv@divisor:	; 2 bytes @ 0x0
  2274  0020                     	global	___lldiv@divisor
  2275                           ___lldiv@divisor:	; 4 bytes @ 0x0
  2276  0020                     	ds	1
  2277  0020                     ?_wifi_send:	; 1 bytes @ 0x1
  2278  0021                     	global	dispLCD_dataReg@d
  2279                           dispLCD_dataReg@d:	; 1 bytes @ 0x1
  2280  0021                     	global	wifi_send@msg
  2281                           wifi_send@msg:	; 1 bytes @ 0x1
  2282  0021                     	ds	1
  2283  0021                     ??_wifi_send:	; 1 bytes @ 0x2
  2284  0022                     ??_delay:	; 1 bytes @ 0x2
  2285  0022                     	global	dispLCD_instReg@i
  2286                           dispLCD_instReg@i:	; 1 bytes @ 0x2
  2287  0022                     	global	fifo_retirar@aux
  2288                           fifo_retirar@aux:	; 1 bytes @ 0x2
  2289  0022                     	global	___awdiv@dividend
  2290                           ___awdiv@dividend:	; 2 bytes @ 0x2
  2291  0022                     	ds	1
  2292  0022                     ?_Wifi_mode:	; 1 bytes @ 0x3
  2293  0023                     ??_Wifi_connect:	; 1 bytes @ 0x3
  2294  0023                     ??_Wifi_state:	; 1 bytes @ 0x3
  2295  0023                     ?_dispLCD_newChar:	; 1 bytes @ 0x3
  2296  0023                     	global	dispLCD_newChar@ptr
  2297                           dispLCD_newChar@ptr:	; 1 bytes @ 0x3
  2298  0023                     	global	Wifi_mode@d
  2299                           Wifi_mode@d:	; 1 bytes @ 0x3
  2300  0023                     	ds	1
  2301  0023                     ??_Wifi_mode:	; 1 bytes @ 0x4
  2302  0024                     ??_dispLCD_newChar:	; 1 bytes @ 0x4
  2303  0024                     ??___awdiv:	; 1 bytes @ 0x4
  2304  0024                     	global	___lldiv@dividend
  2305                           ___lldiv@dividend:	; 4 bytes @ 0x4
  2306  0024                     	ds	1
  2307  0024                     	global	dispLCD_newChar@adrs
  2308                           dispLCD_newChar@adrs:	; 1 bytes @ 0x5
  2309  0025                     	global	___awdiv@counter
  2310                           ___awdiv@counter:	; 1 bytes @ 0x5
  2311  0025                     	ds	1
  2312  0025                     	global	dispLCD_newChar@i
  2313                           dispLCD_newChar@i:	; 1 bytes @ 0x6
  2314  0026                     	global	___awdiv@sign
  2315                           ___awdiv@sign:	; 1 bytes @ 0x6
  2316  0026                     	ds	1
  2317  0026                     ??_dispLCD_init:	; 1 bytes @ 0x7
  2318  0027                     	global	___awdiv@quotient
  2319                           ___awdiv@quotient:	; 2 bytes @ 0x7
  2320  0027                     	ds	1
  2321  0027                     ??___lldiv:	; 1 bytes @ 0x8
  2322  0028                     	ds	1
  2323  0028                     ?_dispLCD_lincol:	; 1 bytes @ 0x9
  2324  0029                     	global	dispLCD_lincol@col
  2325                           dispLCD_lincol@col:	; 1 bytes @ 0x9
  2326  0029                     	global	___lldiv@quotient
  2327                           ___lldiv@quotient:	; 4 bytes @ 0x9
  2328  0029                     	ds	1
  2329  0029                     ??_dispLCD_lincol:	; 1 bytes @ 0xA
  2330  002A                     	ds	1
  2331  002A                     	global	dispLCD_lincol@lin
  2332                           dispLCD_lincol@lin:	; 1 bytes @ 0xB
  2333  002B                     	ds	1
  2334  002B                     ?_dispLCD:	; 1 bytes @ 0xC
  2335  002C                     	global	dispLCD@lin
  2336                           dispLCD@lin:	; 1 bytes @ 0xC
  2337  002C                     	ds	1
  2338  002C                     	global	dispLCD@col
  2339                           dispLCD@col:	; 1 bytes @ 0xD
  2340  002D                     	global	___lldiv@counter
  2341                           ___lldiv@counter:	; 1 bytes @ 0xD
  2342  002D                     	ds	1
  2343  002D                     ?_initEUSART:	; 1 bytes @ 0xE
  2344  002E                     	global	dispLCD@str
  2345                           dispLCD@str:	; 1 bytes @ 0xE
  2346  002E                     	global	initEUSART@baudRate
  2347                           initEUSART@baudRate:	; 4 bytes @ 0xE
  2348  002E                     	ds	1
  2349  002E                     ??_dispLCD:	; 1 bytes @ 0xF
  2350  002F                     	ds	1
  2351  002F                     	global	dispLCD@cont
  2352                           dispLCD@cont:	; 2 bytes @ 0x10
  2353  0030                     	ds	2
  2354  0030                     ??_initEUSART:	; 1 bytes @ 0x12
  2355  0032                     	ds	6
  2356  0032                     ?_wifi_init:	; 1 bytes @ 0x18
  2357  0038                     	global	wifi_init@br
  2358                           wifi_init@br:	; 4 bytes @ 0x18
  2359  0038                     	ds	4
  2360  0038                     ??_main:	; 1 bytes @ 0x1C
  2361  003C                     	ds	4
  2362  003C                     ;!
  2363                           ;!Data Sizes:
  2364                           ;!    Strings     136
  2365                           ;!    Constant    47
  2366                           ;!    Data        100
  2367                           ;!    BSS         20
  2368                           ;!    Persistent  0
  2369                           ;!    Stack       0
  2370                           ;!
  2371                           ;!Auto Spaces:
  2372                           ;!    Space          Size  Autos    Used
  2373                           ;!    COMMON           14      6       8
  2374                           ;!    BANK0            80     32      73
  2375                           ;!    BANK1            80     75      79
  2376                           ;!    BANK3            96      0      73
  2377                           ;!    BANK2            96      0       0
  2378                           
  2379                           ;!
  2380                           ;!Pointer List with Targets:
  2381                           ;!
  2382                           ;!    S29$1$0	PTR const unsigned char  size(1) Largest target is 0
  2383                           ;!
  2384                           ;!    S123$1$0	PTR const unsigned char  size(1) Largest target is 35
  2385                           ;!		 -> STR_12(CODE[18]), STR_11(CODE[11]), STR_10(CODE[11]), STR_9(CODE[35]), 
  2386                           ;!		 -> STR_8(CODE[14]), STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), 
  2387                           ;!
  2388                           ;!    S123$2$0	PTR unsigned char  size(1) Largest target is 0
  2389                           ;!
  2390                           ;!    S470$7$1	PTR const unsigned char  size(1) Largest target is 0
  2391                           ;!
  2392                           ;!    S470$7$0	PTR const unsigned char  size(1) Largest target is 0
  2393                           ;!
  2394                           ;!    S29$2$2	PTR const unsigned char  size(1) Largest target is 33
  2395                           ;!		 -> main@vtr(BANK1[33]), 
  2396                           ;!
  2397                           ;!    wifi_send@msg	PTR const unsigned char  size(1) Largest target is 35
  2398                           ;!		 -> STR_12(CODE[18]), STR_11(CODE[11]), STR_10(CODE[11]), STR_9(CODE[35]), 
  2399                           ;!		 -> STR_8(CODE[14]), STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), 
  2400                           ;!
  2401                           ;!    S470eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char
                                  ,)int  size(1) Largest target is 2
  2402                           ;!		 -> search(), 
  2403                           ;!
  2404                           ;!    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)in
                                 t  size(1) Largest target is 2
  2405                           ;!		 -> search(), 
  2406                           ;!
  2407                           ;!    S470eusartT$init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
  2408                           ;!		 -> initEUSART(), 
  2409                           ;!
  2410                           ;!    eusart.init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
  2411                           ;!		 -> initEUSART(), 
  2412                           ;!
  2413                           ;!    S470eusartT$txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  2414                           ;!		 -> txStatusEUSART(), 
  2415                           ;!
  2416                           ;!    eusart.txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  2417                           ;!		 -> txStatusEUSART(), 
  2418                           ;!
  2419                           ;!    S470eusartT$tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  2420                           ;!		 -> txEUSART(), 
  2421                           ;!
  2422                           ;!    eusart.tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  2423                           ;!		 -> txEUSART(), 
  2424                           ;!
  2425                           ;!    S470eusartT$rxResetERROR	PTR FTN()void  size(1) Largest target is 1
  2426                           ;!		 -> rxResetErrorEUSART(), 
  2427                           ;!
  2428                           ;!    eusart.rxResetERROR	PTR FTN()void  size(1) Largest target is 1
  2429                           ;!		 -> rxResetErrorEUSART(), 
  2430                           ;!
  2431                           ;!    S470eusartT$rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
  2432                           ;!		 -> rxErrorEUSART(), 
  2433                           ;!
  2434                           ;!    eusart.rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
  2435                           ;!		 -> rxErrorEUSART(), 
  2436                           ;!
  2437                           ;!    S470eusartT$rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  2438                           ;!		 -> rxStatusEUSART(), 
  2439                           ;!
  2440                           ;!    eusart.rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
  2441                           ;!		 -> rxStatusEUSART(), 
  2442                           ;!
  2443                           ;!    S470eusartT$rx	PTR FTN()unsigned char  size(1) Largest target is 1
  2444                           ;!		 -> rxEUSART(), 
  2445                           ;!
  2446                           ;!    eusart.rx	PTR FTN()unsigned char  size(1) Largest target is 1
  2447                           ;!		 -> rxEUSART(), 
  2448                           ;!
  2449                           ;!    dispLCD@str	PTR const unsigned char  size(1) Largest target is 33
  2450                           ;!		 -> main@vtr(BANK1[33]), 
  2451                           ;!
  2452                           ;!    dispLCD_newChar@ptr	PTR const unsigned char  size(1) Largest target is 8
  2453                           ;!		 -> newChar_degree(CODE[8]), 
  2454                           ;!
  2455                           ;!    S123$state	PTR FTN()void  size(1) Largest target is 1
  2456                           ;!		 -> Wifi_state(), 
  2457                           ;!
  2458                           ;!    wifi.state	PTR FTN()void  size(1) Largest target is 1
  2459                           ;!		 -> Wifi_state(), 
  2460                           ;!
  2461                           ;!    S123$autoconnect	PTR FTN()void  size(1) Largest target is 1
  2462                           ;!		 -> Wifi_autoconnect(), 
  2463                           ;!
  2464                           ;!    wifi.autoconnect	PTR FTN()void  size(1) Largest target is 1
  2465                           ;!		 -> Wifi_autoconnect(), 
  2466                           ;!
  2467                           ;!    S123$ip	PTR FTN()void  size(1) Largest target is 1
  2468                           ;!		 -> Wifi_ip(), 
  2469                           ;!
  2470                           ;!    wifi.ip	PTR FTN()void  size(1) Largest target is 1
  2471                           ;!		 -> Wifi_ip(), 
  2472                           ;!
  2473                           ;!    S123$connect	PTR FTN()void  size(1) Largest target is 1
  2474                           ;!		 -> Wifi_connect(), 
  2475                           ;!
  2476                           ;!    wifi.connect	PTR FTN()void  size(1) Largest target is 1
  2477                           ;!		 -> Wifi_connect(), 
  2478                           ;!
  2479                           ;!    S123$mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  2480                           ;!		 -> Wifi_mode(), 
  2481                           ;!
  2482                           ;!    wifi.mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
  2483                           ;!		 -> Wifi_mode(), 
  2484                           ;!
  2485                           ;!    S123$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 
                                 1
  2486                           ;!		 -> wifi_receive(), 
  2487                           ;!
  2488                           ;!    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 
                                 1
  2489                           ;!		 -> wifi_receive(), 
  2490                           ;!
  2491                           ;!    S123$send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  2492                           ;!		 -> wifi_send(), 
  2493                           ;!
  2494                           ;!    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  2495                           ;!		 -> wifi_send(), 
  2496                           ;!
  2497                           ;!    S123$init	PTR FTN(long ,)void  size(1) Largest target is 1
  2498                           ;!		 -> wifi_init(), 
  2499                           ;!
  2500                           ;!    wifi.init	PTR FTN(long ,)void  size(1) Largest target is 1
  2501                           ;!		 -> wifi_init(), 
  2502                           ;!
  2503                           ;!    S94$init	PTR FTN()void  size(1) Largest target is 1
  2504                           ;!		 -> keyboard_init(), 
  2505                           ;!
  2506                           ;!    keyboard.init	PTR FTN()void  size(1) Largest target is 1
  2507                           ;!		 -> keyboard_init(), 
  2508                           ;!
  2509                           ;!    S94$scan	PTR FTN()unsigned char  size(1) Largest target is 1
  2510                           ;!		 -> keyboard_scan(), 
  2511                           ;!
  2512                           ;!    keyboard.scan	PTR FTN()unsigned char  size(1) Largest target is 1
  2513                           ;!		 -> keyboard_scan(), 
  2514                           ;!
  2515                           ;!    S94$teclaAtual	PTR FTN()unsigned char  size(1) Largest target is 1
  2516                           ;!		 -> currentKey(), 
  2517                           ;!
  2518                           ;!    keyboard.teclaAtual	PTR FTN()unsigned char  size(1) Largest target is 1
  2519                           ;!		 -> currentKey(), 
  2520                           ;!
  2521                           ;!    S94$teclaAnterior	PTR FTN()unsigned char  size(1) Largest target is 1
  2522                           ;!		 -> previousKey(), 
  2523                           ;!
  2524                           ;!    keyboard.teclaAnterior	PTR FTN()unsigned char  size(1) Largest target is 1
  2525                           ;!		 -> previousKey(), 
  2526                           ;!
  2527                           ;!    S29$B1	PTR FTN()unsigned char  size(1) Largest target is 1
  2528                           ;!		 -> dispLCD_B1(), 
  2529                           ;!
  2530                           ;!    lcd.B1	PTR FTN()unsigned char  size(1) Largest target is 1
  2531                           ;!		 -> dispLCD_B1(), 
  2532                           ;!
  2533                           ;!    S29$B0	PTR FTN()unsigned char  size(1) Largest target is 1
  2534                           ;!		 -> dispLCD_B0(), 
  2535                           ;!
  2536                           ;!    lcd.B0	PTR FTN()unsigned char  size(1) Largest target is 1
  2537                           ;!		 -> dispLCD_B0(), 
  2538                           ;!
  2539                           ;!    S29$clr	PTR FTN()void  size(1) Largest target is 1
  2540                           ;!		 -> dispLCD_clr(), 
  2541                           ;!
  2542                           ;!    lcd.clr	PTR FTN()void  size(1) Largest target is 1
  2543                           ;!		 -> dispLCD_clr(), 
  2544                           ;!
  2545                           ;!    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  2546                           ;!		 -> dispLCD_num(), 
  2547                           ;!
  2548                           ;!    lcd.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  2549                           ;!		 -> dispLCD_num(), 
  2550                           ;!
  2551                           ;!    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  2552                           ;!		 -> dispLCD(), 
  2553                           ;!
  2554                           ;!    lcd.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  2555                           ;!		 -> dispLCD(), 
  2556                           ;!
  2557                           ;!    S29$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  2558                           ;!		 -> dispLCDstr(), 
  2559                           ;!
  2560                           ;!    lcd.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  2561                           ;!		 -> dispLCDstr(), 
  2562                           ;!
  2563                           ;!    S29$init	PTR FTN()void  size(1) Largest target is 1
  2564                           ;!		 -> dispLCD_init(), 
  2565                           ;!
  2566                           ;!    lcd.init	PTR FTN()void  size(1) Largest target is 1
  2567                           ;!		 -> dispLCD_init(), 
  2568                           ;!
  2569                           
  2570                           
  2571                           ;!
  2572                           ;!Critical Paths under _main in COMMON
  2573                           ;!
  2574                           ;!    None.
  2575                           ;!
  2576                           ;!Critical Paths under _isr in COMMON
  2577                           ;!
  2578                           ;!    _isr->_fifo_inserir
  2579                           ;!
  2580                           ;!Critical Paths under _main in BANK0
  2581                           ;!
  2582                           ;!    _main->_wifi_init
  2583                           ;!    _wifi_init->_initEUSART
  2584                           ;!    _initEUSART->___lldiv
  2585                           ;!    _dispLCD_init->_dispLCD_newChar
  2586                           ;!    _dispLCD_newChar->_dispLCD_instReg
  2587                           ;!    _dispLCD_clr->_dispLCD_instReg
  2588                           ;!    _dispLCD->_dispLCD_lincol
  2589                           ;!    _dispLCD_lincol->___awdiv
  2590                           ;!    _Wifi_state->_wifi_send
  2591                           ;!    _Wifi_mode->_wifi_send
  2592                           ;!    _Wifi_connect->_wifi_send
  2593                           ;!    _wifi_send->_txEUSART
  2594                           ;!
  2595                           ;!Critical Paths under _isr in BANK0
  2596                           ;!
  2597                           ;!    None.
  2598                           ;!
  2599                           ;!Critical Paths under _main in BANK1
  2600                           ;!
  2601                           ;!    None.
  2602                           ;!
  2603                           ;!Critical Paths under _isr in BANK1
  2604                           ;!
  2605                           ;!    None.
  2606                           ;!
  2607                           ;!Critical Paths under _main in BANK3
  2608                           ;!
  2609                           ;!    None.
  2610                           ;!
  2611                           ;!Critical Paths under _isr in BANK3
  2612                           ;!
  2613                           ;!    None.
  2614                           ;!
  2615                           ;!Critical Paths under _main in BANK2
  2616                           ;!
  2617                           ;!    None.
  2618                           ;!
  2619                           ;!Critical Paths under _isr in BANK2
  2620                           ;!
  2621                           ;!    None.
  2622                           
  2623 ;;
  2624 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2625 ;;
  2626                           
  2627                           ;!
  2628                           ;!Call Graph Tables:
  2629                           ;!
  2630                           ;! ---------------------------------------------------------------------------------
  2631                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2632                           ;! ---------------------------------------------------------------------------------
  2633                           ;! (0) _main                                                79    79      0    9051
  2634                           ;!                                             28 BANK0      4     4      0
  2635                           ;!                                              0 BANK1     75    75      0
  2636                           ;!                       _Wifi_connect *
  2637                           ;!                          _Wifi_mode *
  2638                           ;!                         _Wifi_state *
  2639                           ;!                              _delay
  2640                           ;!                            _dispLCD *
  2641                           ;!                         _dispLCD_B0 *
  2642                           ;!                         _dispLCD_B1 *
  2643                           ;!                        _dispLCD_clr *
  2644                           ;!                       _dispLCD_init *
  2645                           ;!                       _fifo_retirar
  2646                           ;!                           _fifo_tam
  2647                           ;!                      _keyboard_init *
  2648                           ;!                          _wifi_init
  2649                           ;! ---------------------------------------------------------------------------------
  2650                           ;! (1) _wifi_init                                            4     0      4     638
  2651                           ;!                                             24 BANK0      4     0      4
  2652                           ;!                         _initEUSART *
  2653                           ;! ---------------------------------------------------------------------------------
  2654                           ;! (2) _initEUSART                                          10     6      4     517
  2655                           ;!                                             14 BANK0     10     6      4
  2656                           ;!                            ___lldiv
  2657                           ;! ---------------------------------------------------------------------------------
  2658                           ;! (3) ___lldiv                                             14     6      8     421
  2659                           ;!                                              0 BANK0     14     6      8
  2660                           ;! ---------------------------------------------------------------------------------
  2661                           ;! (1) _keyboard_init                                        0     0      0       0
  2662                           ;! ---------------------------------------------------------------------------------
  2663                           ;! (1) _fifo_tam                                             0     0      0       0
  2664                           ;! ---------------------------------------------------------------------------------
  2665                           ;! (1) _fifo_retirar                                         3     3      0      37
  2666                           ;!                                              0 BANK0      3     3      0
  2667                           ;! ---------------------------------------------------------------------------------
  2668                           ;! (1) _dispLCD_init                                         1     1      0    1383
  2669                           ;!                                              7 BANK0      1     1      0
  2670                           ;!                              _delay
  2671                           ;!                    _dispLCD_instReg
  2672                           ;!                    _dispLCD_newChar
  2673                           ;! ---------------------------------------------------------------------------------
  2674                           ;! (2) _dispLCD_newChar                                      4     3      1     561
  2675                           ;!                                              3 BANK0      4     3      1
  2676                           ;!                    _dispLCD_dataReg
  2677                           ;!                    _dispLCD_instReg
  2678                           ;! ---------------------------------------------------------------------------------
  2679                           ;! (2) _delay                                                4     2      2     574
  2680                           ;!                                              0 BANK0      4     2      2
  2681                           ;! ---------------------------------------------------------------------------------
  2682                           ;! (1) _dispLCD_clr                                          0     0      0     248
  2683                           ;!                    _dispLCD_instReg
  2684                           ;! ---------------------------------------------------------------------------------
  2685                           ;! (1) _dispLCD_B1                                           0     0      0       0
  2686                           ;! ---------------------------------------------------------------------------------
  2687                           ;! (1) _dispLCD_B0                                           0     0      0       0
  2688                           ;! ---------------------------------------------------------------------------------
  2689                           ;! (1) _dispLCD                                              6     3      3    2678
  2690                           ;!                                             12 BANK0      6     3      3
  2691                           ;!                            ___awdiv
  2692                           ;!                    _dispLCD_dataReg
  2693                           ;!                     _dispLCD_lincol
  2694                           ;! ---------------------------------------------------------------------------------
  2695                           ;! (2) _dispLCD_lincol                                       3     2      1     850
  2696                           ;!                                              9 BANK0      3     2      1
  2697                           ;!                            ___awdiv (ARG)
  2698                           ;!                    _dispLCD_instReg
  2699                           ;! ---------------------------------------------------------------------------------
  2700                           ;! (3) _dispLCD_instReg                                      3     3      0     248
  2701                           ;!                                              0 BANK0      3     3      0
  2702                           ;! ---------------------------------------------------------------------------------
  2703                           ;! (3) _dispLCD_dataReg                                      2     2      0      62
  2704                           ;!                                              0 BANK0      2     2      0
  2705                           ;! ---------------------------------------------------------------------------------
  2706                           ;! (2) ___awdiv                                              9     5      4    1345
  2707                           ;!                                              0 BANK0      9     5      4
  2708                           ;! ---------------------------------------------------------------------------------
  2709                           ;! (1) _Wifi_state                                           1     1      0     881
  2710                           ;!                                              3 BANK0      1     1      0
  2711                           ;!                          _wifi_send
  2712                           ;! ---------------------------------------------------------------------------------
  2713                           ;! (1) _Wifi_mode                                            2     1      1    1039
  2714                           ;!                                              3 BANK0      2     1      1
  2715                           ;!                          _wifi_send
  2716                           ;! ---------------------------------------------------------------------------------
  2717                           ;! (1) _Wifi_connect                                         1     1      0     881
  2718                           ;!                                              3 BANK0      1     1      0
  2719                           ;!                          _wifi_send
  2720                           ;! ---------------------------------------------------------------------------------
  2721                           ;! (2) _wifi_send                                            2     1      1     881
  2722                           ;!                                              1 BANK0      2     1      1
  2723                           ;!                           _txEUSART *
  2724                           ;!                     _txStatusEUSART *
  2725                           ;! ---------------------------------------------------------------------------------
  2726                           ;! (3) _txStatusEUSART                                       0     0      0       0
  2727                           ;! ---------------------------------------------------------------------------------
  2728                           ;! (3) _txEUSART                                             1     0      1      96
  2729                           ;!                                              0 BANK0      1     0      1
  2730                           ;! ---------------------------------------------------------------------------------
  2731                           ;! Estimated maximum stack depth 3
  2732                           ;! ---------------------------------------------------------------------------------
  2733                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2734                           ;! ---------------------------------------------------------------------------------
  2735                           ;! (4) _isr                                                  3     3      0      22
  2736                           ;!                                              3 COMMON     3     3      0
  2737                           ;!                       _fifo_inserir
  2738                           ;! ---------------------------------------------------------------------------------
  2739                           ;! (5) _fifo_inserir                                         3     3      0      22
  2740                           ;!                                              0 COMMON     3     3      0
  2741                           ;! ---------------------------------------------------------------------------------
  2742                           ;! Estimated maximum stack depth 5
  2743                           ;! ---------------------------------------------------------------------------------
  2744                           ;!
  2745                           ;! Call Graph Graphs:
  2746                           ;!
  2747                           ;! _main (ROOT)
  2748                           ;!   _Wifi_connect *
  2749                           ;!     _wifi_send
  2750                           ;!       _txEUSART *
  2751                           ;!       _txStatusEUSART *
  2752                           ;!   _Wifi_mode *
  2753                           ;!     _wifi_send
  2754                           ;!       _txEUSART *
  2755                           ;!       _txStatusEUSART *
  2756                           ;!   _Wifi_state *
  2757                           ;!     _wifi_send
  2758                           ;!       _txEUSART *
  2759                           ;!       _txStatusEUSART *
  2760                           ;!   _delay *
  2761                           ;!   _dispLCD *
  2762                           ;!     ___awdiv
  2763                           ;!     _dispLCD_dataReg
  2764                           ;!     _dispLCD_lincol
  2765                           ;!       ___awdiv (ARG)
  2766                           ;!       _dispLCD_instReg (ARG)
  2767                           ;!   _dispLCD_B0 *
  2768                           ;!   _dispLCD_B1 *
  2769                           ;!   _dispLCD_clr *
  2770                           ;!     _dispLCD_instReg
  2771                           ;!   _dispLCD_init *
  2772                           ;!     _delay
  2773                           ;!     _dispLCD_instReg
  2774                           ;!     _dispLCD_newChar
  2775                           ;!       _dispLCD_dataReg
  2776                           ;!       _dispLCD_instReg
  2777                           ;!   _fifo_retirar *
  2778                           ;!   _fifo_tam *
  2779                           ;!   _keyboard_init *
  2780                           ;!   _wifi_init *
  2781                           ;!     _initEUSART *
  2782                           ;!       ___lldiv
  2783                           ;!
  2784                           ;! _isr (ROOT)
  2785                           ;!   _fifo_inserir
  2786                           ;!
  2787                           
  2788                           ;! Address spaces:
  2789                           
  2790                           ;!Name               Size   Autos  Total    Cost      Usage
  2791                           ;!BANK3               60      0      49       9       76.0%
  2792                           ;!BITBANK3            60      0       0       8        0.0%
  2793                           ;!SFR3                 0      0       0       4        0.0%
  2794                           ;!BITSFR3              0      0       0       4        0.0%
  2795                           ;!BANK2               60      0       0      11        0.0%
  2796                           ;!BITBANK2            60      0       0      10        0.0%
  2797                           ;!SFR2                 0      0       0       5        0.0%
  2798                           ;!BITSFR2              0      0       0       5        0.0%
  2799                           ;!BANK1               50     4B      4F       7       98.8%
  2800                           ;!BITBANK1            50      0       0       6        0.0%
  2801                           ;!SFR1                 0      0       0       2        0.0%
  2802                           ;!BITSFR1              0      0       0       2        0.0%
  2803                           ;!BANK0               50     20      49       5       91.3%
  2804                           ;!BITBANK0            50      0       0       4        0.0%
  2805                           ;!SFR0                 0      0       0       1        0.0%
  2806                           ;!BITSFR0              0      0       0       1        0.0%
  2807                           ;!COMMON               E      6       8       1       57.1%
  2808                           ;!BITCOMMON            E      0       0       0        0.0%
  2809                           ;!CODE                 0      0       0       0        0.0%
  2810                           ;!DATA                 0      0      E9      12        0.0%
  2811                           ;!ABS                  0      0      E9       3        0.0%
  2812                           ;!NULL                 0      0       0       0        0.0%
  2813                           ;!STACK                0      0       0       2        0.0%
  2814                           ;!EEDATA             100      0       0       0        0.0%
  2815                           
  2816                           	global	_main
  2817                           
  2818 ;; *************** function _main *****************
  2819 ;; Defined at:
  2820 ;;		line 44 in file "main.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  d               1   73[BANK1 ] unsigned char 
  2825 ;;  hex            40    0[BANK1 ] unsigned char [40]
  2826 ;;  vtr            33   40[BANK1 ] unsigned char [33]
  2827 ;;  indice          1   74[BANK1 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : B00/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         0       0      75       0       0
  2839 ;;      Temps:          0       4       0       0       0
  2840 ;;      Totals:         0       4      75       0       0
  2841 ;;Total ram usage:       79 bytes
  2842 ;; Hardware stack levels required when called:    5
  2843 ;; This function calls:
  2844 ;;		_Wifi_connect
  2845 ;;		_Wifi_mode
  2846 ;;		_Wifi_state
  2847 ;;		_delay
  2848 ;;		_dispLCD
  2849 ;;		_dispLCD_B0
  2850 ;;		_dispLCD_B1
  2851 ;;		_dispLCD_clr
  2852 ;;		_dispLCD_init
  2853 ;;		_fifo_retirar
  2854 ;;		_fifo_tam
  2855 ;;		_keyboard_init
  2856 ;;		_wifi_init
  2857 ;; This function is called by:
  2858 ;;		Startup code after reset
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2862                           	file	"main.c"
  2863                           	line	44
  2864                           global __pmaintext
  2865                           __pmaintext:	;psect for function _main
  2866  0078                     psect	maintext
  2867                           	file	"main.c"
  2868                           	line	44
  2869                           	global	__size_of_main
  2870                           	__size_of_main	equ	__end_of_main-_main
  2871  01BC                     	
  2872                           _main:	
  2873  0078                     ;incstack = 0
  2874                           	opt	stack 3
  2875                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2876                           	line	51
  2877                           	
  2878                           l2248:	
  2879  0078                     ;main.c: 50:     const char string[] = "OK";;main.c: 51:     unsigned char vtr[33] = " "
                                 ;
  2880                           	movlw	(main@vtr)&0ffh
  2881  0078  30C8               	movwf	fsr0
  2882  0079  0084               	movlw	low(main@F1434)
  2883  007A  30B8               	bcf	status, 5	;RP0=0, select bank0
  2884  007B  1283               	bcf	status, 6	;RP1=0, select bank0
  2885  007C  1303               	movwf	(??_main+0)+0
  2886  007D  00BC               	movf	fsr0,w
  2887  007E  0804               	movwf	((??_main+0)+0+1)
  2888  007F  00BD               	movlw	33
  2889  0080  3021               	movwf	((??_main+0)+0+2)
  2890  0081  00BE               u1970:
  2891  0082                     	movf	(??_main+0)+0,w
  2892  0082  083C               	movwf	fsr0
  2893  0083  0084               	bsf	status, 7	;select IRP bank3
  2894  0084  1783               	
  2895                           	movf	indf,w
  2896  0085  0800               	movwf	((??_main+0)+0+3)
  2897  0086  00BF               	incf	(??_main+0)+0,f
  2898  0087  0ABC               	movf	((??_main+0)+0+1),w
  2899  0088  083D               	movwf	fsr0
  2900  0089  0084               	bcf	status, 7	;select IRP bank1
  2901  008A  1383               	
  2902                           	movf	((??_main+0)+0+3),w
  2903  008B  083F               	movwf	indf
  2904  008C  0080               	incf	((??_main+0)+0+1),f
  2905  008D  0ABD               	decfsz	((??_main+0)+0+2),f
  2906  008E  0BBE               	goto	u1970
  2907  008F  2882               	
  2908                           	line	52
  2909                           ;main.c: 52:     unsigned char hex[40] = " ";
  2910                           	movlw	(main@hex)&0ffh
  2911  0090  30A0               	movwf	fsr0
  2912  0091  0084               	movlw	low(main@F1436)
  2913  0092  3090               	movwf	(??_main+0)+0
  2914  0093  00BC               	movf	fsr0,w
  2915  0094  0804               	movwf	((??_main+0)+0+1)
  2916  0095  00BD               	movlw	40
  2917  0096  3028               	movwf	((??_main+0)+0+2)
  2918  0097  00BE               u1980:
  2919  0098                     	movf	(??_main+0)+0,w
  2920  0098  083C               	movwf	fsr0
  2921  0099  0084               	bsf	status, 7	;select IRP bank3
  2922  009A  1783               	
  2923                           	movf	indf,w
  2924  009B  0800               	movwf	((??_main+0)+0+3)
  2925  009C  00BF               	incf	(??_main+0)+0,f
  2926  009D  0ABC               	movf	((??_main+0)+0+1),w
  2927  009E  083D               	movwf	fsr0
  2928  009F  0084               	bcf	status, 7	;select IRP bank1
  2929  00A0  1383               	
  2930                           	movf	((??_main+0)+0+3),w
  2931  00A1  083F               	movwf	indf
  2932  00A2  0080               	incf	((??_main+0)+0+1),f
  2933  00A3  0ABD               	decfsz	((??_main+0)+0+2),f
  2934  00A4  0BBE               	goto	u1980
  2935  00A5  2898               	
  2936                           	line	53
  2937                           	
  2938                           l2250:	
  2939  00A6                     ;main.c: 53:     unsigned char indice = 0;
  2940                           	bsf	status, 5	;RP0=1, select bank1
  2941  00A6  1683               	bcf	status, 6	;RP1=0, select bank1
  2942  00A7  1303               	clrf	(main@indice)^080h
  2943  00A8  01EA               	line	55
  2944                           	
  2945                           l2252:	
  2946  00A9                     ;main.c: 55:     TRISAbits.TRISA4 = 1;
  2947                           	bsf	(133)^080h,4	;volatile
  2948  00A9  1605               	line	57
  2949                           	
  2950                           l2254:	
  2951  00AA                     ;main.c: 57:     delay(1000);
  2952                           	movlw	0E8h
  2953  00AA  30E8               	bcf	status, 5	;RP0=0, select bank0
  2954  00AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2955  00AC  1303               	movwf	(delay@t)
  2956  00AD  00A0               	movlw	03h
  2957  00AE  3003               	movwf	((delay@t))+1
  2958  00AF  00A1               	fcall	_delay
  2959  00B0  120A  118A  269E  120A  118A  	line	58
  2960                           	
  2961                           l2256:	
  2962  00B5                     ;main.c: 58:     lcd.init();
  2963                           	bcf	status, 5	;RP0=0, select bank0
  2964  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2965  00B6  1303               	movf	(_lcd),w
  2966  00B7  0850               	fcall	fptable
  2967  00B8  120A  118A  2048  120A  118A  	line	59
  2968                           	
  2969                           l2258:	
  2970  00BD                     ;main.c: 59:     keyboard.init();
  2971                           	bsf	status, 5	;RP0=1, select bank1
  2972  00BD  1683               	bcf	status, 6	;RP1=0, select bank1
  2973  00BE  1303               	movf	(0+low(_keyboard|((0x0)<<8)+03h))^080h,w
  2974  00BF  086E               	fcall	fptable
  2975  00C0  120A  118A  2048  120A  118A  	line	60
  2976                           	
  2977                           l2260:	
  2978  00C5                     ;main.c: 60:     wifi_init(115200);
  2979                           	movlw	0
  2980  00C5  3000               	bcf	status, 5	;RP0=0, select bank0
  2981  00C6  1283               	bcf	status, 6	;RP1=0, select bank0
  2982  00C7  1303               	movwf	(wifi_init@br+3)
  2983  00C8  00BB               	movlw	01h
  2984  00C9  3001               	movwf	(wifi_init@br+2)
  2985  00CA  00BA               	movlw	0C2h
  2986  00CB  30C2               	movwf	(wifi_init@br+1)
  2987  00CC  00B9               	movlw	0
  2988  00CD  3000               	movwf	(wifi_init@br)
  2989  00CE  00B8               
  2990                           	fcall	_wifi_init
  2991  00CF  120A  118A  2745  120A  118A  	line	61
  2992                           	
  2993                           l2262:	
  2994  00D4                     ;main.c: 61:     delay(1000);
  2995                           	movlw	0E8h
  2996  00D4  30E8               	bcf	status, 5	;RP0=0, select bank0
  2997  00D5  1283               	bcf	status, 6	;RP1=0, select bank0
  2998  00D6  1303               	movwf	(delay@t)
  2999  00D7  00A0               	movlw	03h
  3000  00D8  3003               	movwf	((delay@t))+1
  3001  00D9  00A1               	fcall	_delay
  3002  00DA  120A  118A  269E  120A  118A  	goto	l2264
  3003  00DF  28E0               	line	67
  3004                           ;main.c: 67:     while( 1 )
  3005                           	
  3006                           l75:	
  3007  00E0                     	line	69
  3008                           	
  3009                           l2264:	
  3010  00E0                     ;main.c: 68:     {;main.c: 69:         if( !PORTAbits.RA4 )
  3011                           	bcf	status, 5	;RP0=0, select bank0
  3012  00E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3013  00E1  1303               	btfsc	(5),4	;volatile
  3014  00E2  1A05               	goto	u1991
  3015  00E3  28E5               	goto	u1990
  3016  00E4  28E6               u1991:
  3017  00E5                     	goto	l2272
  3018  00E5  2902               u1990:
  3019  00E6                     	line	71
  3020                           	
  3021                           l2266:	
  3022  00E6                     ;main.c: 70:         {;main.c: 71:             lcd.clr();
  3023                           	movf	(0+low(_lcd|((0x0)<<8)+04h)),w
  3024  00E6  0854               	fcall	fptable
  3025  00E7  120A  118A  2048  120A  118A  	line	72
  3026                           	
  3027                           l2268:	
  3028  00EC                     ;main.c: 72:             indice = 0;
  3029                           	bsf	status, 5	;RP0=1, select bank1
  3030  00EC  1683               	bcf	status, 6	;RP1=0, select bank1
  3031  00ED  1303               	clrf	(main@indice)^080h
  3032  00EE  01EA               	line	73
  3033                           	
  3034                           l2270:	
  3035  00EF                     ;main.c: 73:             wifi.mode(1);
  3036                           	bcf	status, 5	;RP0=0, select bank0
  3037  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  3038  00F0  1303               	clrf	(Wifi_mode@d)
  3039  00F1  01A3               	incf	(Wifi_mode@d),f
  3040  00F2  0AA3               	movf	(0+low(_wifi|((0x0)<<8)+03h)),w
  3041  00F3  084B               	fcall	fptable
  3042  00F4  120A  118A  2048  120A  118A  	line	74
  3043                           ;main.c: 74:             while( !PORTAbits.RA4 )
  3044                           	goto	l77
  3045  00F9  28FA               	
  3046                           l78:	
  3047  00FA                     	line	75
  3048                           ;main.c: 75:                 ;
  3049                           	
  3050                           l77:	
  3051  00FA                     	line	74
  3052                           ;main.c: 74:             while( !PORTAbits.RA4 )
  3053                           	bcf	status, 5	;RP0=0, select bank0
  3054  00FA  1283               	bcf	status, 6	;RP1=0, select bank0
  3055  00FB  1303               	btfss	(5),4	;volatile
  3056  00FC  1E05               	goto	u2001
  3057  00FD  28FF               	goto	u2000
  3058  00FE  2900               u2001:
  3059  00FF                     	goto	l77
  3060  00FF  28FA               u2000:
  3061  0100                     	goto	l2272
  3062  0100  2902               	
  3063                           l79:	
  3064  0101                     	goto	l2272
  3065  0101  2902               	line	76
  3066                           ;main.c: 76:         }
  3067                           	
  3068                           l76:	
  3069  0102                     	line	78
  3070                           	
  3071                           l2272:	
  3072  0102                     ;main.c: 78:         if( lcd.B0() )
  3073                           	movf	(0+low(_lcd|((0x0)<<8)+05h)),w
  3074  0102  0855               	fcall	fptable
  3075  0103  120A  118A  2048  120A  118A  	xorlw	0
  3076  0108  3A00               	skipnz
  3077  0109  1903               	goto	u2011
  3078  010A  290C               	goto	u2010
  3079  010B  290D               u2011:
  3080  010C                     	goto	l2282
  3081  010C  2931               u2010:
  3082  010D                     	line	80
  3083                           	
  3084                           l2274:	
  3085  010D                     ;main.c: 79:         {;main.c: 80:             lcd.clr();
  3086                           	bcf	status, 5	;RP0=0, select bank0
  3087  010D  1283               	bcf	status, 6	;RP1=0, select bank0
  3088  010E  1303               	movf	(0+low(_lcd|((0x0)<<8)+04h)),w
  3089  010F  0854               	fcall	fptable
  3090  0110  120A  118A  2048  120A  118A  	line	81
  3091                           	
  3092                           l2276:	
  3093  0115                     ;main.c: 81:             indice = 0;
  3094                           	bsf	status, 5	;RP0=1, select bank1
  3095  0115  1683               	bcf	status, 6	;RP1=0, select bank1
  3096  0116  1303               	clrf	(main@indice)^080h
  3097  0117  01EA               	line	82
  3098                           	
  3099                           l2278:	
  3100  0118                     ;main.c: 82:             wifi.state();
  3101                           	bcf	status, 5	;RP0=0, select bank0
  3102  0118  1283               	bcf	status, 6	;RP1=0, select bank0
  3103  0119  1303               	movf	(0+low(_wifi|((0x0)<<8)+07h)),w
  3104  011A  084F               	fcall	fptable
  3105  011B  120A  118A  2048  120A  118A  	line	83
  3106                           ;main.c: 83:             while( lcd.B0() )
  3107                           	goto	l2280
  3108  0120  2922               	
  3109                           l82:	
  3110  0121                     	goto	l2280
  3111  0121  2922               	line	84
  3112                           ;main.c: 84:                 ;
  3113                           	
  3114                           l81:	
  3115  0122                     	line	83
  3116                           	
  3117                           l2280:	
  3118  0122                     ;main.c: 83:             while( lcd.B0() )
  3119                           	bcf	status, 5	;RP0=0, select bank0
  3120  0122  1283               	bcf	status, 6	;RP1=0, select bank0
  3121  0123  1303               	movf	(0+low(_lcd|((0x0)<<8)+05h)),w
  3122  0124  0855               	fcall	fptable
  3123  0125  120A  118A  2048  120A  118A  	xorlw	0
  3124  012A  3A00               	skipz
  3125  012B  1D03               	goto	u2021
  3126  012C  292E               	goto	u2020
  3127  012D  292F               u2021:
  3128  012E                     	goto	l2280
  3129  012E  2922               u2020:
  3130  012F                     	goto	l2282
  3131  012F  2931               	
  3132                           l83:	
  3133  0130                     	goto	l2282
  3134  0130  2931               	line	85
  3135                           ;main.c: 85:         }
  3136                           	
  3137                           l80:	
  3138  0131                     	line	87
  3139                           	
  3140                           l2282:	
  3141  0131                     ;main.c: 87:         if( lcd.B1() )
  3142                           	bcf	status, 5	;RP0=0, select bank0
  3143  0131  1283               	bcf	status, 6	;RP1=0, select bank0
  3144  0132  1303               	movf	(0+low(_lcd|((0x0)<<8)+06h)),w
  3145  0133  0856               	fcall	fptable
  3146  0134  120A  118A  2048  120A  118A  	xorlw	0
  3147  0139  3A00               	skipnz
  3148  013A  1903               	goto	u2031
  3149  013B  293D               	goto	u2030
  3150  013C  293E               u2031:
  3151  013D                     	goto	l2316
  3152  013D  2A16               u2030:
  3153  013E                     	line	89
  3154                           	
  3155                           l2284:	
  3156  013E                     ;main.c: 88:         {;main.c: 89:             lcd.clr();
  3157                           	bcf	status, 5	;RP0=0, select bank0
  3158  013E  1283               	bcf	status, 6	;RP1=0, select bank0
  3159  013F  1303               	movf	(0+low(_lcd|((0x0)<<8)+04h)),w
  3160  0140  0854               	fcall	fptable
  3161  0141  120A  118A  2048  120A  118A  	line	90
  3162                           	
  3163                           l2286:	
  3164  0146                     ;main.c: 90:             indice = 0;
  3165                           	bsf	status, 5	;RP0=1, select bank1
  3166  0146  1683               	bcf	status, 6	;RP1=0, select bank1
  3167  0147  1303               	clrf	(main@indice)^080h
  3168  0148  01EA               	line	91
  3169                           	
  3170                           l2288:	
  3171  0149                     ;main.c: 91:             wifi.connect();
  3172                           	bcf	status, 5	;RP0=0, select bank0
  3173  0149  1283               	bcf	status, 6	;RP1=0, select bank0
  3174  014A  1303               	movf	(0+low(_wifi|((0x0)<<8)+04h)),w
  3175  014B  084C               	fcall	fptable
  3176  014C  120A  118A  2048  120A  118A  	line	92
  3177                           ;main.c: 92:             while( lcd.B1() )
  3178                           	goto	l2290
  3179  0151  2953               	
  3180                           l86:	
  3181  0152                     	goto	l2290
  3182  0152  2953               	line	93
  3183                           ;main.c: 93:                 ;
  3184                           	
  3185                           l85:	
  3186  0153                     	line	92
  3187                           	
  3188                           l2290:	
  3189  0153                     ;main.c: 92:             while( lcd.B1() )
  3190                           	bcf	status, 5	;RP0=0, select bank0
  3191  0153  1283               	bcf	status, 6	;RP1=0, select bank0
  3192  0154  1303               	movf	(0+low(_lcd|((0x0)<<8)+06h)),w
  3193  0155  0856               	fcall	fptable
  3194  0156  120A  118A  2048  120A  118A  	xorlw	0
  3195  015B  3A00               	skipz
  3196  015C  1D03               	goto	u2041
  3197  015D  295F               	goto	u2040
  3198  015E  2960               u2041:
  3199  015F                     	goto	l2290
  3200  015F  2953               u2040:
  3201  0160                     	goto	l2316
  3202  0160  2A16               	
  3203                           l87:	
  3204  0161                     	goto	l2316
  3205  0161  2A16               	line	94
  3206                           ;main.c: 94:         }
  3207                           	
  3208                           l84:	
  3209  0162                     	line	96
  3210                           ;main.c: 96:         while( fifo_tam() )
  3211                           	goto	l2316
  3212  0162  2A16               	
  3213                           l89:	
  3214  0163                     	line	98
  3215                           	
  3216                           l2292:	
  3217  0163                     ;main.c: 97:         {;main.c: 98:             unsigned char d = fifo_retirar();
  3218                           	fcall	_fifo_retirar
  3219  0163  120A  118A  26BD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3220  0168  1283               	bcf	status, 6	;RP1=0, select bank0
  3221  0169  1303               	movwf	(??_main+0)+0
  3222  016A  00BC               	movf	(??_main+0)+0,w
  3223  016B  083C               	bsf	status, 5	;RP0=1, select bank1
  3224  016C  1683               	bcf	status, 6	;RP1=0, select bank1
  3225  016D  1303               	movwf	(main@d)^080h
  3226  016E  00E9               	line	99
  3227                           	
  3228                           l2294:	
  3229  016F                     ;main.c: 99:             if( d >= 20 )
  3230                           	movlw	low(014h)
  3231  016F  3014               	subwf	(main@d)^080h,w
  3232  0170  0269               	skipc
  3233  0171  1C03               	goto	u2051
  3234  0172  2974               	goto	u2050
  3235  0173  2975               u2051:
  3236  0174                     	goto	l2300
  3237  0174  2993               u2050:
  3238  0175                     	line	101
  3239                           	
  3240                           l2296:	
  3241  0175                     ;main.c: 100:             {;main.c: 101:                 vtr[indice] = d;
  3242                           	movf	(main@d)^080h,w
  3243  0175  0869               	bcf	status, 5	;RP0=0, select bank0
  3244  0176  1283               	bcf	status, 6	;RP1=0, select bank0
  3245  0177  1303               	movwf	(??_main+0)+0
  3246  0178  00BC               	bsf	status, 5	;RP0=1, select bank1
  3247  0179  1683               	bcf	status, 6	;RP1=0, select bank1
  3248  017A  1303               	movf	(main@indice)^080h,w
  3249  017B  086A               	addlw	low(main@vtr|((0x0)<<8))&0ffh
  3250  017C  3EC8               	movwf	fsr0
  3251  017D  0084               	bcf	status, 5	;RP0=0, select bank0
  3252  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  3253  017F  1303               	movf	(??_main+0)+0,w
  3254  0180  083C               	bcf	status, 7	;select IRP bank1
  3255  0181  1383               	movwf	indf
  3256  0182  0080               	line	102
  3257                           	
  3258                           l2298:	
  3259  0183                     ;main.c: 102:                 indice = ++indice % 32;
  3260                           	movlw	low(01h)
  3261  0183  3001               	movwf	(??_main+0)+0
  3262  0184  00BC               	movf	(??_main+0)+0,w
  3263  0185  083C               	bsf	status, 5	;RP0=1, select bank1
  3264  0186  1683               	bcf	status, 6	;RP1=0, select bank1
  3265  0187  1303               	addwf	(main@indice)^080h,f
  3266  0188  07EA               	movf	((main@indice)^080h),w
  3267  0189  086A               	andlw	01Fh
  3268  018A  391F               	bcf	status, 5	;RP0=0, select bank0
  3269  018B  1283               	bcf	status, 6	;RP1=0, select bank0
  3270  018C  1303               	movwf	(??_main+1)+0
  3271  018D  00BD               	movf	(??_main+1)+0,w
  3272  018E  083D               	bsf	status, 5	;RP0=1, select bank1
  3273  018F  1683               	bcf	status, 6	;RP1=0, select bank1
  3274  0190  1303               	movwf	(main@indice)^080h
  3275  0191  00EA               	line	103
  3276                           ;main.c: 103:             }
  3277                           	goto	l2316
  3278  0192  2A16               	line	104
  3279                           ;main.c: 104:             else if( d == '\r' )
  3280                           	
  3281                           l90:	
  3282  0193                     	
  3283                           l2300:	
  3284  0193                     		movlw	13
  3285  0193  300D               	xorwf	((main@d)^080h),w
  3286  0194  0669               	btfss	status,2
  3287  0195  1D03               	goto	u2061
  3288  0196  2998               	goto	u2060
  3289  0197  2999               u2061:
  3290  0198                     	goto	l2308
  3291  0198  29D3               u2060:
  3292  0199                     	line	106
  3293                           	
  3294                           l2302:	
  3295  0199                     ;main.c: 105:             {;main.c: 106:                 vtr[indice] = "null";
  3296                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3297  0199  30B3               	bcf	status, 5	;RP0=0, select bank0
  3298  019A  1283               	bcf	status, 6	;RP1=0, select bank0
  3299  019B  1303               	movwf	(??_main+0)+0
  3300  019C  00BC               	bsf	status, 5	;RP0=1, select bank1
  3301  019D  1683               	bcf	status, 6	;RP1=0, select bank1
  3302  019E  1303               	movf	(main@indice)^080h,w
  3303  019F  086A               	addlw	low(main@vtr|((0x0)<<8))&0ffh
  3304  01A0  3EC8               	movwf	fsr0
  3305  01A1  0084               	bcf	status, 5	;RP0=0, select bank0
  3306  01A2  1283               	bcf	status, 6	;RP1=0, select bank0
  3307  01A3  1303               	movf	(??_main+0)+0,w
  3308  01A4  083C               	bcf	status, 7	;select IRP bank1
  3309  01A5  1383               	movwf	indf
  3310  01A6  0080               	line	107
  3311                           	
  3312                           l2304:	
  3313  01A7                     ;main.c: 107:                 indice = ++indice % 32;
  3314                           	movlw	low(01h)
  3315  01A7  3001               	movwf	(??_main+0)+0
  3316  01A8  00BC               	movf	(??_main+0)+0,w
  3317  01A9  083C               	bsf	status, 5	;RP0=1, select bank1
  3318  01AA  1683               	bcf	status, 6	;RP1=0, select bank1
  3319  01AB  1303               	addwf	(main@indice)^080h,f
  3320  01AC  07EA               	movf	((main@indice)^080h),w
  3321  01AD  086A               	andlw	01Fh
  3322  01AE  391F               	bcf	status, 5	;RP0=0, select bank0
  3323  01AF  1283               	bcf	status, 6	;RP1=0, select bank0
  3324  01B0  1303               	movwf	(??_main+1)+0
  3325  01B1  00BD               	movf	(??_main+1)+0,w
  3326  01B2  083D               	bsf	status, 5	;RP0=1, select bank1
  3327  01B3  1683               	bcf	status, 6	;RP1=0, select bank1
  3328  01B4  1303               	movwf	(main@indice)^080h
  3329  01B5  00EA               	line	108
  3330                           	
  3331                           l2306:	
  3332  01B6                     ;main.c: 108:                 vtr[indice] = "null";
  3333                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3334  01B6  30B3               	bcf	status, 5	;RP0=0, select bank0
  3335  01B7  1283               	bcf	status, 6	;RP1=0, select bank0
  3336  01B8  1303               	movwf	(??_main+0)+0
  3337  01B9  00BC               	bsf	status, 5	;RP0=1, select bank1
  3338  01BA  1683               	bcf	status, 6	;RP1=0, select bank1
  3339  01BB  1303               	movf	(main@indice)^080h,w
  3340  01BC  086A               	addlw	low(main@vtr|((0x0)<<8))&0ffh
  3341  01BD  3EC8               	movwf	fsr0
  3342  01BE  0084               	bcf	status, 5	;RP0=0, select bank0
  3343  01BF  1283               	bcf	status, 6	;RP1=0, select bank0
  3344  01C0  1303               	movf	(??_main+0)+0,w
  3345  01C1  083C               	movwf	indf
  3346  01C2  0080               	line	109
  3347                           ;main.c: 109:                 indice = ++indice % 32;
  3348                           	movlw	low(01h)
  3349  01C3  3001               	movwf	(??_main+0)+0
  3350  01C4  00BC               	movf	(??_main+0)+0,w
  3351  01C5  083C               	bsf	status, 5	;RP0=1, select bank1
  3352  01C6  1683               	bcf	status, 6	;RP1=0, select bank1
  3353  01C7  1303               	addwf	(main@indice)^080h,f
  3354  01C8  07EA               	movf	((main@indice)^080h),w
  3355  01C9  086A               	andlw	01Fh
  3356  01CA  391F               	bcf	status, 5	;RP0=0, select bank0
  3357  01CB  1283               	bcf	status, 6	;RP1=0, select bank0
  3358  01CC  1303               	movwf	(??_main+1)+0
  3359  01CD  00BD               	movf	(??_main+1)+0,w
  3360  01CE  083D               	bsf	status, 5	;RP0=1, select bank1
  3361  01CF  1683               	bcf	status, 6	;RP1=0, select bank1
  3362  01D0  1303               	movwf	(main@indice)^080h
  3363  01D1  00EA               	line	110
  3364                           ;main.c: 110:             }
  3365                           	goto	l2316
  3366  01D2  2A16               	line	111
  3367                           ;main.c: 111:             else if( d == '\n' )
  3368                           	
  3369                           l92:	
  3370  01D3                     	
  3371                           l2308:	
  3372  01D3                     		movlw	10
  3373  01D3  300A               	xorwf	((main@d)^080h),w
  3374  01D4  0669               	btfss	status,2
  3375  01D5  1D03               	goto	u2071
  3376  01D6  29D8               	goto	u2070
  3377  01D7  29D9               u2071:
  3378  01D8                     	goto	l2316
  3379  01D8  2A16               u2070:
  3380  01D9                     	line	113
  3381                           	
  3382                           l2310:	
  3383  01D9                     ;main.c: 112:             {;main.c: 113:                 vtr[indice] = "null";
  3384                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3385  01D9  30B3               	bcf	status, 5	;RP0=0, select bank0
  3386  01DA  1283               	bcf	status, 6	;RP1=0, select bank0
  3387  01DB  1303               	movwf	(??_main+0)+0
  3388  01DC  00BC               	bsf	status, 5	;RP0=1, select bank1
  3389  01DD  1683               	bcf	status, 6	;RP1=0, select bank1
  3390  01DE  1303               	movf	(main@indice)^080h,w
  3391  01DF  086A               	addlw	low(main@vtr|((0x0)<<8))&0ffh
  3392  01E0  3EC8               	movwf	fsr0
  3393  01E1  0084               	bcf	status, 5	;RP0=0, select bank0
  3394  01E2  1283               	bcf	status, 6	;RP1=0, select bank0
  3395  01E3  1303               	movf	(??_main+0)+0,w
  3396  01E4  083C               	bcf	status, 7	;select IRP bank1
  3397  01E5  1383               	movwf	indf
  3398  01E6  0080               	line	114
  3399                           	
  3400                           l2312:	
  3401  01E7                     ;main.c: 114:                 indice = ++indice % 32;
  3402                           	movlw	low(01h)
  3403  01E7  3001               	movwf	(??_main+0)+0
  3404  01E8  00BC               	movf	(??_main+0)+0,w
  3405  01E9  083C               	bsf	status, 5	;RP0=1, select bank1
  3406  01EA  1683               	bcf	status, 6	;RP1=0, select bank1
  3407  01EB  1303               	addwf	(main@indice)^080h,f
  3408  01EC  07EA               	movf	((main@indice)^080h),w
  3409  01ED  086A               	andlw	01Fh
  3410  01EE  391F               	bcf	status, 5	;RP0=0, select bank0
  3411  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  3412  01F0  1303               	movwf	(??_main+1)+0
  3413  01F1  00BD               	movf	(??_main+1)+0,w
  3414  01F2  083D               	bsf	status, 5	;RP0=1, select bank1
  3415  01F3  1683               	bcf	status, 6	;RP1=0, select bank1
  3416  01F4  1303               	movwf	(main@indice)^080h
  3417  01F5  00EA               	line	115
  3418                           	
  3419                           l2314:	
  3420  01F6                     ;main.c: 115:                 vtr[indice] = "null";
  3421                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3422  01F6  30B3               	bcf	status, 5	;RP0=0, select bank0
  3423  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  3424  01F8  1303               	movwf	(??_main+0)+0
  3425  01F9  00BC               	bsf	status, 5	;RP0=1, select bank1
  3426  01FA  1683               	bcf	status, 6	;RP1=0, select bank1
  3427  01FB  1303               	movf	(main@indice)^080h,w
  3428  01FC  086A               	addlw	low(main@vtr|((0x0)<<8))&0ffh
  3429  01FD  3EC8               	movwf	fsr0
  3430  01FE  0084               	bcf	status, 5	;RP0=0, select bank0
  3431  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  3432  0200  1303               	movf	(??_main+0)+0,w
  3433  0201  083C               	movwf	indf
  3434  0202  0080               	line	116
  3435                           ;main.c: 116:                 indice = ++indice % 32;
  3436                           	movlw	low(01h)
  3437  0203  3001               	movwf	(??_main+0)+0
  3438  0204  00BC               	movf	(??_main+0)+0,w
  3439  0205  083C               	bsf	status, 5	;RP0=1, select bank1
  3440  0206  1683               	bcf	status, 6	;RP1=0, select bank1
  3441  0207  1303               	addwf	(main@indice)^080h,f
  3442  0208  07EA               	movf	((main@indice)^080h),w
  3443  0209  086A               	andlw	01Fh
  3444  020A  391F               	bcf	status, 5	;RP0=0, select bank0
  3445  020B  1283               	bcf	status, 6	;RP1=0, select bank0
  3446  020C  1303               	movwf	(??_main+1)+0
  3447  020D  00BD               	movf	(??_main+1)+0,w
  3448  020E  083D               	bsf	status, 5	;RP0=1, select bank1
  3449  020F  1683               	bcf	status, 6	;RP1=0, select bank1
  3450  0210  1303               	movwf	(main@indice)^080h
  3451  0211  00EA               	goto	l2316
  3452  0212  2A16               	line	117
  3453                           ;main.c: 117:             }
  3454                           	
  3455                           l94:	
  3456  0213                     	goto	l2316
  3457  0213  2A16               	
  3458                           l93:	
  3459  0214                     	goto	l2316
  3460  0214  2A16               	
  3461                           l91:	
  3462  0215                     	goto	l2316
  3463  0215  2A16               	line	118
  3464                           ;main.c: 118:         }
  3465                           	
  3466                           l88:	
  3467  0216                     	line	96
  3468                           	
  3469                           l2316:	
  3470  0216                     ;main.c: 96:         while( fifo_tam() )
  3471                           	fcall	_fifo_tam
  3472  0216  120A  118A  27A3  120A  118A  	xorlw	0
  3473  021B  3A00               	skipz
  3474  021C  1D03               	goto	u2081
  3475  021D  2A1F               	goto	u2080
  3476  021E  2A20               u2081:
  3477  021F                     	goto	l2292
  3478  021F  2963               u2080:
  3479  0220                     	goto	l2318
  3480  0220  2A21               	
  3481                           l95:	
  3482  0221                     	line	119
  3483                           	
  3484                           l2318:	
  3485  0221                     ;main.c: 119:         lcd.printpos(0,0,vtr);
  3486                           	bcf	status, 5	;RP0=0, select bank0
  3487  0221  1283               	bcf	status, 6	;RP1=0, select bank0
  3488  0222  1303               	clrf	(dispLCD@lin)
  3489  0223  01AC               	clrf	(dispLCD@col)
  3490  0224  01AD               	movlw	(low(main@vtr|((0x0)<<8)))&0ffh
  3491  0225  30C8               	movwf	(??_main+0)+0
  3492  0226  00BC               	movf	(??_main+0)+0,w
  3493  0227  083C               	movwf	(dispLCD@str)
  3494  0228  00AE               	movf	(0+low(_lcd|((0x0)<<8)+02h)),w
  3495  0229  0852               	fcall	fptable
  3496  022A  120A  118A  2048  120A  118A  	goto	l2264
  3497  022F  28E0               	line	126
  3498                           ;main.c: 126:     }
  3499                           	
  3500                           l96:	
  3501  0230                     	goto	l2264
  3502  0230  28E0               	
  3503                           l97:	
  3504  0231                     	line	127
  3505                           	
  3506                           l98:	
  3507  0231                     	global	start
  3508                           	ljmp	start
  3509  0231  120A  118A  280E   	opt stack 0
  3510                           GLOBAL	__end_of_main
  3511                           	__end_of_main:
  3512  0234                     	signat	_main,89
  3513                           	global	_wifi_init
  3514                           
  3515 ;; *************** function _wifi_init *****************
  3516 ;; Defined at:
  3517 ;;		line 12 in file "wifi.c"
  3518 ;; Parameters:    Size  Location     Type
  3519 ;;  br              4   24[BANK0 ] long 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;		None
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  1    wreg      void 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0, pclath, cstack
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3531 ;;      Params:         0       4       0       0       0
  3532 ;;      Locals:         0       0       0       0       0
  3533 ;;      Temps:          0       0       0       0       0
  3534 ;;      Totals:         0       4       0       0       0
  3535 ;;Total ram usage:        4 bytes
  3536 ;; Hardware stack levels used:    1
  3537 ;; Hardware stack levels required when called:    4
  3538 ;; This function calls:
  3539 ;;		_initEUSART
  3540 ;; This function is called by:
  3541 ;;		_main
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3545                           	file	"wifi.c"
  3546                           	line	12
  3547                           global __ptext1
  3548                           __ptext1:	;psect for function _wifi_init
  3549  0745                     psect	text1
  3550                           	file	"wifi.c"
  3551                           	line	12
  3552                           	global	__size_of_wifi_init
  3553                           	__size_of_wifi_init	equ	__end_of_wifi_init-_wifi_init
  3554  0011                     	
  3555                           _wifi_init:	
  3556  0745                     ;incstack = 0
  3557                           	opt	stack 3
  3558                           ; Regs used in _wifi_init: [wreg+status,2+status,0+pclath+cstack]
  3559                           	line	14
  3560                           	
  3561                           l2174:	
  3562  0745                     ;wifi.c: 12: void wifi_init( long br);wifi.c: 13: {;wifi.c: 14:     eusart.init(br);
  3563                           	bcf	status, 5	;RP0=0, select bank0
  3564  0745  1283               	bcf	status, 6	;RP1=0, select bank0
  3565  0746  1303               	movf	(wifi_init@br+3),w
  3566  0747  083B               	movwf	(initEUSART@baudRate+3)
  3567  0748  00B1               	movf	(wifi_init@br+2),w
  3568  0749  083A               	movwf	(initEUSART@baudRate+2)
  3569  074A  00B0               	movf	(wifi_init@br+1),w
  3570  074B  0839               	movwf	(initEUSART@baudRate+1)
  3571  074C  00AF               	movf	(wifi_init@br),w
  3572  074D  0838               	movwf	(initEUSART@baudRate)
  3573  074E  00AE               
  3574                           	movf	(0+low(_eusart|((0x0)<<8)+06h)),w
  3575  074F  0846               	fcall	fptable
  3576  0750  120A  118A  2048  120A  118A  	line	16
  3577                           	
  3578                           l317:	
  3579  0755                     	return
  3580  0755  0008               	opt stack 0
  3581                           GLOBAL	__end_of_wifi_init
  3582                           	__end_of_wifi_init:
  3583  0756                     	signat	_wifi_init,4217
  3584                           	global	_initEUSART
  3585                           
  3586 ;; *************** function _initEUSART *****************
  3587 ;; Defined at:
  3588 ;;		line 137 in file "eusart.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  baudRate        4   14[BANK0 ] unsigned long 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      void 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0, pclath, cstack
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         0       4       0       0       0
  3603 ;;      Locals:         0       0       0       0       0
  3604 ;;      Temps:          0       6       0       0       0
  3605 ;;      Totals:         0      10       0       0       0
  3606 ;;Total ram usage:       10 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		___lldiv
  3611 ;; This function is called by:
  3612 ;;		_wifi_init
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3616                           	file	"eusart.c"
  3617                           	line	137
  3618                           global __ptext2
  3619                           __ptext2:	;psect for function _initEUSART
  3620  0514                     psect	text2
  3621                           	file	"eusart.c"
  3622                           	line	137
  3623                           	global	__size_of_initEUSART
  3624                           	__size_of_initEUSART	equ	__end_of_initEUSART-_initEUSART
  3625  0054                     	
  3626                           _initEUSART:	
  3627  0514                     ;incstack = 0
  3628                           	opt	stack 3
  3629                           ; Regs used in _initEUSART: [wreg+status,2+status,0+pclath+cstack]
  3630                           	line	139
  3631                           	
  3632                           l2096:	
  3633  0514                     ;eusart.c: 137: void initEUSART( unsigned long baudRate );eusart.c: 138: {;eusart.c: 139
                                 :     INTCONbits.GIE = 0;
  3634                           	bcf	(11),7	;volatile
  3635  0514  138B               	line	142
  3636                           	
  3637                           l2098:	
  3638  0515                     ;eusart.c: 142:     SPBRbits.u16 = (unsigned int)( (20000000 / (baudRate<<2)) - 1);
  3639                           	bcf	status, 5	;RP0=0, select bank0
  3640  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  3641  0516  1303               	movf	(initEUSART@baudRate),w
  3642  0517  082E               	movwf	(??_initEUSART+0)+0
  3643  0518  00B2               	movf	(initEUSART@baudRate+1),w
  3644  0519  082F               	movwf	((??_initEUSART+0)+0+1)
  3645  051A  00B3               	movf	(initEUSART@baudRate+2),w
  3646  051B  0830               	movwf	((??_initEUSART+0)+0+2)
  3647  051C  00B4               	movf	(initEUSART@baudRate+3),w
  3648  051D  0831               	movwf	((??_initEUSART+0)+0+3)
  3649  051E  00B5               	movlw	02h
  3650  051F  3002               u1785:
  3651  0520                     	clrc
  3652  0520  1003               	rlf	(??_initEUSART+0)+0,f
  3653  0521  0DB2               	rlf	(??_initEUSART+0)+1,f
  3654  0522  0DB3               	rlf	(??_initEUSART+0)+2,f
  3655  0523  0DB4               	rlf	(??_initEUSART+0)+3,f
  3656  0524  0DB5               u1780:
  3657  0525                     	addlw	-1
  3658  0525  3EFF               	skipz
  3659  0526  1D03               	goto	u1785
  3660  0527  2D20               	movf	3+(??_initEUSART+0)+0,w
  3661  0528  0835               	movwf	(___lldiv@divisor+3)
  3662  0529  00A3               	movf	2+(??_initEUSART+0)+0,w
  3663  052A  0834               	movwf	(___lldiv@divisor+2)
  3664  052B  00A2               	movf	1+(??_initEUSART+0)+0,w
  3665  052C  0833               	movwf	(___lldiv@divisor+1)
  3666  052D  00A1               	movf	0+(??_initEUSART+0)+0,w
  3667  052E  0832               	movwf	(___lldiv@divisor)
  3668  052F  00A0               
  3669                           	movlw	01h
  3670  0530  3001               	movwf	(___lldiv@dividend+3)
  3671  0531  00A7               	movlw	031h
  3672  0532  3031               	movwf	(___lldiv@dividend+2)
  3673  0533  00A6               	movlw	02Dh
  3674  0534  302D               	movwf	(___lldiv@dividend+1)
  3675  0535  00A5               	movlw	0
  3676  0536  3000               	movwf	(___lldiv@dividend)
  3677  0537  00A4               
  3678                           	fcall	___lldiv
  3679  0538  120A  118A  23E8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3680  053D  1283               	bcf	status, 6	;RP1=0, select bank0
  3681  053E  1303               	movf	(0+(?___lldiv)),w
  3682  053F  0820               	addlw	low(0FFFFh)
  3683  0540  3EFF               	movwf	(??_initEUSART+4)+0
  3684  0541  00B6               	movf	(1+(?___lldiv)),w
  3685  0542  0821               	skipnc
  3686  0543  1803               	addlw	1
  3687  0544  3E01               	addlw	high(0FFFFh)
  3688  0545  3EFF               	movwf	1+(??_initEUSART+4)+0
  3689  0546  00B7               	movf	0+(??_initEUSART+4)+0,w
  3690  0547  0836               	bsf	status, 5	;RP0=1, select bank1
  3691  0548  1683               	bcf	status, 6	;RP1=0, select bank1
  3692  0549  1303               	movwf	(153)^080h	;volatile
  3693  054A  0099               	bcf	status, 5	;RP0=0, select bank0
  3694  054B  1283               	bcf	status, 6	;RP1=0, select bank0
  3695  054C  1303               	movf	1+(??_initEUSART+4)+0,w
  3696  054D  0837               	bsf	status, 5	;RP0=1, select bank1
  3697  054E  1683               	bcf	status, 6	;RP1=0, select bank1
  3698  054F  1303               	movwf	(153+1)^080h	;volatile
  3699  0550  009A               	line	146
  3700                           	
  3701                           l2100:	
  3702  0551                     ;eusart.c: 146:     TXSTAbits.SYNC = 0;
  3703                           	bcf	(152)^080h,4	;volatile
  3704  0551  1218               	line	147
  3705                           	
  3706                           l2102:	
  3707  0552                     ;eusart.c: 147:     BAUDCTLbits.BRG16 = 1;
  3708                           	bsf	status, 5	;RP0=1, select bank3
  3709  0552  1683               	bsf	status, 6	;RP1=1, select bank3
  3710  0553  1703               	bsf	(391)^0180h,3	;volatile
  3711  0554  1587               	line	148
  3712                           	
  3713                           l2104:	
  3714  0555                     ;eusart.c: 148:     TXSTAbits.BRGH = 1;
  3715                           	bsf	status, 5	;RP0=1, select bank1
  3716  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  3717  0556  1303               	bsf	(152)^080h,2	;volatile
  3718  0557  1518               	line	150
  3719                           	
  3720                           l2106:	
  3721  0558                     ;eusart.c: 150:     RCSTAbits.SPEN = 1;
  3722                           	bcf	status, 5	;RP0=0, select bank0
  3723  0558  1283               	bcf	status, 6	;RP1=0, select bank0
  3724  0559  1303               	bsf	(24),7	;volatile
  3725  055A  1798               	line	151
  3726                           	
  3727                           l2108:	
  3728  055B                     ;eusart.c: 151:     TXSTAbits.TXEN = 1;
  3729                           	bsf	status, 5	;RP0=1, select bank1
  3730  055B  1683               	bcf	status, 6	;RP1=0, select bank1
  3731  055C  1303               	bsf	(152)^080h,5	;volatile
  3732  055D  1698               	line	152
  3733                           	
  3734                           l2110:	
  3735  055E                     ;eusart.c: 152:     RCSTAbits.CREN = 1;
  3736                           	bcf	status, 5	;RP0=0, select bank0
  3737  055E  1283               	bcf	status, 6	;RP1=0, select bank0
  3738  055F  1303               	bsf	(24),4	;volatile
  3739  0560  1618               	line	154
  3740                           	
  3741                           l2112:	
  3742  0561                     ;eusart.c: 154:     PIE1bits.RCIE = 1;
  3743                           	bsf	status, 5	;RP0=1, select bank1
  3744  0561  1683               	bcf	status, 6	;RP1=0, select bank1
  3745  0562  1303               	bsf	(140)^080h,5	;volatile
  3746  0563  168C               	line	155
  3747                           	
  3748                           l2114:	
  3749  0564                     ;eusart.c: 155:     PIE1bits.TXIE = 0;
  3750                           	bcf	(140)^080h,4	;volatile
  3751  0564  120C               	line	156
  3752                           	
  3753                           l2116:	
  3754  0565                     ;eusart.c: 156:     INTCONbits.PEIE = 1;
  3755                           	bsf	(11),6	;volatile
  3756  0565  170B               	line	157
  3757                           	
  3758                           l2118:	
  3759  0566                     ;eusart.c: 157:     INTCONbits.GIE = 1;
  3760                           	bsf	(11),7	;volatile
  3761  0566  178B               	line	158
  3762                           	
  3763                           l285:	
  3764  0567                     	return
  3765  0567  0008               	opt stack 0
  3766                           GLOBAL	__end_of_initEUSART
  3767                           	__end_of_initEUSART:
  3768  0568                     	signat	_initEUSART,4217
  3769                           	global	___lldiv
  3770                           
  3771 ;; *************** function ___lldiv *****************
  3772 ;; Defined at:
  3773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  divisor         4    0[BANK0 ] unsigned long 
  3776 ;;  dividend        4    4[BANK0 ] unsigned long 
  3777 ;; Auto vars:     Size  Location     Type
  3778 ;;  quotient        4    9[BANK0 ] unsigned long 
  3779 ;;  counter         1   13[BANK0 ] unsigned char 
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  4    0[BANK0 ] unsigned long 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         0       8       0       0       0
  3790 ;;      Locals:         0       5       0       0       0
  3791 ;;      Temps:          0       1       0       0       0
  3792 ;;      Totals:         0      14       0       0       0
  3793 ;;Total ram usage:       14 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; Hardware stack levels required when called:    2
  3796 ;; This function calls:
  3797 ;;		Nothing
  3798 ;; This function is called by:
  3799 ;;		_initEUSART
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  3803                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3804                           	line	5
  3805                           global __ptext3
  3806                           __ptext3:	;psect for function ___lldiv
  3807  03E8                     psect	text3
  3808                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  3809                           	line	5
  3810                           	global	__size_of___lldiv
  3811                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3812  006F                     	
  3813                           ___lldiv:	
  3814  03E8                     ;incstack = 0
  3815                           	opt	stack 3
  3816                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3817                           	line	13
  3818                           	
  3819                           l2048:	
  3820  03E8                     	movlw	high highword(0)
  3821  03E8  3000               	bcf	status, 5	;RP0=0, select bank0
  3822  03E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3823  03EA  1303               	movwf	(___lldiv@quotient+3)
  3824  03EB  00AC               	movlw	low highword(0)
  3825  03EC  3000               	movwf	(___lldiv@quotient+2)
  3826  03ED  00AB               	movlw	high(0)
  3827  03EE  3000               	movwf	(___lldiv@quotient+1)
  3828  03EF  00AA               	movlw	low(0)
  3829  03F0  3000               	movwf	(___lldiv@quotient)
  3830  03F1  00A9               
  3831                           	line	14
  3832                           	movf	(___lldiv@divisor+3),w
  3833  03F2  0823               	iorwf	(___lldiv@divisor+2),w
  3834  03F3  0422               	iorwf	(___lldiv@divisor+1),w
  3835  03F4  0421               	iorwf	(___lldiv@divisor),w
  3836  03F5  0420               	skipnz
  3837  03F6  1903               	goto	u1661
  3838  03F7  2BF9               	goto	u1660
  3839  03F8  2BFA               u1661:
  3840  03F9                     	goto	l2068
  3841  03F9  2C4D               u1660:
  3842  03FA                     	line	15
  3843                           	
  3844                           l2050:	
  3845  03FA                     	clrf	(___lldiv@counter)
  3846  03FA  01AD               	incf	(___lldiv@counter),f
  3847  03FB  0AAD               	line	16
  3848                           	goto	l2054
  3849  03FC  2C0B               	
  3850                           l504:	
  3851  03FD                     	line	17
  3852                           	
  3853                           l2052:	
  3854  03FD                     	movlw	01h
  3855  03FD  3001               	movwf	(??___lldiv+0)+0
  3856  03FE  00A8               u1675:
  3857  03FF                     	clrc
  3858  03FF  1003               	rlf	(___lldiv@divisor),f
  3859  0400  0DA0               	rlf	(___lldiv@divisor+1),f
  3860  0401  0DA1               	rlf	(___lldiv@divisor+2),f
  3861  0402  0DA2               	rlf	(___lldiv@divisor+3),f
  3862  0403  0DA3               	decfsz	(??___lldiv+0)+0
  3863  0404  0BA8               	goto	u1675
  3864  0405  2BFF               	line	18
  3865                           	movlw	low(01h)
  3866  0406  3001               	movwf	(??___lldiv+0)+0
  3867  0407  00A8               	movf	(??___lldiv+0)+0,w
  3868  0408  0828               	addwf	(___lldiv@counter),f
  3869  0409  07AD               	goto	l2054
  3870  040A  2C0B               	line	19
  3871                           	
  3872                           l503:	
  3873  040B                     	line	16
  3874                           	
  3875                           l2054:	
  3876  040B                     	btfss	(___lldiv@divisor+3),(31)&7
  3877  040B  1FA3               	goto	u1681
  3878  040C  2C0E               	goto	u1680
  3879  040D  2C0F               u1681:
  3880  040E                     	goto	l2052
  3881  040E  2BFD               u1680:
  3882  040F                     	goto	l2056
  3883  040F  2C11               	
  3884                           l505:	
  3885  0410                     	goto	l2056
  3886  0410  2C11               	line	20
  3887                           	
  3888                           l506:	
  3889  0411                     	line	21
  3890                           	
  3891                           l2056:	
  3892  0411                     	movlw	01h
  3893  0411  3001               	movwf	(??___lldiv+0)+0
  3894  0412  00A8               u1695:
  3895  0413                     	clrc
  3896  0413  1003               	rlf	(___lldiv@quotient),f
  3897  0414  0DA9               	rlf	(___lldiv@quotient+1),f
  3898  0415  0DAA               	rlf	(___lldiv@quotient+2),f
  3899  0416  0DAB               	rlf	(___lldiv@quotient+3),f
  3900  0417  0DAC               	decfsz	(??___lldiv+0)+0
  3901  0418  0BA8               	goto	u1695
  3902  0419  2C13               	line	22
  3903                           	
  3904                           l2058:	
  3905  041A                     	movf	(___lldiv@divisor+3),w
  3906  041A  0823               	subwf	(___lldiv@dividend+3),w
  3907  041B  0227               	skipz
  3908  041C  1D03               	goto	u1705
  3909  041D  2C28               	movf	(___lldiv@divisor+2),w
  3910  041E  0822               	subwf	(___lldiv@dividend+2),w
  3911  041F  0226               	skipz
  3912  0420  1D03               	goto	u1705
  3913  0421  2C28               	movf	(___lldiv@divisor+1),w
  3914  0422  0821               	subwf	(___lldiv@dividend+1),w
  3915  0423  0225               	skipz
  3916  0424  1D03               	goto	u1705
  3917  0425  2C28               	movf	(___lldiv@divisor),w
  3918  0426  0820               	subwf	(___lldiv@dividend),w
  3919  0427  0224               u1705:
  3920  0428                     	skipc
  3921  0428  1C03               	goto	u1701
  3922  0429  2C2B               	goto	u1700
  3923  042A  2C2C               u1701:
  3924  042B                     	goto	l2064
  3925  042B  2C3C               u1700:
  3926  042C                     	line	23
  3927                           	
  3928                           l2060:	
  3929  042C                     	movf	(___lldiv@divisor),w
  3930  042C  0820               	subwf	(___lldiv@dividend),f
  3931  042D  02A4               	movf	(___lldiv@divisor+1),w
  3932  042E  0821               	skipc
  3933  042F  1C03               	incfsz	(___lldiv@divisor+1),w
  3934  0430  0F21               	subwf	(___lldiv@dividend+1),f
  3935  0431  02A5               	movf	(___lldiv@divisor+2),w
  3936  0432  0822               	skipc
  3937  0433  1C03               	incfsz	(___lldiv@divisor+2),w
  3938  0434  0F22               	subwf	(___lldiv@dividend+2),f
  3939  0435  02A6               	movf	(___lldiv@divisor+3),w
  3940  0436  0823               	skipc
  3941  0437  1C03               	incfsz	(___lldiv@divisor+3),w
  3942  0438  0F23               	subwf	(___lldiv@dividend+3),f
  3943  0439  02A7               	line	24
  3944                           	
  3945                           l2062:	
  3946  043A                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3947  043A  1429               	goto	l2064
  3948  043B  2C3C               	line	25
  3949                           	
  3950                           l507:	
  3951  043C                     	line	26
  3952                           	
  3953                           l2064:	
  3954  043C                     	movlw	01h
  3955  043C  3001               u1715:
  3956  043D                     	clrc
  3957  043D  1003               	rrf	(___lldiv@divisor+3),f
  3958  043E  0CA3               	rrf	(___lldiv@divisor+2),f
  3959  043F  0CA2               	rrf	(___lldiv@divisor+1),f
  3960  0440  0CA1               	rrf	(___lldiv@divisor),f
  3961  0441  0CA0               	addlw	-1
  3962  0442  3EFF               	skipz
  3963  0443  1D03               	goto	u1715
  3964  0444  2C3D               
  3965                           	line	27
  3966                           	
  3967                           l2066:	
  3968  0445                     	movlw	01h
  3969  0445  3001               	subwf	(___lldiv@counter),f
  3970  0446  02AD               	btfss	status,2
  3971  0447  1D03               	goto	u1721
  3972  0448  2C4A               	goto	u1720
  3973  0449  2C4B               u1721:
  3974  044A                     	goto	l2056
  3975  044A  2C11               u1720:
  3976  044B                     	goto	l2068
  3977  044B  2C4D               	
  3978                           l508:	
  3979  044C                     	goto	l2068
  3980  044C  2C4D               	line	28
  3981                           	
  3982                           l502:	
  3983  044D                     	line	29
  3984                           	
  3985                           l2068:	
  3986  044D                     	movf	(___lldiv@quotient+3),w
  3987  044D  082C               	movwf	(?___lldiv+3)
  3988  044E  00A3               	movf	(___lldiv@quotient+2),w
  3989  044F  082B               	movwf	(?___lldiv+2)
  3990  0450  00A2               	movf	(___lldiv@quotient+1),w
  3991  0451  082A               	movwf	(?___lldiv+1)
  3992  0452  00A1               	movf	(___lldiv@quotient),w
  3993  0453  0829               	movwf	(?___lldiv)
  3994  0454  00A0               
  3995                           	goto	l509
  3996  0455  2C56               	
  3997                           l2070:	
  3998  0456                     	line	30
  3999                           	
  4000                           l509:	
  4001  0456                     	return
  4002  0456  0008               	opt stack 0
  4003                           GLOBAL	__end_of___lldiv
  4004                           	__end_of___lldiv:
  4005  0457                     	signat	___lldiv,8316
  4006                           	global	_keyboard_init
  4007                           
  4008 ;; *************** function _keyboard_init *****************
  4009 ;; Defined at:
  4010 ;;		line 104 in file "keyboard.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;		None
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4024 ;;      Params:         0       0       0       0       0
  4025 ;;      Locals:         0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0
  4027 ;;      Totals:         0       0       0       0       0
  4028 ;;Total ram usage:        0 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    2
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_main
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4038                           	file	"keyboard.c"
  4039                           	line	104
  4040                           global __ptext4
  4041                           __ptext4:	;psect for function _keyboard_init
  4042  0756                     psect	text4
  4043                           	file	"keyboard.c"
  4044                           	line	104
  4045                           	global	__size_of_keyboard_init
  4046                           	__size_of_keyboard_init	equ	__end_of_keyboard_init-_keyboard_init
  4047  000F                     	
  4048                           _keyboard_init:	
  4049  0756                     ;incstack = 0
  4050                           	opt	stack 5
  4051                           ; Regs used in _keyboard_init: [wreg+status,2]
  4052                           	line	106
  4053                           	
  4054                           l1772:	
  4055  0756                     ;keyboard.c: 106:     PORTB = 0;
  4056                           	bcf	status, 5	;RP0=0, select bank0
  4057  0756  1283               	bcf	status, 6	;RP1=0, select bank0
  4058  0757  1303               	clrf	(6)	;volatile
  4059  0758  0186               	line	107
  4060                           ;keyboard.c: 107:     ANSELH = 0;
  4061                           	bsf	status, 5	;RP0=1, select bank3
  4062  0759  1683               	bsf	status, 6	;RP1=1, select bank3
  4063  075A  1703               	clrf	(393)^0180h	;volatile
  4064  075B  0189               	line	108
  4065                           	
  4066                           l1774:	
  4067  075C                     ;keyboard.c: 108:     TRISB = 0x0F;
  4068                           	movlw	low(0Fh)
  4069  075C  300F               	bsf	status, 5	;RP0=1, select bank1
  4070  075D  1683               	bcf	status, 6	;RP1=0, select bank1
  4071  075E  1303               	movwf	(134)^080h	;volatile
  4072  075F  0086               	line	109
  4073                           	
  4074                           l1776:	
  4075  0760                     ;keyboard.c: 109:     WPUB = 0x00;
  4076                           	clrf	(149)^080h	;volatile
  4077  0760  0195               	line	110
  4078                           	
  4079                           l1778:	
  4080  0761                     ;keyboard.c: 110:     OPTION_REGbits.nRBPU = 1;
  4081                           	bsf	(129)^080h,7	;volatile
  4082  0761  1781               	line	112
  4083                           	
  4084                           l1780:	
  4085  0762                     ;keyboard.c: 112:     prevKey = 0;
  4086                           	clrf	(_prevKey)
  4087  0762  01F7               	line	113
  4088                           	
  4089                           l1782:	
  4090  0763                     ;keyboard.c: 113:     currKey = 0;
  4091                           	clrf	(_currKey)
  4092  0763  01F6               	line	114
  4093                           	
  4094                           l220:	
  4095  0764                     	return
  4096  0764  0008               	opt stack 0
  4097                           GLOBAL	__end_of_keyboard_init
  4098                           	__end_of_keyboard_init:
  4099  0765                     	signat	_keyboard_init,89
  4100                           	global	_fifo_tam
  4101                           
  4102 ;; *************** function _fifo_tam *****************
  4103 ;; Defined at:
  4104 ;;		line 35 in file "fifo.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4118 ;;      Params:         0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    2
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4132                           	file	"fifo.c"
  4133                           	line	35
  4134                           global __ptext5
  4135                           __ptext5:	;psect for function _fifo_tam
  4136  07A3                     psect	text5
  4137                           	file	"fifo.c"
  4138                           	line	35
  4139                           	global	__size_of_fifo_tam
  4140                           	__size_of_fifo_tam	equ	__end_of_fifo_tam-_fifo_tam
  4141  0008                     	
  4142                           _fifo_tam:	
  4143  07A3                     ;incstack = 0
  4144                           	opt	stack 5
  4145                           ; Regs used in _fifo_tam: [wreg+status,2+status,0]
  4146                           	line	37
  4147                           	
  4148                           l1718:	
  4149  07A3                     ;fifo.c: 37:     return( (fifo_head - fifo_tail) % 16 );
  4150                           	bcf	status, 5	;RP0=0, select bank0
  4151  07A3  1283               	bcf	status, 6	;RP1=0, select bank0
  4152  07A4  1303               	decf	(_fifo_tail),w
  4153  07A5  0367               	xorlw	0ffh
  4154  07A6  3AFF               	addwf	(_fifo_head),w
  4155  07A7  0768               	andlw	0Fh
  4156  07A8  390F               	goto	l384
  4157  07A9  2FAA               	
  4158                           l1720:	
  4159  07AA                     	line	38
  4160                           	
  4161                           l384:	
  4162  07AA                     	return
  4163  07AA  0008               	opt stack 0
  4164                           GLOBAL	__end_of_fifo_tam
  4165                           	__end_of_fifo_tam:
  4166  07AB                     	signat	_fifo_tam,89
  4167                           	global	_fifo_retirar
  4168                           
  4169 ;; *************** function _fifo_retirar *****************
  4170 ;; Defined at:
  4171 ;;		line 24 in file "fifo.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  aux             1    2[BANK0 ] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      unsigned char 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         0       1       0       0       0
  4187 ;;      Temps:          0       2       0       0       0
  4188 ;;      Totals:         0       3       0       0       0
  4189 ;;Total ram usage:        3 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4199                           	line	24
  4200                           global __ptext6
  4201                           __ptext6:	;psect for function _fifo_retirar
  4202  06BD                     psect	text6
  4203                           	file	"fifo.c"
  4204                           	line	24
  4205                           	global	__size_of_fifo_retirar
  4206                           	__size_of_fifo_retirar	equ	__end_of_fifo_retirar-_fifo_retirar
  4207  001E                     	
  4208                           _fifo_retirar:	
  4209  06BD                     ;incstack = 0
  4210                           	opt	stack 5
  4211                           ; Regs used in _fifo_retirar: [wreg-fsr0h+status,2+status,0]
  4212                           	line	26
  4213                           	
  4214                           l2176:	
  4215  06BD                     ;fifo.c: 26:     unsigned char aux = 0;
  4216                           	bcf	status, 5	;RP0=0, select bank0
  4217  06BD  1283               	bcf	status, 6	;RP1=0, select bank0
  4218  06BE  1303               	clrf	(fifo_retirar@aux)
  4219  06BF  01A2               	line	27
  4220                           	
  4221                           l2178:	
  4222  06C0                     ;fifo.c: 27:     if( fifo_tail != fifo_head )
  4223                           	movf	(_fifo_tail),w
  4224  06C0  0867               	xorwf	(_fifo_head),w
  4225  06C1  0668               	skipnz
  4226  06C2  1903               	goto	u1911
  4227  06C3  2EC5               	goto	u1910
  4228  06C4  2EC6               u1911:
  4229  06C5                     	goto	l2184
  4230  06C5  2ED8               u1910:
  4231  06C6                     	line	29
  4232                           	
  4233                           l2180:	
  4234  06C6                     ;fifo.c: 28:     {;fifo.c: 29:         aux = fifo[fifo_tail];
  4235                           	movf	(_fifo_tail),w
  4236  06C6  0867               	addlw	low(_fifo|((0x0)<<8))&0ffh
  4237  06C7  3E57               	movwf	fsr0
  4238  06C8  0084               	bcf	status, 7	;select IRP bank0
  4239  06C9  1383               	movf	indf,w
  4240  06CA  0800               	movwf	(??_fifo_retirar+0)+0
  4241  06CB  00A0               	movf	(??_fifo_retirar+0)+0,w
  4242  06CC  0820               	movwf	(fifo_retirar@aux)
  4243  06CD  00A2               	line	30
  4244                           	
  4245                           l2182:	
  4246  06CE                     ;fifo.c: 30:         fifo_tail = ++fifo_tail % 16;
  4247                           	movlw	low(01h)
  4248  06CE  3001               	movwf	(??_fifo_retirar+0)+0
  4249  06CF  00A0               	movf	(??_fifo_retirar+0)+0,w
  4250  06D0  0820               	addwf	(_fifo_tail),f
  4251  06D1  07E7               	movf	((_fifo_tail)),w
  4252  06D2  0867               	andlw	0Fh
  4253  06D3  390F               	movwf	(??_fifo_retirar+1)+0
  4254  06D4  00A1               	movf	(??_fifo_retirar+1)+0,w
  4255  06D5  0821               	movwf	(_fifo_tail)
  4256  06D6  00E7               	goto	l2184
  4257  06D7  2ED8               	line	31
  4258                           ;fifo.c: 31:     }
  4259                           	
  4260                           l380:	
  4261  06D8                     	line	32
  4262                           	
  4263                           l2184:	
  4264  06D8                     ;fifo.c: 32:     return( aux );
  4265                           	movf	(fifo_retirar@aux),w
  4266  06D8  0822               	goto	l381
  4267  06D9  2EDA               	
  4268                           l2186:	
  4269  06DA                     	line	33
  4270                           	
  4271                           l381:	
  4272  06DA                     	return
  4273  06DA  0008               	opt stack 0
  4274                           GLOBAL	__end_of_fifo_retirar
  4275                           	__end_of_fifo_retirar:
  4276  06DB                     	signat	_fifo_retirar,89
  4277                           	global	_dispLCD_init
  4278                           
  4279 ;; *************** function _dispLCD_init *****************
  4280 ;; Defined at:
  4281 ;;		line 150 in file "lcd.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4295 ;;      Params:         0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0
  4297 ;;      Temps:          0       1       0       0       0
  4298 ;;      Totals:         0       1       0       0       0
  4299 ;;Total ram usage:        1 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    4
  4302 ;; This function calls:
  4303 ;;		_delay
  4304 ;;		_dispLCD_instReg
  4305 ;;		_dispLCD_newChar
  4306 ;; This function is called by:
  4307 ;;		_main
  4308 ;; This function uses a non-reentrant model
  4309 ;;
  4310                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4311                           	file	"lcd.c"
  4312                           	line	150
  4313                           global __ptext7
  4314                           __ptext7:	;psect for function _dispLCD_init
  4315  04B6                     psect	text7
  4316                           	file	"lcd.c"
  4317                           	line	150
  4318                           	global	__size_of_dispLCD_init
  4319                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  4320  005E                     	
  4321                           _dispLCD_init:	
  4322  04B6                     ;incstack = 0
  4323                           	opt	stack 3
  4324                           ; Regs used in _dispLCD_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4325                           	line	152
  4326                           	
  4327                           l2188:	
  4328  04B6                     ;lcd.c: 152:     delay(100);
  4329                           	movlw	064h
  4330  04B6  3064               	bcf	status, 5	;RP0=0, select bank0
  4331  04B7  1283               	bcf	status, 6	;RP1=0, select bank0
  4332  04B8  1303               	movwf	(delay@t)
  4333  04B9  00A0               	movlw	0
  4334  04BA  3000               	movwf	((delay@t))+1
  4335  04BB  00A1               	fcall	_delay
  4336  04BC  120A  118A  269E  120A  118A  	line	153
  4337                           	
  4338                           l2190:	
  4339  04C1                     ;lcd.c: 153:     TRISDbits.TRISD0 = 0;
  4340                           	bsf	status, 5	;RP0=1, select bank1
  4341  04C1  1683               	bcf	status, 6	;RP1=0, select bank1
  4342  04C2  1303               	bcf	(136)^080h,0	;volatile
  4343  04C3  1008               	line	154
  4344                           	
  4345                           l2192:	
  4346  04C4                     ;lcd.c: 154:     TRISDbits.TRISD1 = 0;
  4347                           	bcf	(136)^080h,1	;volatile
  4348  04C4  1088               	line	155
  4349                           	
  4350                           l2194:	
  4351  04C5                     ;lcd.c: 155:     TRISDbits.TRISD2 = 0;
  4352                           	bcf	(136)^080h,2	;volatile
  4353  04C5  1108               	line	156
  4354                           	
  4355                           l2196:	
  4356  04C6                     ;lcd.c: 156:     TRISDbits.TRISD3 = 0;
  4357                           	bcf	(136)^080h,3	;volatile
  4358  04C6  1188               	line	157
  4359                           	
  4360                           l2198:	
  4361  04C7                     ;lcd.c: 157:     TRISDbits.TRISD4 = 0;
  4362                           	bcf	(136)^080h,4	;volatile
  4363  04C7  1208               	line	158
  4364                           	
  4365                           l2200:	
  4366  04C8                     ;lcd.c: 158:     TRISDbits.TRISD5 = 0;
  4367                           	bcf	(136)^080h,5	;volatile
  4368  04C8  1288               	line	159
  4369                           	
  4370                           l2202:	
  4371  04C9                     ;lcd.c: 159:     TRISDbits.TRISD6 = 1;
  4372                           	bsf	(136)^080h,6	;volatile
  4373  04C9  1708               	line	160
  4374                           	
  4375                           l2204:	
  4376  04CA                     ;lcd.c: 160:     TRISDbits.TRISD7 = 1;
  4377                           	bsf	(136)^080h,7	;volatile
  4378  04CA  1788               	line	161
  4379                           ;lcd.c: 161:     delay(100);
  4380                           	movlw	064h
  4381  04CB  3064               	bcf	status, 5	;RP0=0, select bank0
  4382  04CC  1283               	bcf	status, 6	;RP1=0, select bank0
  4383  04CD  1303               	movwf	(delay@t)
  4384  04CE  00A0               	movlw	0
  4385  04CF  3000               	movwf	((delay@t))+1
  4386  04D0  00A1               	fcall	_delay
  4387  04D1  120A  118A  269E  120A  118A  	line	162
  4388                           	
  4389                           l2206:	
  4390  04D6                     ;lcd.c: 162:     LCDbits.EN = 1;
  4391                           	bcf	status, 5	;RP0=0, select bank0
  4392  04D6  1283               	bcf	status, 6	;RP1=0, select bank0
  4393  04D7  1303               	bsf	(8),5	;volatile
  4394  04D8  1688               	line	163
  4395                           ;lcd.c: 163:     dispLCD_instReg( 0x20|0x00|0x08);
  4396                           	movlw	low(028h)
  4397  04D9  3028               	fcall	_dispLCD_instReg
  4398  04DA  120A  118A  22F1  120A  118A  	line	164
  4399                           ;lcd.c: 164:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  4400                           	movlw	low(0Ch)
  4401  04DF  300C               	fcall	_dispLCD_instReg
  4402  04E0  120A  118A  22F1  120A  118A  	line	165
  4403                           ;lcd.c: 165:     dispLCD_instReg( 0x01 );
  4404                           	movlw	low(01h)
  4405  04E5  3001               	fcall	_dispLCD_instReg
  4406  04E6  120A  118A  22F1  120A  118A  	line	166
  4407                           ;lcd.c: 166:     dispLCD_instReg( 0x02 );
  4408                           	movlw	low(02h)
  4409  04EB  3002               	fcall	_dispLCD_instReg
  4410  04EC  120A  118A  22F1  120A  118A  	line	167
  4411                           ;lcd.c: 167:     delay(100);
  4412                           	movlw	064h
  4413  04F1  3064               	bcf	status, 5	;RP0=0, select bank0
  4414  04F2  1283               	bcf	status, 6	;RP1=0, select bank0
  4415  04F3  1303               	movwf	(delay@t)
  4416  04F4  00A0               	movlw	0
  4417  04F5  3000               	movwf	((delay@t))+1
  4418  04F6  00A1               	fcall	_delay
  4419  04F7  120A  118A  269E  120A  118A  	line	168
  4420                           	
  4421                           l2208:	
  4422  04FC                     ;lcd.c: 168:     dispLCD_newChar( 001, newChar_degree );
  4423                           	movlw	(low((((_newChar_degree)-__stringbase)|8000h)))&0ffh
  4424  04FC  3028               	bcf	status, 5	;RP0=0, select bank0
  4425  04FD  1283               	bcf	status, 6	;RP1=0, select bank0
  4426  04FE  1303               	movwf	(??_dispLCD_init+0)+0
  4427  04FF  00A7               	movf	(??_dispLCD_init+0)+0,w
  4428  0500  0827               	movwf	(dispLCD_newChar@ptr)
  4429  0501  00A3               	movlw	low(01h)
  4430  0502  3001               	fcall	_dispLCD_newChar
  4431  0503  120A  118A  25F3  120A  118A  	line	169
  4432                           	
  4433                           l2210:	
  4434  0508                     ;lcd.c: 169:     delay(100);
  4435                           	movlw	064h
  4436  0508  3064               	bcf	status, 5	;RP0=0, select bank0
  4437  0509  1283               	bcf	status, 6	;RP1=0, select bank0
  4438  050A  1303               	movwf	(delay@t)
  4439  050B  00A0               	movlw	0
  4440  050C  3000               	movwf	((delay@t))+1
  4441  050D  00A1               	fcall	_delay
  4442  050E  120A  118A  269E  120A  118A  	line	170
  4443                           	
  4444                           l145:	
  4445  0513                     	return
  4446  0513  0008               	opt stack 0
  4447                           GLOBAL	__end_of_dispLCD_init
  4448                           	__end_of_dispLCD_init:
  4449  0514                     	signat	_dispLCD_init,89
  4450                           	global	_dispLCD_newChar
  4451                           
  4452 ;; *************** function _dispLCD_newChar *****************
  4453 ;; Defined at:
  4454 ;;		line 134 in file "lcd.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  adrs            1    wreg     unsigned char 
  4457 ;;  ptr             1    3[BANK0 ] PTR const unsigned char 
  4458 ;;		 -> newChar_degree(8), 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  adrs            1    5[BANK0 ] unsigned char 
  4461 ;;  i               1    6[BANK0 ] unsigned char 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4471 ;;      Params:         0       1       0       0       0
  4472 ;;      Locals:         0       2       0       0       0
  4473 ;;      Temps:          0       1       0       0       0
  4474 ;;      Totals:         0       4       0       0       0
  4475 ;;Total ram usage:        4 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    3
  4478 ;; This function calls:
  4479 ;;		_dispLCD_dataReg
  4480 ;;		_dispLCD_instReg
  4481 ;; This function is called by:
  4482 ;;		_dispLCD_init
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4486                           	line	134
  4487                           global __ptext8
  4488                           __ptext8:	;psect for function _dispLCD_newChar
  4489  05F3                     psect	text8
  4490                           	file	"lcd.c"
  4491                           	line	134
  4492                           	global	__size_of_dispLCD_newChar
  4493                           	__size_of_dispLCD_newChar	equ	__end_of_dispLCD_newChar-_dispLCD_newChar
  4494  0040                     	
  4495                           _dispLCD_newChar:	
  4496  05F3                     ;incstack = 0
  4497                           	opt	stack 3
  4498                           ; Regs used in _dispLCD_newChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4499                           ;dispLCD_newChar@adrs stored from wreg
  4500                           	bcf	status, 5	;RP0=0, select bank0
  4501  05F3  1283               	bcf	status, 6	;RP1=0, select bank0
  4502  05F4  1303               	movwf	(dispLCD_newChar@adrs)
  4503  05F5  00A5               	line	137
  4504                           	
  4505                           l2080:	
  4506  05F6                     ;lcd.c: 134: void dispLCD_newChar( unsigned char adrs, const char * ptr );lcd.c: 135: {;
                                 lcd.c: 136:     char i;;lcd.c: 137:     dispLCD_instReg( (0x40+(adrs<<3 & 0x3F)) );
  4507                           	movf	(dispLCD_newChar@adrs),w
  4508  05F6  0825               	movwf	(??_dispLCD_newChar+0)+0
  4509  05F7  00A4               	movlw	(03h)-1
  4510  05F8  3002               u1755:
  4511  05F9                     	clrc
  4512  05F9  1003               	rlf	(??_dispLCD_newChar+0)+0,f
  4513  05FA  0DA4               	addlw	-1
  4514  05FB  3EFF               	skipz
  4515  05FC  1D03               	goto	u1755
  4516  05FD  2DF9               	clrc
  4517  05FE  1003               	rlf	(??_dispLCD_newChar+0)+0,w
  4518  05FF  0D24               	andlw	03Fh
  4519  0600  393F               	addlw	040h
  4520  0601  3E40               	fcall	_dispLCD_instReg
  4521  0602  120A  118A  22F1  120A  118A  	line	138
  4522                           	
  4523                           l2082:	
  4524  0607                     ;lcd.c: 138:     for( i=0; i<8; i++ )
  4525                           	bcf	status, 5	;RP0=0, select bank0
  4526  0607  1283               	bcf	status, 6	;RP1=0, select bank0
  4527  0608  1303               	clrf	(dispLCD_newChar@i)
  4528  0609  01A6               	
  4529                           l2084:	
  4530  060A                     	movlw	low(08h)
  4531  060A  3008               	subwf	(dispLCD_newChar@i),w
  4532  060B  0226               	skipc
  4533  060C  1C03               	goto	u1761
  4534  060D  2E0F               	goto	u1760
  4535  060E  2E10               u1761:
  4536  060F                     	goto	l2088
  4537  060F  2E12               u1760:
  4538  0610                     	goto	l2094
  4539  0610  2E2C               	
  4540                           l2086:	
  4541  0611                     	goto	l2094
  4542  0611  2E2C               	
  4543                           l137:	
  4544  0612                     	line	139
  4545                           	
  4546                           l2088:	
  4547  0612                     ;lcd.c: 139:         dispLCD_dataReg( *(ptr+i) );
  4548                           	movf	(dispLCD_newChar@i),w
  4549  0612  0826               	addwf	(dispLCD_newChar@ptr),w
  4550  0613  0723               	movwf	fsr0
  4551  0614  0084               	fcall	stringdir
  4552  0615  120A  118A  2234  120A  118A  	fcall	_dispLCD_dataReg
  4553  061A  120A  118A  266D  120A  118A  	
  4554                           l2090:	
  4555  061F                     	movlw	low(01h)
  4556  061F  3001               	bcf	status, 5	;RP0=0, select bank0
  4557  0620  1283               	bcf	status, 6	;RP1=0, select bank0
  4558  0621  1303               	movwf	(??_dispLCD_newChar+0)+0
  4559  0622  00A4               	movf	(??_dispLCD_newChar+0)+0,w
  4560  0623  0824               	addwf	(dispLCD_newChar@i),f
  4561  0624  07A6               	
  4562                           l2092:	
  4563  0625                     	movlw	low(08h)
  4564  0625  3008               	subwf	(dispLCD_newChar@i),w
  4565  0626  0226               	skipc
  4566  0627  1C03               	goto	u1771
  4567  0628  2E2A               	goto	u1770
  4568  0629  2E2B               u1771:
  4569  062A                     	goto	l2088
  4570  062A  2E12               u1770:
  4571  062B                     	goto	l2094
  4572  062B  2E2C               	
  4573                           l138:	
  4574  062C                     	line	140
  4575                           	
  4576                           l2094:	
  4577  062C                     ;lcd.c: 140:     dispLCD_instReg(0x01);
  4578                           	movlw	low(01h)
  4579  062C  3001               	fcall	_dispLCD_instReg
  4580  062D  120A  118A  22F1  120A  118A  	line	141
  4581                           	
  4582                           l139:	
  4583  0632                     	return
  4584  0632  0008               	opt stack 0
  4585                           GLOBAL	__end_of_dispLCD_newChar
  4586                           	__end_of_dispLCD_newChar:
  4587  0633                     	signat	_dispLCD_newChar,8313
  4588                           	global	_delay
  4589                           
  4590 ;; *************** function _delay *****************
  4591 ;; Defined at:
  4592 ;;		line 12 in file "delay.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  t               2    0[BANK0 ] unsigned int 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4606 ;;      Params:         0       2       0       0       0
  4607 ;;      Locals:         0       0       0       0       0
  4608 ;;      Temps:          0       2       0       0       0
  4609 ;;      Totals:         0       4       0       0       0
  4610 ;;Total ram usage:        4 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    2
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_main
  4617 ;;		_dispLCD_init
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4621                           	file	"delay.c"
  4622                           	line	12
  4623                           global __ptext9
  4624                           __ptext9:	;psect for function _delay
  4625  069E                     psect	text9
  4626                           	file	"delay.c"
  4627                           	line	12
  4628                           	global	__size_of_delay
  4629                           	__size_of_delay	equ	__end_of_delay-_delay
  4630  001F                     	
  4631                           _delay:	
  4632  069E                     ;incstack = 0
  4633                           	opt	stack 4
  4634                           ; Regs used in _delay: [wreg+status,2+status,0]
  4635                           	line	14
  4636                           	
  4637                           l2072:	
  4638  069E                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  4639                           	goto	l2076
  4640  069E  2EB3               	
  4641                           l104:	
  4642  069F                     	line	16
  4643                           	
  4644                           l2074:	
  4645  069F                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
  4646                           	opt asmopt_push
  4647                           opt asmopt_off
  4648                           movlw	7
  4649  069F  3007               	bcf	status, 5	;RP0=0, select bank0
  4650  06A0  1283               	bcf	status, 6	;RP1=0, select bank0
  4651  06A1  1303               movwf	((??_delay+0)+0+1),f
  4652  06A2  00A3               	movlw	124
  4653  06A3  307C               movwf	((??_delay+0)+0),f
  4654  06A4  00A2               	u2207:
  4655  06A5                     decfsz	((??_delay+0)+0),f
  4656  06A5  0BA2               	goto	u2207
  4657  06A6  2EA5               	decfsz	((??_delay+0)+0+1),f
  4658  06A7  0BA3               	goto	u2207
  4659  06A8  2EA5               	nop
  4660  06A9  0000               opt asmopt_pop
  4661                           
  4662                           	line	17
  4663                           ;delay.c: 17:         --t;
  4664                           	movlw	01h
  4665  06AA  3001               	bcf	status, 5	;RP0=0, select bank0
  4666  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  4667  06AC  1303               	subwf	(delay@t),f
  4668  06AD  02A0               	movlw	0
  4669  06AE  3000               	skipc
  4670  06AF  1C03               	decf	(delay@t+1),f
  4671  06B0  03A1               	subwf	(delay@t+1),f
  4672  06B1  02A1               	goto	l2076
  4673  06B2  2EB3               	line	18
  4674                           ;delay.c: 18:     }
  4675                           	
  4676                           l103:	
  4677  06B3                     	line	14
  4678                           	
  4679                           l2076:	
  4680  06B3                     ;delay.c: 14:     while( t )
  4681                           	bcf	status, 5	;RP0=0, select bank0
  4682  06B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4683  06B4  1303               	movf	((delay@t)),w
  4684  06B5  0820               iorwf	((delay@t+1)),w
  4685  06B6  0421               	btfss	status,2
  4686  06B7  1D03               	goto	u1731
  4687  06B8  2EBA               	goto	u1730
  4688  06B9  2EBB               u1731:
  4689  06BA                     	goto	l2074
  4690  06BA  2E9F               u1730:
  4691  06BB                     	goto	l106
  4692  06BB  2EBC               	
  4693                           l105:	
  4694  06BC                     	line	19
  4695                           	
  4696                           l106:	
  4697  06BC                     	return
  4698  06BC  0008               	opt stack 0
  4699                           GLOBAL	__end_of_delay
  4700                           	__end_of_delay:
  4701  06BD                     	signat	_delay,4217
  4702                           	global	_dispLCD_clr
  4703                           
  4704 ;; *************** function _dispLCD_clr *****************
  4705 ;; Defined at:
  4706 ;;		line 249 in file "lcd.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0, pclath, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4720 ;;      Params:         0       0       0       0       0
  4721 ;;      Locals:         0       0       0       0       0
  4722 ;;      Temps:          0       0       0       0       0
  4723 ;;      Totals:         0       0       0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    3
  4727 ;; This function calls:
  4728 ;;		_dispLCD_instReg
  4729 ;; This function is called by:
  4730 ;;		_main
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4734                           	file	"lcd.c"
  4735                           	line	249
  4736                           global __ptext10
  4737                           __ptext10:	;psect for function _dispLCD_clr
  4738  07AB                     psect	text10
  4739                           	file	"lcd.c"
  4740                           	line	249
  4741                           	global	__size_of_dispLCD_clr
  4742                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
  4743  0007                     	
  4744                           _dispLCD_clr:	
  4745  07AB                     ;incstack = 0
  4746                           	opt	stack 4
  4747                           ; Regs used in _dispLCD_clr: [wreg+status,2+status,0+pclath+cstack]
  4748                           	line	251
  4749                           	
  4750                           l2228:	
  4751  07AB                     ;lcd.c: 251:     dispLCD_instReg(0x01);
  4752                           	movlw	low(01h)
  4753  07AB  3001               	fcall	_dispLCD_instReg
  4754  07AC  120A  118A  22F1  120A  118A  	line	252
  4755                           	
  4756                           l179:	
  4757  07B1                     	return
  4758  07B1  0008               	opt stack 0
  4759                           GLOBAL	__end_of_dispLCD_clr
  4760                           	__end_of_dispLCD_clr:
  4761  07B2                     	signat	_dispLCD_clr,89
  4762                           	global	_dispLCD_B1
  4763                           
  4764 ;; *************** function _dispLCD_B1 *****************
  4765 ;; Defined at:
  4766 ;;		line 260 in file "lcd.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;		None
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4780 ;;      Params:         0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0
  4783 ;;      Totals:         0       0       0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    2
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_main
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4794                           	line	260
  4795                           global __ptext11
  4796                           __ptext11:	;psect for function _dispLCD_B1
  4797  077D                     psect	text11
  4798                           	file	"lcd.c"
  4799                           	line	260
  4800                           	global	__size_of_dispLCD_B1
  4801                           	__size_of_dispLCD_B1	equ	__end_of_dispLCD_B1-_dispLCD_B1
  4802  000A                     	
  4803                           _dispLCD_B1:	
  4804  077D                     ;incstack = 0
  4805                           	opt	stack 5
  4806                           ; Regs used in _dispLCD_B1: [wreg+status,0]
  4807                           	line	262
  4808                           	
  4809                           l1768:	
  4810  077D                     ;lcd.c: 262:     return( !LCDbits.B1 );
  4811                           	clrc
  4812  077D  1003               	bcf	status, 5	;RP0=0, select bank0
  4813  077E  1283               	bcf	status, 6	;RP1=0, select bank0
  4814  077F  1303               	btfss	(8),7	;volatile
  4815  0780  1F88               	setc
  4816  0781  1403               	movlw	0
  4817  0782  3000               	skipnc
  4818  0783  1803               	movlw	1
  4819  0784  3001               
  4820                           	goto	l185
  4821  0785  2F86               	
  4822                           l1770:	
  4823  0786                     	line	263
  4824                           	
  4825                           l185:	
  4826  0786                     	return
  4827  0786  0008               	opt stack 0
  4828                           GLOBAL	__end_of_dispLCD_B1
  4829                           	__end_of_dispLCD_B1:
  4830  0787                     	signat	_dispLCD_B1,89
  4831                           	global	_dispLCD_B0
  4832                           
  4833 ;; *************** function _dispLCD_B0 *****************
  4834 ;; Defined at:
  4835 ;;		line 255 in file "lcd.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      unsigned char 
  4842 ;; Registers used:
  4843 ;;		wreg, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4849 ;;      Params:         0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    2
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4863                           	line	255
  4864                           global __ptext12
  4865                           __ptext12:	;psect for function _dispLCD_B0
  4866  0787                     psect	text12
  4867                           	file	"lcd.c"
  4868                           	line	255
  4869                           	global	__size_of_dispLCD_B0
  4870                           	__size_of_dispLCD_B0	equ	__end_of_dispLCD_B0-_dispLCD_B0
  4871  000A                     	
  4872                           _dispLCD_B0:	
  4873  0787                     ;incstack = 0
  4874                           	opt	stack 5
  4875                           ; Regs used in _dispLCD_B0: [wreg+status,0]
  4876                           	line	257
  4877                           	
  4878                           l1764:	
  4879  0787                     ;lcd.c: 257:     return( !LCDbits.B0 );
  4880                           	clrc
  4881  0787  1003               	bcf	status, 5	;RP0=0, select bank0
  4882  0788  1283               	bcf	status, 6	;RP1=0, select bank0
  4883  0789  1303               	btfss	(8),6	;volatile
  4884  078A  1F08               	setc
  4885  078B  1403               	movlw	0
  4886  078C  3000               	skipnc
  4887  078D  1803               	movlw	1
  4888  078E  3001               
  4889                           	goto	l182
  4890  078F  2F90               	
  4891                           l1766:	
  4892  0790                     	line	258
  4893                           	
  4894                           l182:	
  4895  0790                     	return
  4896  0790  0008               	opt stack 0
  4897                           GLOBAL	__end_of_dispLCD_B0
  4898                           	__end_of_dispLCD_B0:
  4899  0791                     	signat	_dispLCD_B0,89
  4900                           	global	_dispLCD
  4901                           
  4902 ;; *************** function _dispLCD *****************
  4903 ;; Defined at:
  4904 ;;		line 173 in file "lcd.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  lin             1   12[BANK0 ] unsigned char 
  4907 ;;  col             1   13[BANK0 ] unsigned char 
  4908 ;;  str             1   14[BANK0 ] PTR const unsigned char 
  4909 ;;		 -> main@vtr(33), 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  cont            2   16[BANK0 ] int 
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4921 ;;      Params:         0       3       0       0       0
  4922 ;;      Locals:         0       2       0       0       0
  4923 ;;      Temps:          0       1       0       0       0
  4924 ;;      Totals:         0       6       0       0       0
  4925 ;;Total ram usage:        6 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    4
  4928 ;; This function calls:
  4929 ;;		___awdiv
  4930 ;;		_dispLCD_dataReg
  4931 ;;		_dispLCD_lincol
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4937                           	line	173
  4938                           global __ptext13
  4939                           __ptext13:	;psect for function _dispLCD
  4940  0457                     psect	text13
  4941                           	file	"lcd.c"
  4942                           	line	173
  4943                           	global	__size_of_dispLCD
  4944                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  4945  005F                     	
  4946                           _dispLCD:	
  4947  0457                     ;incstack = 0
  4948                           	opt	stack 3
  4949                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4950                           	line	175
  4951                           	
  4952                           l2212:	
  4953  0457                     ;lcd.c: 173: void dispLCD( unsigned char lin, unsigned char col, const char * str );lcd.
                                 c: 174: {;lcd.c: 175:     int cont = 0;
  4954                           	bcf	status, 5	;RP0=0, select bank0
  4955  0457  1283               	bcf	status, 6	;RP1=0, select bank0
  4956  0458  1303               	clrf	(dispLCD@cont)
  4957  0459  01B0               	clrf	(dispLCD@cont+1)
  4958  045A  01B1               	line	176
  4959                           	
  4960                           l2214:	
  4961  045B                     ;lcd.c: 176:     dispLCD_lincol( lin, col );
  4962                           	movf	(dispLCD@col),w
  4963  045B  082D               	movwf	(??_dispLCD+0)+0
  4964  045C  00AF               	movf	(??_dispLCD+0)+0,w
  4965  045D  082F               	movwf	(dispLCD_lincol@col)
  4966  045E  00A9               	movf	(dispLCD@lin),w
  4967  045F  082C               	fcall	_dispLCD_lincol
  4968  0460  120A  118A  2708  120A  118A  	line	178
  4969                           ;lcd.c: 178:     while( *str )
  4970                           	goto	l2226
  4971  0465  2CAA               	
  4972                           l149:	
  4973  0466                     	line	180
  4974                           	
  4975                           l2216:	
  4976  0466                     ;lcd.c: 179:     {;lcd.c: 180:         if( cont < 32 )
  4977                           	bcf	status, 5	;RP0=0, select bank0
  4978  0466  1283               	bcf	status, 6	;RP1=0, select bank0
  4979  0467  1303               	movf	(dispLCD@cont+1),w
  4980  0468  0831               	xorlw	80h
  4981  0469  3A80               	movwf	btemp+1
  4982  046A  00FF               	movlw	(0)^80h
  4983  046B  3080               	subwf	btemp+1,w
  4984  046C  027F               	skipz
  4985  046D  1D03               	goto	u1925
  4986  046E  2C71               	movlw	020h
  4987  046F  3020               	subwf	(dispLCD@cont),w
  4988  0470  0230               u1925:
  4989  0471                     
  4990                           	skipnc
  4991  0471  1803               	goto	u1921
  4992  0472  2C74               	goto	u1920
  4993  0473  2C75               u1921:
  4994  0474                     	goto	l2222
  4995  0474  2C9D               u1920:
  4996  0475                     	line	182
  4997                           	
  4998                           l2218:	
  4999  0475                     ;lcd.c: 181:         {;lcd.c: 182:             dispLCD_lincol((cont/16), cont%16 );
  5000                           	bcf	status, 5	;RP0=0, select bank0
  5001  0475  1283               	bcf	status, 6	;RP1=0, select bank0
  5002  0476  1303               	movf	(dispLCD@cont),w
  5003  0477  0830               	andlw	0Fh
  5004  0478  390F               	movwf	(??_dispLCD+0)+0
  5005  0479  00AF               	movf	(??_dispLCD+0)+0,w
  5006  047A  082F               	movwf	(dispLCD_lincol@col)
  5007  047B  00A9               	movlw	010h
  5008  047C  3010               	movwf	(___awdiv@divisor)
  5009  047D  00A0               	movlw	0
  5010  047E  3000               	movwf	((___awdiv@divisor))+1
  5011  047F  00A1               	movf	(dispLCD@cont+1),w
  5012  0480  0831               	movwf	(___awdiv@dividend+1)
  5013  0481  00A3               	movf	(dispLCD@cont),w
  5014  0482  0830               	movwf	(___awdiv@dividend)
  5015  0483  00A2               	fcall	___awdiv
  5016  0484  120A  118A  2375  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  5017  0489  1283               	bcf	status, 6	;RP1=0, select bank0
  5018  048A  1303               	movf	(0+(?___awdiv)),w
  5019  048B  0820               	fcall	_dispLCD_lincol
  5020  048C  120A  118A  2708  120A  118A  	line	183
  5021                           	
  5022                           l2220:	
  5023  0491                     ;lcd.c: 183:             dispLCD_dataReg( *str );
  5024                           	bcf	status, 5	;RP0=0, select bank0
  5025  0491  1283               	bcf	status, 6	;RP1=0, select bank0
  5026  0492  1303               	movf	(dispLCD@str),w
  5027  0493  082E               	movwf	fsr0
  5028  0494  0084               	bcf	status, 7	;select IRP bank0
  5029  0495  1383               	movf	indf,w
  5030  0496  0800               	fcall	_dispLCD_dataReg
  5031  0497  120A  118A  266D  120A  118A  	goto	l2222
  5032  049C  2C9D               	line	184
  5033                           ;lcd.c: 184:         }
  5034                           	
  5035                           l150:	
  5036  049D                     	line	185
  5037                           	
  5038                           l2222:	
  5039  049D                     ;lcd.c: 185:         ++str;
  5040                           	movlw	low(01h)
  5041  049D  3001               	bcf	status, 5	;RP0=0, select bank0
  5042  049E  1283               	bcf	status, 6	;RP1=0, select bank0
  5043  049F  1303               	movwf	(??_dispLCD+0)+0
  5044  04A0  00AF               	movf	(??_dispLCD+0)+0,w
  5045  04A1  082F               	addwf	(dispLCD@str),f
  5046  04A2  07AE               	line	186
  5047                           	
  5048                           l2224:	
  5049  04A3                     ;lcd.c: 186:         ++cont;
  5050                           	movlw	01h
  5051  04A3  3001               	addwf	(dispLCD@cont),f
  5052  04A4  07B0               	skipnc
  5053  04A5  1803               	incf	(dispLCD@cont+1),f
  5054  04A6  0AB1               	movlw	0
  5055  04A7  3000               	addwf	(dispLCD@cont+1),f
  5056  04A8  07B1               	goto	l2226
  5057  04A9  2CAA               	line	187
  5058                           ;lcd.c: 187:     }
  5059                           	
  5060                           l148:	
  5061  04AA                     	line	178
  5062                           	
  5063                           l2226:	
  5064  04AA                     ;lcd.c: 178:     while( *str )
  5065                           	bcf	status, 5	;RP0=0, select bank0
  5066  04AA  1283               	bcf	status, 6	;RP1=0, select bank0
  5067  04AB  1303               	movf	(dispLCD@str),w
  5068  04AC  082E               	movwf	fsr0
  5069  04AD  0084               	bcf	status, 7	;select IRP bank0
  5070  04AE  1383               	movf	(indf),w
  5071  04AF  0800               	btfss	status,2
  5072  04B0  1D03               	goto	u1931
  5073  04B1  2CB3               	goto	u1930
  5074  04B2  2CB4               u1931:
  5075  04B3                     	goto	l2216
  5076  04B3  2C66               u1930:
  5077  04B4                     	goto	l152
  5078  04B4  2CB5               	
  5079                           l151:	
  5080  04B5                     	line	188
  5081                           	
  5082                           l152:	
  5083  04B5                     	return
  5084  04B5  0008               	opt stack 0
  5085                           GLOBAL	__end_of_dispLCD
  5086                           	__end_of_dispLCD:
  5087  04B6                     	signat	_dispLCD,12409
  5088                           	global	_dispLCD_lincol
  5089                           
  5090 ;; *************** function _dispLCD_lincol *****************
  5091 ;; Defined at:
  5092 ;;		line 128 in file "lcd.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  lin             1    wreg     unsigned char 
  5095 ;;  col             1    9[BANK0 ] unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  lin             1   11[BANK0 ] unsigned char 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5107 ;;      Params:         0       1       0       0       0
  5108 ;;      Locals:         0       1       0       0       0
  5109 ;;      Temps:          0       1       0       0       0
  5110 ;;      Totals:         0       3       0       0       0
  5111 ;;Total ram usage:        3 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    3
  5114 ;; This function calls:
  5115 ;;		_dispLCD_instReg
  5116 ;; This function is called by:
  5117 ;;		_dispLCD
  5118 ;;		_dispLCD_putChar
  5119 ;;		_dispLCDstr
  5120 ;;		_dispLCD_num
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5124                           	line	128
  5125                           global __ptext14
  5126                           __ptext14:	;psect for function _dispLCD_lincol
  5127  0708                     psect	text14
  5128                           	file	"lcd.c"
  5129                           	line	128
  5130                           	global	__size_of_dispLCD_lincol
  5131                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  5132  0015                     	
  5133                           _dispLCD_lincol:	
  5134  0708                     ;incstack = 0
  5135                           	opt	stack 3
  5136                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  5137                           ;dispLCD_lincol@lin stored from wreg
  5138                           	bcf	status, 5	;RP0=0, select bank0
  5139  0708  1283               	bcf	status, 6	;RP1=0, select bank0
  5140  0709  1303               	movwf	(dispLCD_lincol@lin)
  5141  070A  00AB               	line	130
  5142                           	
  5143                           l2078:	
  5144  070B                     ;lcd.c: 128: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 129: {;lc
                                 d.c: 130:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  5145                           	movf	(dispLCD_lincol@lin),w
  5146  070B  082B               	movwf	(??_dispLCD_lincol+0)+0
  5147  070C  00AA               	movlw	06h
  5148  070D  3006               u1745:
  5149  070E                     	clrc
  5150  070E  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  5151  070F  0DAA               	addlw	-1
  5152  0710  3EFF               	skipz
  5153  0711  1D03               	goto	u1745
  5154  0712  2F0E               	movf	(dispLCD_lincol@col),w
  5155  0713  0829               	addwf	0+(??_dispLCD_lincol+0)+0,w
  5156  0714  072A               	andlw	07Fh
  5157  0715  397F               	addlw	080h
  5158  0716  3E80               	fcall	_dispLCD_instReg
  5159  0717  120A  118A  22F1  120A  118A  	line	131
  5160                           	
  5161                           l134:	
  5162  071C                     	return
  5163  071C  0008               	opt stack 0
  5164                           GLOBAL	__end_of_dispLCD_lincol
  5165                           	__end_of_dispLCD_lincol:
  5166  071D                     	signat	_dispLCD_lincol,8313
  5167                           	global	_dispLCD_instReg
  5168                           
  5169 ;; *************** function _dispLCD_instReg *****************
  5170 ;; Defined at:
  5171 ;;		line 79 in file "lcd.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  i               1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  i               1    2[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5185 ;;      Params:         0       0       0       0       0
  5186 ;;      Locals:         0       1       0       0       0
  5187 ;;      Temps:          0       2       0       0       0
  5188 ;;      Totals:         0       3       0       0       0
  5189 ;;Total ram usage:        3 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    2
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_dispLCD_lincol
  5196 ;;		_dispLCD_newChar
  5197 ;;		_dispLCD_init
  5198 ;;		_dispLCD_clr
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5202                           	line	79
  5203                           global __ptext15
  5204                           __ptext15:	;psect for function _dispLCD_instReg
  5205  02F1                     psect	text15
  5206                           	file	"lcd.c"
  5207                           	line	79
  5208                           	global	__size_of_dispLCD_instReg
  5209                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  5210  0084                     	
  5211                           _dispLCD_instReg:	
  5212  02F1                     ;incstack = 0
  5213                           	opt	stack 3
  5214                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  5215                           ;dispLCD_instReg@i stored from wreg
  5216                           	bcf	status, 5	;RP0=0, select bank0
  5217  02F1  1283               	bcf	status, 6	;RP1=0, select bank0
  5218  02F2  1303               	movwf	(dispLCD_instReg@i)
  5219  02F3  00A2               	line	81
  5220                           	
  5221                           l1986:	
  5222  02F4                     ;lcd.c: 79: void dispLCD_instReg( unsigned char i );lcd.c: 80: {;lcd.c: 81:     LCDbits.
                                 RS = 0;
  5223                           	bcf	(8),4	;volatile
  5224  02F4  1208               	line	82
  5225                           	
  5226                           l1988:	
  5227  02F5                     ;lcd.c: 82:     LCDbits.BUS = (i>>4);
  5228                           	movf	(dispLCD_instReg@i),w
  5229  02F5  0822               	movwf	(??_dispLCD_instReg+0)+0
  5230  02F6  00A0               	movlw	04h
  5231  02F7  3004               u1585:
  5232  02F8                     	clrc
  5233  02F8  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  5234  02F9  0CA0               	addlw	-1
  5235  02FA  3EFF               	skipz
  5236  02FB  1D03               	goto	u1585
  5237  02FC  2AF8               	movf	(8),w	;volatile
  5238  02FD  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5239  02FE  0620               	andlw	not ((1<<4)-1)
  5240  02FF  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5241  0300  0620               	movwf	(8)	;volatile
  5242  0301  0088               	line	84
  5243                           	
  5244                           l1990:	
  5245  0302                     ;lcd.c: 84:     LCDbits.EN = 0;
  5246                           	bcf	(8),5	;volatile
  5247  0302  1288               	line	85
  5248                           ;lcd.c: 85:     if( i == 0x01 || i == 0x02 )
  5249                           		decf	((dispLCD_instReg@i)),w
  5250  0303  0322               	btfsc	status,2
  5251  0304  1903               	goto	u1591
  5252  0305  2B07               	goto	u1590
  5253  0306  2B08               u1591:
  5254  0307                     	goto	l1994
  5255  0307  2B0F               u1590:
  5256  0308                     	
  5257                           l1992:	
  5258  0308                     		movlw	2
  5259  0308  3002               	xorwf	((dispLCD_instReg@i)),w
  5260  0309  0622               	btfss	status,2
  5261  030A  1D03               	goto	u1601
  5262  030B  2B0D               	goto	u1600
  5263  030C  2B0E               u1601:
  5264  030D                     	goto	l1996
  5265  030D  2B1A               u1600:
  5266  030E                     	goto	l1994
  5267  030E  2B0F               	
  5268                           l121:	
  5269  030F                     	line	86
  5270                           	
  5271                           l1994:	
  5272  030F                     ;lcd.c: 86:         _delay((unsigned long)((2)*(20000000/4000.0)));
  5273                           	opt asmopt_push
  5274                           opt asmopt_off
  5275                           movlw	13
  5276  030F  300D               	bcf	status, 5	;RP0=0, select bank0
  5277  0310  1283               	bcf	status, 6	;RP1=0, select bank0
  5278  0311  1303               movwf	((??_dispLCD_instReg+0)+0+1),f
  5279  0312  00A1               	movlw	251
  5280  0313  30FB               movwf	((??_dispLCD_instReg+0)+0),f
  5281  0314  00A0               	u2217:
  5282  0315                     decfsz	((??_dispLCD_instReg+0)+0),f
  5283  0315  0BA0               	goto	u2217
  5284  0316  2B15               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  5285  0317  0BA1               	goto	u2217
  5286  0318  2B15               opt asmopt_pop
  5287                           
  5288                           	goto	l1998
  5289  0319  2B22               	line	87
  5290                           ;lcd.c: 87:     else
  5291                           	
  5292                           l119:	
  5293  031A                     	line	88
  5294                           	
  5295                           l1996:	
  5296  031A                     ;lcd.c: 88:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  5297                           	opt asmopt_push
  5298                           opt asmopt_off
  5299                           	movlw	65
  5300  031A  3041               	bcf	status, 5	;RP0=0, select bank0
  5301  031B  1283               	bcf	status, 6	;RP1=0, select bank0
  5302  031C  1303               movwf	((??_dispLCD_instReg+0)+0),f
  5303  031D  00A0               	u2227:
  5304  031E                     decfsz	(??_dispLCD_instReg+0)+0,f
  5305  031E  0BA0               	goto	u2227
  5306  031F  2B1E               	nop2
  5307  0320  2B21               opt asmopt_pop
  5308                           
  5309                           	goto	l1998
  5310  0321  2B22               	
  5311                           l122:	
  5312  0322                     	line	89
  5313                           	
  5314                           l1998:	
  5315  0322                     ;lcd.c: 89:     LCDbits.EN = 1;
  5316                           	bcf	status, 5	;RP0=0, select bank0
  5317  0322  1283               	bcf	status, 6	;RP1=0, select bank0
  5318  0323  1303               	bsf	(8),5	;volatile
  5319  0324  1688               	line	92
  5320                           	
  5321                           l2000:	
  5322  0325                     ;lcd.c: 92:     if( (i & 0xF0) == (0x20 | 0x00) )
  5323                           	movlw	low(0F0h)
  5324  0325  30F0               	andwf	(dispLCD_instReg@i),w
  5325  0326  0522               	movwf	(??_dispLCD_instReg+0)+0
  5326  0327  00A0               		movlw	32
  5327  0328  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  5328  0329  0620               	btfss	status,2
  5329  032A  1D03               	goto	u1611
  5330  032B  2B2D               	goto	u1610
  5331  032C  2B2E               u1611:
  5332  032D                     	goto	l2012
  5333  032D  2B48               u1610:
  5334  032E                     	line	94
  5335                           	
  5336                           l2002:	
  5337  032E                     ;lcd.c: 93:     {;lcd.c: 94:         LCDbits.RS = 0;
  5338                           	bcf	(8),4	;volatile
  5339  032E  1208               	line	95
  5340                           	
  5341                           l2004:	
  5342  032F                     ;lcd.c: 95:         LCDbits.BUS = i>>4;
  5343                           	movf	(dispLCD_instReg@i),w
  5344  032F  0822               	movwf	(??_dispLCD_instReg+0)+0
  5345  0330  00A0               	movlw	04h
  5346  0331  3004               u1625:
  5347  0332                     	clrc
  5348  0332  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  5349  0333  0CA0               	addlw	-1
  5350  0334  3EFF               	skipz
  5351  0335  1D03               	goto	u1625
  5352  0336  2B32               	movf	(8),w	;volatile
  5353  0337  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5354  0338  0620               	andlw	not ((1<<4)-1)
  5355  0339  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5356  033A  0620               	movwf	(8)	;volatile
  5357  033B  0088               	line	96
  5358                           	
  5359                           l2006:	
  5360  033C                     ;lcd.c: 96:         LCDbits.EN = 0;
  5361                           	bcf	(8),5	;volatile
  5362  033C  1288               	line	97
  5363                           	
  5364                           l2008:	
  5365  033D                     ;lcd.c: 97:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  5366                           	opt asmopt_push
  5367                           opt asmopt_off
  5368                           	movlw	65
  5369  033D  3041               	bcf	status, 5	;RP0=0, select bank0
  5370  033E  1283               	bcf	status, 6	;RP1=0, select bank0
  5371  033F  1303               movwf	((??_dispLCD_instReg+0)+0),f
  5372  0340  00A0               	u2237:
  5373  0341                     decfsz	(??_dispLCD_instReg+0)+0,f
  5374  0341  0BA0               	goto	u2237
  5375  0342  2B41               	nop2
  5376  0343  2B44               opt asmopt_pop
  5377                           
  5378                           	line	98
  5379                           	
  5380                           l2010:	
  5381  0344                     ;lcd.c: 98:         LCDbits.EN = 1;
  5382                           	bcf	status, 5	;RP0=0, select bank0
  5383  0344  1283               	bcf	status, 6	;RP1=0, select bank0
  5384  0345  1303               	bsf	(8),5	;volatile
  5385  0346  1688               	goto	l2012
  5386  0347  2B48               	line	99
  5387                           ;lcd.c: 99:     }
  5388                           	
  5389                           l123:	
  5390  0348                     	line	101
  5391                           	
  5392                           l2012:	
  5393  0348                     ;lcd.c: 101:     LCDbits.RS = 0;
  5394                           	bcf	(8),4	;volatile
  5395  0348  1208               	line	102
  5396                           	
  5397                           l2014:	
  5398  0349                     ;lcd.c: 102:     LCDbits.BUS = i & 0x0F;
  5399                           	movlw	low(0Fh)
  5400  0349  300F               	andwf	(dispLCD_instReg@i),w
  5401  034A  0522               	movwf	(??_dispLCD_instReg+0)+0
  5402  034B  00A0               	movf	(8),w	;volatile
  5403  034C  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5404  034D  0620               	andlw	not ((1<<4)-1)
  5405  034E  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5406  034F  0620               	movwf	(8)	;volatile
  5407  0350  0088               	line	103
  5408                           	
  5409                           l2016:	
  5410  0351                     ;lcd.c: 103:     LCDbits.EN = 0;
  5411                           	bcf	(8),5	;volatile
  5412  0351  1288               	line	104
  5413                           	
  5414                           l2018:	
  5415  0352                     ;lcd.c: 104:     if( i == 0x01 || i == 0x02 )
  5416                           		decf	((dispLCD_instReg@i)),w
  5417  0352  0322               	btfsc	status,2
  5418  0353  1903               	goto	u1631
  5419  0354  2B56               	goto	u1630
  5420  0355  2B57               u1631:
  5421  0356                     	goto	l2022
  5422  0356  2B5E               u1630:
  5423  0357                     	
  5424                           l2020:	
  5425  0357                     		movlw	2
  5426  0357  3002               	xorwf	((dispLCD_instReg@i)),w
  5427  0358  0622               	btfss	status,2
  5428  0359  1D03               	goto	u1641
  5429  035A  2B5C               	goto	u1640
  5430  035B  2B5D               u1641:
  5431  035C                     	goto	l2024
  5432  035C  2B69               u1640:
  5433  035D                     	goto	l2022
  5434  035D  2B5E               	
  5435                           l126:	
  5436  035E                     	line	105
  5437                           	
  5438                           l2022:	
  5439  035E                     ;lcd.c: 105:         _delay((unsigned long)((2)*(20000000/4000.0)));
  5440                           	opt asmopt_push
  5441                           opt asmopt_off
  5442                           movlw	13
  5443  035E  300D               	bcf	status, 5	;RP0=0, select bank0
  5444  035F  1283               	bcf	status, 6	;RP1=0, select bank0
  5445  0360  1303               movwf	((??_dispLCD_instReg+0)+0+1),f
  5446  0361  00A1               	movlw	251
  5447  0362  30FB               movwf	((??_dispLCD_instReg+0)+0),f
  5448  0363  00A0               	u2247:
  5449  0364                     decfsz	((??_dispLCD_instReg+0)+0),f
  5450  0364  0BA0               	goto	u2247
  5451  0365  2B64               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  5452  0366  0BA1               	goto	u2247
  5453  0367  2B64               opt asmopt_pop
  5454                           
  5455                           	goto	l2026
  5456  0368  2B71               	line	106
  5457                           ;lcd.c: 106:     else
  5458                           	
  5459                           l124:	
  5460  0369                     	line	107
  5461                           	
  5462                           l2024:	
  5463  0369                     ;lcd.c: 107:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  5464                           	opt asmopt_push
  5465                           opt asmopt_off
  5466                           	movlw	65
  5467  0369  3041               	bcf	status, 5	;RP0=0, select bank0
  5468  036A  1283               	bcf	status, 6	;RP1=0, select bank0
  5469  036B  1303               movwf	((??_dispLCD_instReg+0)+0),f
  5470  036C  00A0               	u2257:
  5471  036D                     decfsz	(??_dispLCD_instReg+0)+0,f
  5472  036D  0BA0               	goto	u2257
  5473  036E  2B6D               	nop2
  5474  036F  2B70               opt asmopt_pop
  5475                           
  5476                           	goto	l2026
  5477  0370  2B71               	
  5478                           l127:	
  5479  0371                     	line	108
  5480                           	
  5481                           l2026:	
  5482  0371                     ;lcd.c: 108:     LCDbits.EN = 1;
  5483                           	bcf	status, 5	;RP0=0, select bank0
  5484  0371  1283               	bcf	status, 6	;RP1=0, select bank0
  5485  0372  1303               	bsf	(8),5	;volatile
  5486  0373  1688               	line	109
  5487                           	
  5488                           l128:	
  5489  0374                     	return
  5490  0374  0008               	opt stack 0
  5491                           GLOBAL	__end_of_dispLCD_instReg
  5492                           	__end_of_dispLCD_instReg:
  5493  0375                     	signat	_dispLCD_instReg,4217
  5494                           	global	_dispLCD_dataReg
  5495                           
  5496 ;; *************** function _dispLCD_dataReg *****************
  5497 ;; Defined at:
  5498 ;;		line 112 in file "lcd.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  d               1    wreg     unsigned char 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  d               1    1[BANK0 ] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5512 ;;      Params:         0       0       0       0       0
  5513 ;;      Locals:         0       1       0       0       0
  5514 ;;      Temps:          0       1       0       0       0
  5515 ;;      Totals:         0       2       0       0       0
  5516 ;;Total ram usage:        2 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    2
  5519 ;; This function calls:
  5520 ;;		Nothing
  5521 ;; This function is called by:
  5522 ;;		_dispLCD_newChar
  5523 ;;		_dispLCD
  5524 ;;		_dispLCD_putChar
  5525 ;;		_dispLCDstr
  5526 ;;		_dispLCD_num
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5530                           	line	112
  5531                           global __ptext16
  5532                           __ptext16:	;psect for function _dispLCD_dataReg
  5533  066D                     psect	text16
  5534                           	file	"lcd.c"
  5535                           	line	112
  5536                           	global	__size_of_dispLCD_dataReg
  5537                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  5538  0031                     	
  5539                           _dispLCD_dataReg:	
  5540  066D                     ;incstack = 0
  5541                           	opt	stack 3
  5542                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  5543                           ;dispLCD_dataReg@d stored from wreg
  5544                           	bcf	status, 5	;RP0=0, select bank0
  5545  066D  1283               	bcf	status, 6	;RP1=0, select bank0
  5546  066E  1303               	movwf	(dispLCD_dataReg@d)
  5547  066F  00A1               	line	114
  5548                           	
  5549                           l2028:	
  5550  0670                     ;lcd.c: 112:  void dispLCD_dataReg( unsigned char d );lcd.c: 113: {;lcd.c: 114:     LCDb
                                 its.RS = 1;
  5551                           	bsf	(8),4	;volatile
  5552  0670  1608               	line	115
  5553                           	
  5554                           l2030:	
  5555  0671                     ;lcd.c: 115:     LCDbits.BUS = d >> 4;
  5556                           	movf	(dispLCD_dataReg@d),w
  5557  0671  0821               	movwf	(??_dispLCD_dataReg+0)+0
  5558  0672  00A0               	movlw	04h
  5559  0673  3004               u1655:
  5560  0674                     	clrc
  5561  0674  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  5562  0675  0CA0               	addlw	-1
  5563  0676  3EFF               	skipz
  5564  0677  1D03               	goto	u1655
  5565  0678  2E74               	movf	(8),w	;volatile
  5566  0679  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5567  067A  0620               	andlw	not ((1<<4)-1)
  5568  067B  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5569  067C  0620               	movwf	(8)	;volatile
  5570  067D  0088               	line	116
  5571                           	
  5572                           l2032:	
  5573  067E                     ;lcd.c: 116:     LCDbits.EN = 0;
  5574                           	bcf	(8),5	;volatile
  5575  067E  1288               	line	117
  5576                           	
  5577                           l2034:	
  5578  067F                     ;lcd.c: 117:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5579                           	opt asmopt_push
  5580                           opt asmopt_off
  5581                           	movlw	65
  5582  067F  3041               	bcf	status, 5	;RP0=0, select bank0
  5583  0680  1283               	bcf	status, 6	;RP1=0, select bank0
  5584  0681  1303               movwf	((??_dispLCD_dataReg+0)+0),f
  5585  0682  00A0               	u2267:
  5586  0683                     decfsz	(??_dispLCD_dataReg+0)+0,f
  5587  0683  0BA0               	goto	u2267
  5588  0684  2E83               	nop2
  5589  0685  2E86               opt asmopt_pop
  5590                           
  5591                           	line	118
  5592                           	
  5593                           l2036:	
  5594  0686                     ;lcd.c: 118:     LCDbits.EN = 1;
  5595                           	bcf	status, 5	;RP0=0, select bank0
  5596  0686  1283               	bcf	status, 6	;RP1=0, select bank0
  5597  0687  1303               	bsf	(8),5	;volatile
  5598  0688  1688               	line	120
  5599                           	
  5600                           l2038:	
  5601  0689                     ;lcd.c: 120:     LCDbits.RS = 1;
  5602                           	bsf	(8),4	;volatile
  5603  0689  1608               	line	121
  5604                           	
  5605                           l2040:	
  5606  068A                     ;lcd.c: 121:     LCDbits.BUS = d & 0x0F;
  5607                           	movlw	low(0Fh)
  5608  068A  300F               	andwf	(dispLCD_dataReg@d),w
  5609  068B  0521               	movwf	(??_dispLCD_dataReg+0)+0
  5610  068C  00A0               	movf	(8),w	;volatile
  5611  068D  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5612  068E  0620               	andlw	not ((1<<4)-1)
  5613  068F  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5614  0690  0620               	movwf	(8)	;volatile
  5615  0691  0088               	line	122
  5616                           	
  5617                           l2042:	
  5618  0692                     ;lcd.c: 122:     LCDbits.EN = 0;
  5619                           	bcf	(8),5	;volatile
  5620  0692  1288               	line	123
  5621                           ;lcd.c: 123:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  5622                           	opt asmopt_push
  5623                           opt asmopt_off
  5624                           	movlw	65
  5625  0693  3041               	bcf	status, 5	;RP0=0, select bank0
  5626  0694  1283               	bcf	status, 6	;RP1=0, select bank0
  5627  0695  1303               movwf	((??_dispLCD_dataReg+0)+0),f
  5628  0696  00A0               	u2277:
  5629  0697                     decfsz	(??_dispLCD_dataReg+0)+0,f
  5630  0697  0BA0               	goto	u2277
  5631  0698  2E97               	nop2
  5632  0699  2E9A               opt asmopt_pop
  5633                           
  5634                           	line	124
  5635                           	
  5636                           l2044:	
  5637  069A                     ;lcd.c: 124:     LCDbits.EN = 1;
  5638                           	bcf	status, 5	;RP0=0, select bank0
  5639  069A  1283               	bcf	status, 6	;RP1=0, select bank0
  5640  069B  1303               	bsf	(8),5	;volatile
  5641  069C  1688               	line	125
  5642                           	
  5643                           l131:	
  5644  069D                     	return
  5645  069D  0008               	opt stack 0
  5646                           GLOBAL	__end_of_dispLCD_dataReg
  5647                           	__end_of_dispLCD_dataReg:
  5648  069E                     	signat	_dispLCD_dataReg,4217
  5649                           	global	___awdiv
  5650                           
  5651 ;; *************** function ___awdiv *****************
  5652 ;; Defined at:
  5653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  divisor         2    0[BANK0 ] int 
  5656 ;;  dividend        2    2[BANK0 ] int 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  quotient        2    7[BANK0 ] int 
  5659 ;;  sign            1    6[BANK0 ] unsigned char 
  5660 ;;  counter         1    5[BANK0 ] unsigned char 
  5661 ;; Return value:  Size  Location     Type
  5662 ;;                  2    0[BANK0 ] int 
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5670 ;;      Params:         0       4       0       0       0
  5671 ;;      Locals:         0       4       0       0       0
  5672 ;;      Temps:          0       1       0       0       0
  5673 ;;      Totals:         0       9       0       0       0
  5674 ;;Total ram usage:        9 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; Hardware stack levels required when called:    2
  5677 ;; This function calls:
  5678 ;;		Nothing
  5679 ;; This function is called by:
  5680 ;;		_dispLCD
  5681 ;;		_dispLCD_num
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5685                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5686                           	line	5
  5687                           global __ptext17
  5688                           __ptext17:	;psect for function ___awdiv
  5689  0375                     psect	text17
  5690                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  5691                           	line	5
  5692                           	global	__size_of___awdiv
  5693                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  5694  0073                     	
  5695                           ___awdiv:	
  5696  0375                     ;incstack = 0
  5697                           	opt	stack 4
  5698                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5699                           	line	13
  5700                           	
  5701                           l2130:	
  5702  0375                     	bcf	status, 5	;RP0=0, select bank0
  5703  0375  1283               	bcf	status, 6	;RP1=0, select bank0
  5704  0376  1303               	clrf	(___awdiv@sign)
  5705  0377  01A6               	line	14
  5706                           	
  5707                           l2132:	
  5708  0378                     	btfss	(___awdiv@divisor+1),7
  5709  0378  1FA1               	goto	u1811
  5710  0379  2B7B               	goto	u1810
  5711  037A  2B7C               u1811:
  5712  037B                     	goto	l2138
  5713  037B  2B84               u1810:
  5714  037C                     	line	15
  5715                           	
  5716                           l2134:	
  5717  037C                     	comf	(___awdiv@divisor),f
  5718  037C  09A0               	comf	(___awdiv@divisor+1),f
  5719  037D  09A1               	incf	(___awdiv@divisor),f
  5720  037E  0AA0               	skipnz
  5721  037F  1903               	incf	(___awdiv@divisor+1),f
  5722  0380  0AA1               	line	16
  5723                           	
  5724                           l2136:	
  5725  0381                     	clrf	(___awdiv@sign)
  5726  0381  01A6               	incf	(___awdiv@sign),f
  5727  0382  0AA6               	goto	l2138
  5728  0383  2B84               	line	17
  5729                           	
  5730                           l616:	
  5731  0384                     	line	18
  5732                           	
  5733                           l2138:	
  5734  0384                     	btfss	(___awdiv@dividend+1),7
  5735  0384  1FA3               	goto	u1821
  5736  0385  2B87               	goto	u1820
  5737  0386  2B88               u1821:
  5738  0387                     	goto	l2144
  5739  0387  2B92               u1820:
  5740  0388                     	line	19
  5741                           	
  5742                           l2140:	
  5743  0388                     	comf	(___awdiv@dividend),f
  5744  0388  09A2               	comf	(___awdiv@dividend+1),f
  5745  0389  09A3               	incf	(___awdiv@dividend),f
  5746  038A  0AA2               	skipnz
  5747  038B  1903               	incf	(___awdiv@dividend+1),f
  5748  038C  0AA3               	line	20
  5749                           	
  5750                           l2142:	
  5751  038D                     	movlw	low(01h)
  5752  038D  3001               	movwf	(??___awdiv+0)+0
  5753  038E  00A4               	movf	(??___awdiv+0)+0,w
  5754  038F  0824               	xorwf	(___awdiv@sign),f
  5755  0390  06A6               	goto	l2144
  5756  0391  2B92               	line	21
  5757                           	
  5758                           l617:	
  5759  0392                     	line	22
  5760                           	
  5761                           l2144:	
  5762  0392                     	clrf	(___awdiv@quotient)
  5763  0392  01A7               	clrf	(___awdiv@quotient+1)
  5764  0393  01A8               	line	23
  5765                           	
  5766                           l2146:	
  5767  0394                     	movf	((___awdiv@divisor)),w
  5768  0394  0820               iorwf	((___awdiv@divisor+1)),w
  5769  0395  0421               	btfsc	status,2
  5770  0396  1903               	goto	u1831
  5771  0397  2B99               	goto	u1830
  5772  0398  2B9A               u1831:
  5773  0399                     	goto	l2166
  5774  0399  2BD7               u1830:
  5775  039A                     	line	24
  5776                           	
  5777                           l2148:	
  5778  039A                     	clrf	(___awdiv@counter)
  5779  039A  01A5               	incf	(___awdiv@counter),f
  5780  039B  0AA5               	line	25
  5781                           	goto	l2154
  5782  039C  2BA9               	
  5783                           l620:	
  5784  039D                     	line	26
  5785                           	
  5786                           l2150:	
  5787  039D                     	movlw	01h
  5788  039D  3001               	
  5789                           u1845:
  5790  039E                     	clrc
  5791  039E  1003               	rlf	(___awdiv@divisor),f
  5792  039F  0DA0               	rlf	(___awdiv@divisor+1),f
  5793  03A0  0DA1               	addlw	-1
  5794  03A1  3EFF               	skipz
  5795  03A2  1D03               	goto	u1845
  5796  03A3  2B9E               	line	27
  5797                           	
  5798                           l2152:	
  5799  03A4                     	movlw	low(01h)
  5800  03A4  3001               	movwf	(??___awdiv+0)+0
  5801  03A5  00A4               	movf	(??___awdiv+0)+0,w
  5802  03A6  0824               	addwf	(___awdiv@counter),f
  5803  03A7  07A5               	goto	l2154
  5804  03A8  2BA9               	line	28
  5805                           	
  5806                           l619:	
  5807  03A9                     	line	25
  5808                           	
  5809                           l2154:	
  5810  03A9                     	btfss	(___awdiv@divisor+1),(15)&7
  5811  03A9  1FA1               	goto	u1851
  5812  03AA  2BAC               	goto	u1850
  5813  03AB  2BAD               u1851:
  5814  03AC                     	goto	l2150
  5815  03AC  2B9D               u1850:
  5816  03AD                     	goto	l2156
  5817  03AD  2BAF               	
  5818                           l621:	
  5819  03AE                     	goto	l2156
  5820  03AE  2BAF               	line	29
  5821                           	
  5822                           l622:	
  5823  03AF                     	line	30
  5824                           	
  5825                           l2156:	
  5826  03AF                     	movlw	01h
  5827  03AF  3001               	
  5828                           u1865:
  5829  03B0                     	clrc
  5830  03B0  1003               	rlf	(___awdiv@quotient),f
  5831  03B1  0DA7               	rlf	(___awdiv@quotient+1),f
  5832  03B2  0DA8               	addlw	-1
  5833  03B3  3EFF               	skipz
  5834  03B4  1D03               	goto	u1865
  5835  03B5  2BB0               	line	31
  5836                           	movf	(___awdiv@divisor+1),w
  5837  03B6  0821               	subwf	(___awdiv@dividend+1),w
  5838  03B7  0223               	skipz
  5839  03B8  1D03               	goto	u1875
  5840  03B9  2BBC               	movf	(___awdiv@divisor),w
  5841  03BA  0820               	subwf	(___awdiv@dividend),w
  5842  03BB  0222               u1875:
  5843  03BC                     	skipc
  5844  03BC  1C03               	goto	u1871
  5845  03BD  2BBF               	goto	u1870
  5846  03BE  2BC0               u1871:
  5847  03BF                     	goto	l2162
  5848  03BF  2BC8               u1870:
  5849  03C0                     	line	32
  5850                           	
  5851                           l2158:	
  5852  03C0                     	movf	(___awdiv@divisor),w
  5853  03C0  0820               	subwf	(___awdiv@dividend),f
  5854  03C1  02A2               	movf	(___awdiv@divisor+1),w
  5855  03C2  0821               	skipc
  5856  03C3  1C03               	decf	(___awdiv@dividend+1),f
  5857  03C4  03A3               	subwf	(___awdiv@dividend+1),f
  5858  03C5  02A3               	line	33
  5859                           	
  5860                           l2160:	
  5861  03C6                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  5862  03C6  1427               	goto	l2162
  5863  03C7  2BC8               	line	34
  5864                           	
  5865                           l623:	
  5866  03C8                     	line	35
  5867                           	
  5868                           l2162:	
  5869  03C8                     	movlw	01h
  5870  03C8  3001               	
  5871                           u1885:
  5872  03C9                     	clrc
  5873  03C9  1003               	rrf	(___awdiv@divisor+1),f
  5874  03CA  0CA1               	rrf	(___awdiv@divisor),f
  5875  03CB  0CA0               	addlw	-1
  5876  03CC  3EFF               	skipz
  5877  03CD  1D03               	goto	u1885
  5878  03CE  2BC9               	line	36
  5879                           	
  5880                           l2164:	
  5881  03CF                     	movlw	01h
  5882  03CF  3001               	subwf	(___awdiv@counter),f
  5883  03D0  02A5               	btfss	status,2
  5884  03D1  1D03               	goto	u1891
  5885  03D2  2BD4               	goto	u1890
  5886  03D3  2BD5               u1891:
  5887  03D4                     	goto	l2156
  5888  03D4  2BAF               u1890:
  5889  03D5                     	goto	l2166
  5890  03D5  2BD7               	
  5891                           l624:	
  5892  03D6                     	goto	l2166
  5893  03D6  2BD7               	line	37
  5894                           	
  5895                           l618:	
  5896  03D7                     	line	38
  5897                           	
  5898                           l2166:	
  5899  03D7                     	movf	((___awdiv@sign)),w
  5900  03D7  0826               	btfsc	status,2
  5901  03D8  1903               	goto	u1901
  5902  03D9  2BDB               	goto	u1900
  5903  03DA  2BDC               u1901:
  5904  03DB                     	goto	l2170
  5905  03DB  2BE2               u1900:
  5906  03DC                     	line	39
  5907                           	
  5908                           l2168:	
  5909  03DC                     	comf	(___awdiv@quotient),f
  5910  03DC  09A7               	comf	(___awdiv@quotient+1),f
  5911  03DD  09A8               	incf	(___awdiv@quotient),f
  5912  03DE  0AA7               	skipnz
  5913  03DF  1903               	incf	(___awdiv@quotient+1),f
  5914  03E0  0AA8               	goto	l2170
  5915  03E1  2BE2               	
  5916                           l625:	
  5917  03E2                     	line	40
  5918                           	
  5919                           l2170:	
  5920  03E2                     	movf	(___awdiv@quotient+1),w
  5921  03E2  0828               	movwf	(?___awdiv+1)
  5922  03E3  00A1               	movf	(___awdiv@quotient),w
  5923  03E4  0827               	movwf	(?___awdiv)
  5924  03E5  00A0               	goto	l626
  5925  03E6  2BE7               	
  5926                           l2172:	
  5927  03E7                     	line	41
  5928                           	
  5929                           l626:	
  5930  03E7                     	return
  5931  03E7  0008               	opt stack 0
  5932                           GLOBAL	__end_of___awdiv
  5933                           	__end_of___awdiv:
  5934  03E8                     	signat	___awdiv,8314
  5935                           	global	_Wifi_state
  5936                           
  5937 ;; *************** function _Wifi_state *****************
  5938 ;; Defined at:
  5939 ;;		line 100 in file "wifi.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5953 ;;      Params:         0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0
  5955 ;;      Temps:          0       1       0       0       0
  5956 ;;      Totals:         0       1       0       0       0
  5957 ;;Total ram usage:        1 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    4
  5960 ;; This function calls:
  5961 ;;		_wifi_send
  5962 ;; This function is called by:
  5963 ;;		_main
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5967                           	file	"wifi.c"
  5968                           	line	100
  5969                           global __ptext18
  5970                           __ptext18:	;psect for function _Wifi_state
  5971  0765                     psect	text18
  5972                           	file	"wifi.c"
  5973                           	line	100
  5974                           	global	__size_of_Wifi_state
  5975                           	__size_of_Wifi_state	equ	__end_of_Wifi_state-_Wifi_state
  5976  000C                     	
  5977                           _Wifi_state:	
  5978  0765                     ;incstack = 0
  5979                           	opt	stack 3
  5980                           ; Regs used in _Wifi_state: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5981                           	line	102
  5982                           	
  5983                           l2246:	
  5984  0765                     ;wifi.c: 102:     wifi_send("AT+CWLAP\r\n");
  5985                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  5986  0765  309D               	bcf	status, 5	;RP0=0, select bank0
  5987  0766  1283               	bcf	status, 6	;RP1=0, select bank0
  5988  0767  1303               	movwf	(??_Wifi_state+0)+0
  5989  0768  00A3               	movf	(??_Wifi_state+0)+0,w
  5990  0769  0823               	movwf	(wifi_send@msg)
  5991  076A  00A1               	fcall	_wifi_send
  5992  076B  120A  118A  2633  120A  118A  	line	103
  5993                           	
  5994                           l350:	
  5995  0770                     	return
  5996  0770  0008               	opt stack 0
  5997                           GLOBAL	__end_of_Wifi_state
  5998                           	__end_of_Wifi_state:
  5999  0771                     	signat	_Wifi_state,89
  6000                           	global	_Wifi_mode
  6001                           
  6002 ;; *************** function _Wifi_mode *****************
  6003 ;; Defined at:
  6004 ;;		line 47 in file "wifi.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;  d               1    3[BANK0 ] unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6018 ;;      Params:         0       1       0       0       0
  6019 ;;      Locals:         0       0       0       0       0
  6020 ;;      Temps:          0       1       0       0       0
  6021 ;;      Totals:         0       2       0       0       0
  6022 ;;Total ram usage:        2 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    4
  6025 ;; This function calls:
  6026 ;;		_wifi_send
  6027 ;; This function is called by:
  6028 ;;		_main
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6032                           	line	47
  6033                           global __ptext19
  6034                           __ptext19:	;psect for function _Wifi_mode
  6035  05B1                     psect	text19
  6036                           	file	"wifi.c"
  6037                           	line	47
  6038                           	global	__size_of_Wifi_mode
  6039                           	__size_of_Wifi_mode	equ	__end_of_Wifi_mode-_Wifi_mode
  6040  0042                     	
  6041                           _Wifi_mode:	
  6042  05B1                     ;incstack = 0
  6043                           	opt	stack 3
  6044                           ; Regs used in _Wifi_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6045                           	line	49
  6046                           	
  6047                           l2230:	
  6048  05B1                     ;wifi.c: 47: void Wifi_mode(unsigned char d );wifi.c: 48: {;wifi.c: 49:     if(d == 1)
  6049                           	bcf	status, 5	;RP0=0, select bank0
  6050  05B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6051  05B2  1303               		decf	((Wifi_mode@d)),w
  6052  05B3  0323               	btfss	status,2
  6053  05B4  1D03               	goto	u1941
  6054  05B5  2DB7               	goto	u1940
  6055  05B6  2DB8               u1941:
  6056  05B7                     	goto	l2234
  6057  05B7  2DC2               u1940:
  6058  05B8                     	line	51
  6059                           	
  6060                           l2232:	
  6061  05B8                     ;wifi.c: 50:     {;wifi.c: 51:         wifi_send("AT+CWMODE=1\r\n");
  6062                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  6063  05B8  3073               	movwf	(??_Wifi_mode+0)+0
  6064  05B9  00A4               	movf	(??_Wifi_mode+0)+0,w
  6065  05BA  0824               	movwf	(wifi_send@msg)
  6066  05BB  00A1               	fcall	_wifi_send
  6067  05BC  120A  118A  2633  120A  118A  	goto	l2234
  6068  05C1  2DC2               	line	52
  6069                           ;wifi.c: 52:     }
  6070                           	
  6071                           l336:	
  6072  05C2                     	line	54
  6073                           	
  6074                           l2234:	
  6075  05C2                     ;wifi.c: 54:     if(d == 2)
  6076                           		movlw	2
  6077  05C2  3002               	bcf	status, 5	;RP0=0, select bank0
  6078  05C3  1283               	bcf	status, 6	;RP1=0, select bank0
  6079  05C4  1303               	xorwf	((Wifi_mode@d)),w
  6080  05C5  0623               	btfss	status,2
  6081  05C6  1D03               	goto	u1951
  6082  05C7  2DC9               	goto	u1950
  6083  05C8  2DCA               u1951:
  6084  05C9                     	goto	l2238
  6085  05C9  2DD4               u1950:
  6086  05CA                     	line	56
  6087                           	
  6088                           l2236:	
  6089  05CA                     ;wifi.c: 55:     {;wifi.c: 56:         wifi_send("AT+CWMODE=2\r\n");
  6090                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  6091  05CA  3081               	movwf	(??_Wifi_mode+0)+0
  6092  05CB  00A4               	movf	(??_Wifi_mode+0)+0,w
  6093  05CC  0824               	movwf	(wifi_send@msg)
  6094  05CD  00A1               	fcall	_wifi_send
  6095  05CE  120A  118A  2633  120A  118A  	goto	l2238
  6096  05D3  2DD4               	line	57
  6097                           ;wifi.c: 57:     }
  6098                           	
  6099                           l337:	
  6100  05D4                     	line	58
  6101                           	
  6102                           l2238:	
  6103  05D4                     ;wifi.c: 58:     if(d == 3)
  6104                           		movlw	3
  6105  05D4  3003               	bcf	status, 5	;RP0=0, select bank0
  6106  05D5  1283               	bcf	status, 6	;RP1=0, select bank0
  6107  05D6  1303               	xorwf	((Wifi_mode@d)),w
  6108  05D7  0623               	btfss	status,2
  6109  05D8  1D03               	goto	u1961
  6110  05D9  2DDB               	goto	u1960
  6111  05DA  2DDC               u1961:
  6112  05DB                     	goto	l2242
  6113  05DB  2DE6               u1960:
  6114  05DC                     	line	60
  6115                           	
  6116                           l2240:	
  6117  05DC                     ;wifi.c: 59:     {;wifi.c: 60:         wifi_send("AT+CWMODE=3\r\n");
  6118                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  6119  05DC  308F               	movwf	(??_Wifi_mode+0)+0
  6120  05DD  00A4               	movf	(??_Wifi_mode+0)+0,w
  6121  05DE  0824               	movwf	(wifi_send@msg)
  6122  05DF  00A1               	fcall	_wifi_send
  6123  05E0  120A  118A  2633  120A  118A  	line	61
  6124                           ;wifi.c: 61:     }
  6125                           	goto	l340
  6126  05E5  2DF2               	line	62
  6127                           ;wifi.c: 62:     else
  6128                           	
  6129                           l338:	
  6130  05E6                     	line	63
  6131                           	
  6132                           l2242:	
  6133  05E6                     ;wifi.c: 63:         wifi_send("AT+CWMODE=0\r\n");
  6134                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  6135  05E6  3065               	bcf	status, 5	;RP0=0, select bank0
  6136  05E7  1283               	bcf	status, 6	;RP1=0, select bank0
  6137  05E8  1303               	movwf	(??_Wifi_mode+0)+0
  6138  05E9  00A4               	movf	(??_Wifi_mode+0)+0,w
  6139  05EA  0824               	movwf	(wifi_send@msg)
  6140  05EB  00A1               	fcall	_wifi_send
  6141  05EC  120A  118A  2633  120A  118A  	goto	l340
  6142  05F1  2DF2               	
  6143                           l339:	
  6144  05F2                     	line	64
  6145                           	
  6146                           l340:	
  6147  05F2                     	return
  6148  05F2  0008               	opt stack 0
  6149                           GLOBAL	__end_of_Wifi_mode
  6150                           	__end_of_Wifi_mode:
  6151  05F3                     	signat	_Wifi_mode,4217
  6152                           	global	_Wifi_connect
  6153                           
  6154 ;; *************** function _Wifi_connect *****************
  6155 ;; Defined at:
  6156 ;;		line 71 in file "wifi.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6170 ;;      Params:         0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0
  6172 ;;      Temps:          0       1       0       0       0
  6173 ;;      Totals:         0       1       0       0       0
  6174 ;;Total ram usage:        1 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    4
  6177 ;; This function calls:
  6178 ;;		_wifi_send
  6179 ;; This function is called by:
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6184                           	line	71
  6185                           global __ptext20
  6186                           __ptext20:	;psect for function _Wifi_connect
  6187  0771                     psect	text20
  6188                           	file	"wifi.c"
  6189                           	line	71
  6190                           	global	__size_of_Wifi_connect
  6191                           	__size_of_Wifi_connect	equ	__end_of_Wifi_connect-_Wifi_connect
  6192  000C                     	
  6193                           _Wifi_connect:	
  6194  0771                     ;incstack = 0
  6195                           	opt	stack 3
  6196                           ; Regs used in _Wifi_connect: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6197                           	line	95
  6198                           	
  6199                           l2244:	
  6200  0771                     ;wifi.c: 95:     wifi_send("AT+CWJAP=\"automation\",\"12345678\"\r\n");
  6201                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  6202  0771  3030               	bcf	status, 5	;RP0=0, select bank0
  6203  0772  1283               	bcf	status, 6	;RP1=0, select bank0
  6204  0773  1303               	movwf	(??_Wifi_connect+0)+0
  6205  0774  00A3               	movf	(??_Wifi_connect+0)+0,w
  6206  0775  0823               	movwf	(wifi_send@msg)
  6207  0776  00A1               	fcall	_wifi_send
  6208  0777  120A  118A  2633  120A  118A  	line	98
  6209                           	
  6210                           l347:	
  6211  077C                     	return
  6212  077C  0008               	opt stack 0
  6213                           GLOBAL	__end_of_Wifi_connect
  6214                           	__end_of_Wifi_connect:
  6215  077D                     	signat	_Wifi_connect,89
  6216                           	global	_wifi_send
  6217                           
  6218 ;; *************** function _wifi_send *****************
  6219 ;; Defined at:
  6220 ;;		line 18 in file "wifi.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;  msg             1    1[BANK0 ] PTR const unsigned char 
  6223 ;;		 -> STR_12(18), STR_11(11), STR_10(11), STR_9(35), 
  6224 ;;		 -> STR_8(14), STR_7(14), STR_6(14), STR_5(14), 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6236 ;;      Params:         0       1       0       0       0
  6237 ;;      Locals:         0       0       0       0       0
  6238 ;;      Temps:          0       1       0       0       0
  6239 ;;      Totals:         0       2       0       0       0
  6240 ;;Total ram usage:        2 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:    3
  6243 ;; This function calls:
  6244 ;;		_txEUSART
  6245 ;;		_txStatusEUSART
  6246 ;; This function is called by:
  6247 ;;		_Wifi_mode
  6248 ;;		_Wifi_connect
  6249 ;;		_Wifi_state
  6250 ;;		_Wifi_ip
  6251 ;;		_Wifi_autoconnect
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6255                           	line	18
  6256                           global __ptext21
  6257                           __ptext21:	;psect for function _wifi_send
  6258  0633                     psect	text21
  6259                           	file	"wifi.c"
  6260                           	line	18
  6261                           	global	__size_of_wifi_send
  6262                           	__size_of_wifi_send	equ	__end_of_wifi_send-_wifi_send
  6263  003A                     	
  6264                           _wifi_send:	
  6265  0633                     ;incstack = 0
  6266                           	opt	stack 3
  6267                           ; Regs used in _wifi_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6268                           	line	20
  6269                           	
  6270                           l2120:	
  6271  0633                     ;wifi.c: 18: void wifi_send( const char * msg );wifi.c: 19: {;wifi.c: 20:     while( *ms
                                 g )
  6272                           	goto	l2128
  6273  0633  2E5D               	
  6274                           l321:	
  6275  0634                     	line	22
  6276                           ;wifi.c: 21:     {;wifi.c: 22:         while( eusart.txSTATUS() );
  6277                           	goto	l2122
  6278  0634  2E36               	
  6279                           l323:	
  6280  0635                     	goto	l2122
  6281  0635  2E36               	
  6282                           l322:	
  6283  0636                     	
  6284                           l2122:	
  6285  0636                     	bcf	status, 5	;RP0=0, select bank0
  6286  0636  1283               	bcf	status, 6	;RP1=0, select bank0
  6287  0637  1303               	movf	(0+low(_eusart|((0x0)<<8)+05h)),w
  6288  0638  0845               	fcall	fptable
  6289  0639  120A  118A  2048  120A  118A  	xorlw	0
  6290  063E  3A00               	skipz
  6291  063F  1D03               	goto	u1791
  6292  0640  2E42               	goto	u1790
  6293  0641  2E43               u1791:
  6294  0642                     	goto	l2122
  6295  0642  2E36               u1790:
  6296  0643                     	goto	l2124
  6297  0643  2E44               	
  6298                           l324:	
  6299  0644                     	line	23
  6300                           	
  6301                           l2124:	
  6302  0644                     ;wifi.c: 23:         eusart.tx( *msg );
  6303                           	bcf	status, 5	;RP0=0, select bank0
  6304  0644  1283               	bcf	status, 6	;RP1=0, select bank0
  6305  0645  1303               	movf	(wifi_send@msg),w
  6306  0646  0821               	movwf	fsr0
  6307  0647  0084               	fcall	stringdir
  6308  0648  120A  118A  2234  120A  118A  	movwf	(??_wifi_send+0)+0
  6309  064D  00A2               	movf	(??_wifi_send+0)+0,w
  6310  064E  0822               	movwf	(txEUSART@d)
  6311  064F  00A0               	movf	(0+low(_eusart|((0x0)<<8)+04h)),w
  6312  0650  0844               	fcall	fptable
  6313  0651  120A  118A  2048  120A  118A  	line	24
  6314                           	
  6315                           l2126:	
  6316  0656                     ;wifi.c: 24:         ++msg;
  6317                           	movlw	low(01h)
  6318  0656  3001               	bcf	status, 5	;RP0=0, select bank0
  6319  0657  1283               	bcf	status, 6	;RP1=0, select bank0
  6320  0658  1303               	movwf	(??_wifi_send+0)+0
  6321  0659  00A2               	movf	(??_wifi_send+0)+0,w
  6322  065A  0822               	addwf	(wifi_send@msg),f
  6323  065B  07A1               	goto	l2128
  6324  065C  2E5D               	line	25
  6325                           ;wifi.c: 25:     }
  6326                           	
  6327                           l320:	
  6328  065D                     	line	20
  6329                           	
  6330                           l2128:	
  6331  065D                     ;wifi.c: 20:     while( *msg )
  6332                           	bcf	status, 5	;RP0=0, select bank0
  6333  065D  1283               	bcf	status, 6	;RP1=0, select bank0
  6334  065E  1303               	movf	(wifi_send@msg),w
  6335  065F  0821               	movwf	fsr0
  6336  0660  0084               	fcall	stringdir
  6337  0661  120A  118A  2234  120A  118A  	xorlw	0
  6338  0666  3A00               	skipz
  6339  0667  1D03               	goto	u1801
  6340  0668  2E6A               	goto	u1800
  6341  0669  2E6B               u1801:
  6342  066A                     	goto	l2122
  6343  066A  2E36               u1800:
  6344  066B                     	goto	l326
  6345  066B  2E6C               	
  6346                           l325:	
  6347  066C                     	line	26
  6348                           	
  6349                           l326:	
  6350  066C                     	return
  6351  066C  0008               	opt stack 0
  6352                           GLOBAL	__end_of_wifi_send
  6353                           	__end_of_wifi_send:
  6354  066D                     	signat	_wifi_send,4217
  6355                           	global	_txStatusEUSART
  6356                           
  6357 ;; *************** function _txStatusEUSART *****************
  6358 ;; Defined at:
  6359 ;;		line 126 in file "eusart.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      unsigned char 
  6366 ;; Registers used:
  6367 ;;		wreg, status,0
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6373 ;;      Params:         0       0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    2
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		_wifi_send
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6387                           	file	"eusart.c"
  6388                           	line	126
  6389                           global __ptext22
  6390                           __ptext22:	;psect for function _txStatusEUSART
  6391  0791                     psect	text22
  6392                           	file	"eusart.c"
  6393                           	line	126
  6394                           	global	__size_of_txStatusEUSART
  6395                           	__size_of_txStatusEUSART	equ	__end_of_txStatusEUSART-_txStatusEUSART
  6396  000A                     	
  6397                           _txStatusEUSART:	
  6398  0791                     ;incstack = 0
  6399                           	opt	stack 3
  6400                           ; Regs used in _txStatusEUSART: [wreg+status,0]
  6401                           	line	128
  6402                           	
  6403                           l1574:	
  6404  0791                     ;eusart.c: 128:     return( !TXSTAbits.TRMT );
  6405                           	clrc
  6406  0791  1003               	bsf	status, 5	;RP0=1, select bank1
  6407  0792  1683               	bcf	status, 6	;RP1=0, select bank1
  6408  0793  1303               	btfss	(152)^080h,1	;volatile
  6409  0794  1C98               	setc
  6410  0795  1403               	movlw	0
  6411  0796  3000               	skipnc
  6412  0797  1803               	movlw	1
  6413  0798  3001               
  6414                           	goto	l282
  6415  0799  2F9A               	
  6416                           l1576:	
  6417  079A                     	line	129
  6418                           	
  6419                           l282:	
  6420  079A                     	return
  6421  079A  0008               	opt stack 0
  6422                           GLOBAL	__end_of_txStatusEUSART
  6423                           	__end_of_txStatusEUSART:
  6424  079B                     	signat	_txStatusEUSART,89
  6425                           	global	_txEUSART
  6426                           
  6427 ;; *************** function _txEUSART *****************
  6428 ;; Defined at:
  6429 ;;		line 115 in file "eusart.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  d               1    0[BANK0 ] unsigned char 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6443 ;;      Params:         0       1       0       0       0
  6444 ;;      Locals:         0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0
  6446 ;;      Totals:         0       1       0       0       0
  6447 ;;Total ram usage:        1 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:    2
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_wifi_send
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6457                           	line	115
  6458                           global __ptext23
  6459                           __ptext23:	;psect for function _txEUSART
  6460  07B2                     psect	text23
  6461                           	file	"eusart.c"
  6462                           	line	115
  6463                           	global	__size_of_txEUSART
  6464                           	__size_of_txEUSART	equ	__end_of_txEUSART-_txEUSART
  6465  0005                     	
  6466                           _txEUSART:	
  6467  07B2                     ;incstack = 0
  6468                           	opt	stack 3
  6469                           ; Regs used in _txEUSART: [wreg]
  6470                           	line	117
  6471                           	
  6472                           l2046:	
  6473  07B2                     ;eusart.c: 115: void txEUSART( unsigned char d );eusart.c: 116: {;eusart.c: 117:     TXR
                                 EG = d;
  6474                           	bcf	status, 5	;RP0=0, select bank0
  6475  07B2  1283               	bcf	status, 6	;RP1=0, select bank0
  6476  07B3  1303               	movf	(txEUSART@d),w
  6477  07B4  0820               	movwf	(25)	;volatile
  6478  07B5  0099               	line	118
  6479                           	
  6480                           l279:	
  6481  07B6                     	return
  6482  07B6  0008               	opt stack 0
  6483                           GLOBAL	__end_of_txEUSART
  6484                           	__end_of_txEUSART:
  6485  07B7                     	signat	_txEUSART,4217
  6486                           	global	_isr
  6487                           
  6488 ;; *************** function _isr *****************
  6489 ;; Defined at:
  6490 ;;		line 12 in file "interrupt.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0
  6506 ;;      Temps:          3       0       0       0       0
  6507 ;;      Totals:         3       0       0       0       0
  6508 ;;Total ram usage:        3 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    1
  6511 ;; This function calls:
  6512 ;;		_fifo_inserir
  6513 ;; This function is called by:
  6514 ;;		Interrupt level 1
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6518                           	file	"interrupt.c"
  6519                           	line	12
  6520                           global __ptext24
  6521                           __ptext24:	;psect for function _isr
  6522  06F2                     psect	text24
  6523                           	file	"interrupt.c"
  6524                           	line	12
  6525                           	global	__size_of_isr
  6526                           	__size_of_isr	equ	__end_of_isr-_isr
  6527  0016                     	
  6528                           _isr:	
  6529  06F2                     ;incstack = 0
  6530                           	opt	stack 3
  6531                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6532                           psect	intentry,class=CODE,delta=2
  6533                           global __pintentry
  6534                           __pintentry:
  6535  0004                     global interrupt_function
  6536                           interrupt_function:
  6537  0004                     	global saved_w
  6538                           	saved_w	set	btemp+0
  6539  007E                     	movwf	saved_w
  6540  0004  00FE               	swapf	status,w
  6541  0005  0E03               	movwf	(??_isr+0)
  6542  0006  00F3               	movf	fsr0,w
  6543  0007  0804               	movwf	(??_isr+1)
  6544  0008  00F4               	movf	pclath,w
  6545  0009  080A               	movwf	(??_isr+2)
  6546  000A  00F5               	ljmp	_isr
  6547  000B  120A  118A  2EF2   psect	text24
  6548                           	line	14
  6549                           	
  6550                           i1l1980:	
  6551  06F2                     ;interrupt.c: 14:     if( PIR1bits.RCIF )
  6552                           	bcf	status, 5	;RP0=0, select bank0
  6553  06F2  1283               	bcf	status, 6	;RP1=0, select bank0
  6554  06F3  1303               	btfss	(12),5	;volatile
  6555  06F4  1E8C               	goto	u157_21
  6556  06F5  2EF7               	goto	u157_20
  6557  06F6  2EF8               u157_21:
  6558  06F7                     	goto	i1l368
  6559  06F7  2EFF               u157_20:
  6560  06F8                     	line	16
  6561                           	
  6562                           i1l1982:	
  6563  06F8                     ;interrupt.c: 15:     {;interrupt.c: 16:         fifo_inserir( RCREG );
  6564                           	movf	(26),w	;volatile
  6565  06F8  081A               	fcall	_fifo_inserir
  6566  06F9  120A  118A  271D  120A  118A  	goto	i1l368
  6567  06FE  2EFF               	line	17
  6568                           ;interrupt.c: 17:     }
  6569                           	
  6570                           i1l367:	
  6571  06FF                     	line	19
  6572                           	
  6573                           i1l368:	
  6574  06FF                     	movf	(??_isr+2),w
  6575  06FF  0875               	movwf	pclath
  6576  0700  008A               	movf	(??_isr+1),w
  6577  0701  0874               	movwf	fsr0
  6578  0702  0084               	swapf	(??_isr+0)^0FFFFFF80h,w
  6579  0703  0E73               	movwf	status
  6580  0704  0083               	swapf	saved_w,f
  6581  0705  0EFE               	swapf	saved_w,w
  6582  0706  0E7E               	retfie
  6583  0707  0009               	opt stack 0
  6584                           GLOBAL	__end_of_isr
  6585                           	__end_of_isr:
  6586  0708                     	signat	_isr,89
  6587                           	global	_fifo_inserir
  6588                           
  6589 ;; *************** function _fifo_inserir *****************
  6590 ;; Defined at:
  6591 ;;		line 17 in file "fifo.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  d               1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  d               1    2[COMMON] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6605 ;;      Params:         0       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0
  6607 ;;      Temps:          2       0       0       0       0
  6608 ;;      Totals:         3       0       0       0       0
  6609 ;;Total ram usage:        3 bytes
  6610 ;; Hardware stack levels used:    1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_isr
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6618                           	file	"fifo.c"
  6619                           	line	17
  6620                           global __ptext25
  6621                           __ptext25:	;psect for function _fifo_inserir
  6622  071D                     psect	text25
  6623                           	file	"fifo.c"
  6624                           	line	17
  6625                           	global	__size_of_fifo_inserir
  6626                           	__size_of_fifo_inserir	equ	__end_of_fifo_inserir-_fifo_inserir
  6627  0015                     	
  6628                           _fifo_inserir:	
  6629  071D                     ;incstack = 0
  6630                           	opt	stack 3
  6631                           ; Regs used in _fifo_inserir: [wreg-fsr0h+status,2+status,0]
  6632                           ;fifo_inserir@d stored from wreg
  6633                           	movwf	(fifo_inserir@d)
  6634  071D  00F2               	line	19
  6635                           	
  6636                           i1l1810:	
  6637  071E                     ;fifo.c: 17: void fifo_inserir( unsigned char d );fifo.c: 18: {;fifo.c: 19:     fifo[fif
                                 o_head] = d;
  6638                           	movf	(fifo_inserir@d),w
  6639  071E  0872               	movwf	(??_fifo_inserir+0)+0
  6640  071F  00F0               	bcf	status, 5	;RP0=0, select bank0
  6641  0720  1283               	bcf	status, 6	;RP1=0, select bank0
  6642  0721  1303               	movf	(_fifo_head),w
  6643  0722  0868               	addlw	low(_fifo|((0x0)<<8))&0ffh
  6644  0723  3E57               	movwf	fsr0
  6645  0724  0084               	movf	(??_fifo_inserir+0)+0,w
  6646  0725  0870               	bcf	status, 7	;select IRP bank0
  6647  0726  1383               	movwf	indf
  6648  0727  0080               	line	20
  6649                           	
  6650                           i1l1812:	
  6651  0728                     ;fifo.c: 20:     fifo_head = ++fifo_head % 16;
  6652                           	movlw	low(01h)
  6653  0728  3001               	movwf	(??_fifo_inserir+0)+0
  6654  0729  00F0               	movf	(??_fifo_inserir+0)+0,w
  6655  072A  0870               	addwf	(_fifo_head),f
  6656  072B  07E8               	movf	((_fifo_head)),w
  6657  072C  0868               	andlw	0Fh
  6658  072D  390F               	movwf	(??_fifo_inserir+1)+0
  6659  072E  00F1               	movf	(??_fifo_inserir+1)+0,w
  6660  072F  0871               	movwf	(_fifo_head)
  6661  0730  00E8               	line	21
  6662                           	
  6663                           i1l377:	
  6664  0731                     	return
  6665  0731  0008               	opt stack 0
  6666                           GLOBAL	__end_of_fifo_inserir
  6667                           	__end_of_fifo_inserir:
  6668  0732                     	signat	_fifo_inserir,4217
  6669                           global	___latbits
  6670                           ___latbits	equ	2
  6671  0002                     	global	fptotal
  6672                           fptotal equ 28
  6673  001C                     	file ""
  6674                           	line	#
  6675                           psect	functab,class=ENTRY,delta=2
  6676                           global __pfunctab
  6677                           __pfunctab:
  6678  0048                     	global	fptable,__fptable
  6679                           __fptable:
  6680  0048                     fptable:
  6681  0048                     	movwf (btemp+1)&07Fh
  6682  0048  00FF               	movlw high(fptable)
  6683  0049  3000               	movwf pclath
  6684  004A  008A               	movf (btemp+1)&07Fh,w
  6685  004B  087F               	addwf pc
  6686  004C  0782               	global	fpbase
  6687                           fpbase:
  6688  004D                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  6689  004D  284D               	file ""
  6690                           	line	#
  6691                           fp__txEUSART:
  6692  004E                     	ljmp	_txEUSART
  6693  004E  120A  118A  2FB2   	file ""
  6694                           	line	#
  6695                           fp__txStatusEUSART:
  6696  0051                     	ljmp	_txStatusEUSART
  6697  0051  120A  118A  2F91   	file ""
  6698                           	line	#
  6699                           fp__wifi_send:
  6700  0054                     entry__wifi_send:
  6701  0054                     	global	entry__wifi_send
  6702                           	ljmp	_wifi_send
  6703  0054  120A  118A  2E33   	file ""
  6704                           	line	#
  6705                           fp__Wifi_connect:
  6706  0057                     	ljmp	_Wifi_connect
  6707  0057  120A  118A  2F71   	file ""
  6708                           	line	#
  6709                           fp__Wifi_mode:
  6710  005A                     	ljmp	_Wifi_mode
  6711  005A  120A  118A  2DB1   	file ""
  6712                           	line	#
  6713                           fp__Wifi_state:
  6714  005D                     	ljmp	_Wifi_state
  6715  005D  120A  118A  2F65   	file ""
  6716                           	line	#
  6717                           fp__dispLCD:
  6718  0060                     	ljmp	_dispLCD
  6719  0060  120A  118A  2C57   	file ""
  6720                           	line	#
  6721                           fp__dispLCD_B0:
  6722  0063                     	ljmp	_dispLCD_B0
  6723  0063  120A  118A  2F87   	file ""
  6724                           	line	#
  6725                           fp__dispLCD_B1:
  6726  0066                     	ljmp	_dispLCD_B1
  6727  0066  120A  118A  2F7D   	file ""
  6728                           	line	#
  6729                           fp__dispLCD_clr:
  6730  0069                     	ljmp	_dispLCD_clr
  6731  0069  120A  118A  2FAB   	file ""
  6732                           	line	#
  6733                           fp__dispLCD_init:
  6734  006C                     	ljmp	_dispLCD_init
  6735  006C  120A  118A  2CB6   	file ""
  6736                           	line	#
  6737                           fp__keyboard_init:
  6738  006F                     	ljmp	_keyboard_init
  6739  006F  120A  118A  2F56   	file ""
  6740                           	line	#
  6741                           fp__initEUSART:
  6742  0072                     	ljmp	_initEUSART
  6743  0072  120A  118A  2D14   	file ""
  6744                           	line	#
  6745                           fp__wifi_init:
  6746  0075                     entry__wifi_init:
  6747  0075                     	global	entry__wifi_init
  6748                           	ljmp	_wifi_init
  6749  0075  120A  118A  2F45   	global __end_of__fptable
  6750                           	__end_of__fptable:
  6751  0078                     	global __size_of__fptable
  6752                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  6753  0030                     	global	btemp
  6754                           	btemp set 07Eh
  6755  007E                     
  6756                           	DABS	1,126,2	;btemp
  6757                           	global	wtemp0
  6758                           	wtemp0 set btemp+0
  6759  007E                     	end


Data Sizes:
    Strings     136
    Constant    47
    Data        100
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     32      73
    BANK1            80     75      79
    BANK3            96      0      73
    BANK2            96      0       0

Pointer List with Targets:

    S29$1$0	PTR const unsigned char  size(1) Largest target is 0

    S123$1$0	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_12(CODE[18]), STR_11(CODE[11]), STR_10(CODE[11]), STR_9(CODE[35]), 
		 -> STR_8(CODE[14]), STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), 

    S123$2$0	PTR unsigned char  size(1) Largest target is 0

    S470$7$1	PTR const unsigned char  size(1) Largest target is 0

    S470$7$0	PTR const unsigned char  size(1) Largest target is 0

    S29$2$2	PTR const unsigned char  size(1) Largest target is 33
		 -> main@vtr(BANK1[33]), 

    wifi_send@msg	PTR const unsigned char  size(1) Largest target is 35
		 -> STR_12(CODE[18]), STR_11(CODE[11]), STR_10(CODE[11]), STR_9(CODE[35]), 
		 -> STR_8(CODE[14]), STR_7(CODE[14]), STR_6(CODE[14]), STR_5(CODE[14]), 

    S470eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(1) Largest target is 2
		 -> search(), 

    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(1) Largest target is 2
		 -> search(), 

    S470eusartT$init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    eusart.init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    S470eusartT$txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    S470eusartT$tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    eusart.tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    S470eusartT$rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S470eusartT$rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    S470eusartT$rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    S470eusartT$rx	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    eusart.rx	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 33
		 -> main@vtr(BANK1[33]), 

    dispLCD_newChar@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> newChar_degree(CODE[8]), 

    S123$state	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_state(), 

    wifi.state	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_state(), 

    S123$autoconnect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_autoconnect(), 

    wifi.autoconnect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_autoconnect(), 

    S123$ip	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_ip(), 

    wifi.ip	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_ip(), 

    S123$connect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_connect(), 

    wifi.connect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_connect(), 

    S123$mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_mode(), 

    wifi.mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_mode(), 

    S123$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> wifi_receive(), 

    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> wifi_receive(), 

    S123$send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> wifi_send(), 

    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> wifi_send(), 

    S123$init	PTR FTN(long ,)void  size(1) Largest target is 1
		 -> wifi_init(), 

    wifi.init	PTR FTN(long ,)void  size(1) Largest target is 1
		 -> wifi_init(), 

    S94$init	PTR FTN()void  size(1) Largest target is 1
		 -> keyboard_init(), 

    keyboard.init	PTR FTN()void  size(1) Largest target is 1
		 -> keyboard_init(), 

    S94$scan	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> keyboard_scan(), 

    keyboard.scan	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> keyboard_scan(), 

    S94$teclaAtual	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> currentKey(), 

    keyboard.teclaAtual	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> currentKey(), 

    S94$teclaAnterior	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> previousKey(), 

    keyboard.teclaAnterior	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> previousKey(), 

    S29$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    lcd.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S29$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    lcd.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S29$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    lcd.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S29$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    lcd.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S29$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    lcd.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S29$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    lcd.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S29$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    lcd.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_fifo_inserir

Critical Paths under _main in BANK0

    _main->_wifi_init
    _wifi_init->_initEUSART
    _initEUSART->___lldiv
    _dispLCD_init->_dispLCD_newChar
    _dispLCD_newChar->_dispLCD_instReg
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->___awdiv
    _Wifi_state->_wifi_send
    _Wifi_mode->_wifi_send
    _Wifi_connect->_wifi_send
    _wifi_send->_txEUSART

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0    9051
                                             28 BANK0      4     4      0
                                              0 BANK1     75    75      0
                       _Wifi_connect *
                          _Wifi_mode *
                         _Wifi_state *
                              _delay
                            _dispLCD *
                         _dispLCD_B0 *
                         _dispLCD_B1 *
                        _dispLCD_clr *
                       _dispLCD_init *
                       _fifo_retirar
                           _fifo_tam
                      _keyboard_init *
                          _wifi_init
 ---------------------------------------------------------------------------------
 (1) _wifi_init                                            4     0      4     638
                                             24 BANK0      4     0      4
                         _initEUSART *
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                          10     6      4     517
                                             14 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _keyboard_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_retirar                                         3     3      0      37
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         1     1      0    1383
                                              7 BANK0      1     1      0
                              _delay
                    _dispLCD_instReg
                    _dispLCD_newChar
 ---------------------------------------------------------------------------------
 (2) _dispLCD_newChar                                      4     3      1     561
                                              3 BANK0      4     3      1
                    _dispLCD_dataReg
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2     574
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     248
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD_B1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_B0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              6     3      3    2678
                                             12 BANK0      6     3      3
                            ___awdiv
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     850
                                              9 BANK0      3     2      1
                            ___awdiv (ARG)
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     248
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1345
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Wifi_state                                           1     1      0     881
                                              3 BANK0      1     1      0
                          _wifi_send
 ---------------------------------------------------------------------------------
 (1) _Wifi_mode                                            2     1      1    1039
                                              3 BANK0      2     1      1
                          _wifi_send
 ---------------------------------------------------------------------------------
 (1) _Wifi_connect                                         1     1      0     881
                                              3 BANK0      1     1      0
                          _wifi_send
 ---------------------------------------------------------------------------------
 (2) _wifi_send                                            2     1      1     881
                                              1 BANK0      2     1      1
                           _txEUSART *
                     _txStatusEUSART *
 ---------------------------------------------------------------------------------
 (3) _txStatusEUSART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _txEUSART                                             1     0      1      96
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0      22
                                              3 COMMON     3     3      0
                       _fifo_inserir
 ---------------------------------------------------------------------------------
 (5) _fifo_inserir                                         3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Wifi_connect *
     _wifi_send
       _txEUSART *
       _txStatusEUSART *
   _Wifi_mode *
     _wifi_send
       _txEUSART *
       _txStatusEUSART *
   _Wifi_state *
     _wifi_send
       _txEUSART *
       _txStatusEUSART *
   _delay *
   _dispLCD *
     ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       ___awdiv (ARG)
       _dispLCD_instReg (ARG)
   _dispLCD_B0 *
   _dispLCD_B1 *
   _dispLCD_clr *
     _dispLCD_instReg
   _dispLCD_init *
     _delay
     _dispLCD_instReg
     _dispLCD_newChar
       _dispLCD_dataReg
       _dispLCD_instReg
   _fifo_retirar *
   _fifo_tam *
   _keyboard_init *
   _wifi_init *
     _initEUSART *
       ___lldiv

 _isr (ROOT)
   _fifo_inserir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      49       9       76.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     4B      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     20      49       5       91.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E9      12        0.0%
ABS                  0      0      E9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Nov 04 15:35:32 2021

                       pc 0002               fp__txEUSART 004E               __CFG_CP$OFF 0000  
                      l80 0131                        l81 0122                        l90 0193  
                      l82 0121                        l91 0215                        l83 0130  
                      l75 00E0                        l92 01D3                        l84 0162  
                      l76 0102                        l93 0214                        l85 0153  
                      l77 00FA                        l94 0213                        l86 0152  
                      l78 00FA                        l95 0221                        l87 0161  
                      l79 0101                        l96 0230                        l88 0216  
                      l97 0231                        l89 0163                        l98 0231  
            ___awdiv@sign 0026   __end_of_dispLCD_dataReg 069E                        fsr 0004  
          ??_fifo_inserir 0070                       l103 06B3                       l104 069F  
                     l121 030F                       l105 06BC                       l122 0322  
                     l106 06BC                       l131 069D                       l123 0348  
                     l124 0369                       l220 0764                       l126 035E  
                     l134 071C                       l150 049D                       l127 0371  
                     l119 031A                       l151 04B5                       l320 065D  
                     l128 0374                       l152 04B5                       l321 0634  
                     l137 0612                       l145 0513                       l322 0636  
                     l138 062C                       l323 0635                       l139 0632  
                     l324 0644                       l340 05F2                       l148 04AA  
                     l325 066C                       l149 0466                       l317 0755  
                     l326 066C                       l350 0770                       l182 0790  
                     l502 044D                       l503 040B                       l336 05C2  
                     l504 03FD                       l337 05D4                       l185 0786  
                     l505 0410                       l282 079A                       l338 05E6  
                     l506 0411                       l347 077C                       l339 05F2  
                     l179 07B1                       l507 043C                       l620 039D  
                     l380 06D8                       l508 044C                       l621 03AE  
                     l381 06DA                       l509 0456                       l285 0567  
                     l622 03AF                       l279 07B6                       l623 03C8  
                     l624 03D6                       l616 0384                       l384 07AA  
                     l625 03E2                       l617 0392                       l626 03E7  
                     l618 03D7                       l619 03A9              __CFG_CPD$OFF 0000  
          ??_fifo_retirar 0020   __end_of_dispLCD_newChar 0633                       _lcd 0050  
                     _isr 06F2                       fsr0 0004                       indf 0000  
 __end_of_dispLCD_instReg 0375              __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000  
                    l2000 0325                      l2010 0344                      l2002 032E  
                    l2020 0357                      l2004 032F                      l2012 0348  
                    l2100 0551                      l2030 0671                      l2022 035E  
                    l2014 0349                      l2006 033C                      l2110 055E  
                    l2102 0552                      l2120 0633                      l2040 068A  
                    l2032 067E                      l2024 0369                      l2016 0351  
                    l2008 033D                      l2200 04C8                      l2112 0561  
                    l2104 0555                      l2122 0636                      l2130 0375  
                    l2042 0692                      l2034 067F                      l2026 0371  
                    l2018 0352                      l2210 0508                      l2202 04C9  
                    l2050 03FA                      l2114 0564                      l2106 0558  
                    l2124 0644                      l2140 0388                      l2132 0378  
                    l2044 069A                      l2036 0686                      l2028 0670  
                    l2220 0491                      l2212 0457                      l2204 04CA  
                    l2060 042C                      l2052 03FD                      l2116 0565  
                    l2108 055B                      l2300 0193                      l2046 07B2  
                    l2126 0656                      l2230 05B1                      l2150 039D  
                    l2142 038D                      l2134 037C                      l2038 0689  
                    l2222 049D                      l2214 045B                      l2206 04D6  
                    l2070 0456                      l2062 043A                      l2054 040B  
                    l2118 0566                      l2310 01D9                      l2302 0199  
                    l2128 065D                      l2240 05DC                      l2232 05B8  
                    l2160 03C6                      l2152 03A4                      l2144 0392  
                    l2136 0381                      l2224 04A3                      l2216 0466  
                    l2072 069E                      l2080 05F6                      l2208 04FC  
                    l2064 043C                      l2056 0411                      l2048 03E8  
                    l2312 01E7                      l2304 01A7                      l2242 05E6  
                    l2234 05C2                      l2170 03E2                      l2162 03C8  
                    l2154 03A9                      l2146 0394                      l2138 0384  
                    l2218 0475                      l2226 04AA                      l2074 069F  
                    l2090 061F                      l2082 0607                      l2066 0445  
                    l2058 041A                      l2314 01F6                      l2306 01B6  
                    l2250 00A6                      l2244 0771                      l2236 05CA  
                    l2172 03E7                      l2164 03CF                      l2156 03AF  
                    l2148 039A                      l2228 07AB                      l2076 06B3  
                    l2092 0625                      l2084 060A                      l2180 06C6  
                    l2068 044D                      l2308 01D3                      l2316 0216  
                    l2260 00C5                      l2252 00A9                      l2238 05D4  
                    l2246 0765                      l2158 03C0                      l2166 03D7  
                    l2078 070B                      l2086 0611                      l2094 062C  
                    l2190 04C1                      l2182 06CE                      l2174 0745  
                    l2318 0221                      l2270 00EF                      l2262 00D4  
                    l2254 00AA                      l2168 03DC                      l2088 0612  
                    l2192 04C4                      l2184 06D8                      l2176 06BD  
                    l1720 07AA                      l2096 0514                      l2280 0122  
                    l2272 0102                      l2264 00E0                      l2256 00B5  
                    l2248 0078                      l2194 04C5                      l2186 06DA  
                    l2178 06C0                      l2098 0515                      l2290 0153  
                    l2274 010D                      l2282 0131                      l2266 00E6  
                    l2258 00BD                      l2196 04C6                      l2188 04B6  
                    l2292 0163                      l2284 013E                      l2276 0115  
                    l2268 00EC                      l1574 0791                      l2198 04C7  
                    l1718 07A3                      l2294 016F                      l2286 0146  
                    l2278 0118                      l1576 079A                      l2296 0175  
                    l2288 0149                      l1770 0786                      l2298 0183  
                    l1764 0787                      l1780 0762                      l1772 0756  
                    l1766 0790                      l1782 0763                      l1774 075C  
                    l1768 077D                      l1776 0760                      l1778 0761  
                    l1990 0302                      l1992 0308                      l1994 030F  
                    l1986 02F4                      l1996 031A                      l1988 02F5  
                    l1998 0322                      ?_isr 0070                      STR_1 02EC  
                    STR_2 02EC                      STR_3 02EC                      STR_4 02EC  
                    STR_5 02AC                      STR_6 02BA                      STR_7 02C8  
                    STR_8 029E                      STR_9 0269                      u2000 0100  
                    u2001 00FF                      u2010 010D                      u2011 010C  
                    u2020 012F                      u2021 012E                      u2030 013E  
                    u2031 013D                      u2040 0160                      u2041 015F  
                    u2050 0175                      u2051 0174                      u2060 0199  
                    u2061 0198                      u2070 01D9                      u2207 06A5  
                    u2071 01D8                      u1600 030E                      u2080 0220  
                    u2217 0315                      u1601 030D                      u2081 021F  
                    u1610 032E                      u1611 032D                      u2227 031E  
                    u1700 042C                      u2237 0341                      u1701 042B  
                    u1630 0357                      u2247 0364                      u1631 0356  
                    u1800 066B                      u1640 035D                      u1720 044B  
                    u1801 066A                      u2257 036D                      u1641 035C  
                    u1625 0332                      u1721 044A                      u1705 0428  
                    u1810 037C                      u1730 06BB                      u1811 037B  
                    u2267 0683                      u1731 06BA                      u1715 043D  
                    u1900 03DC                      u1820 0388                      u1660 03FA  
                    u1901 03DB                      u1821 0387                      u2277 0697  
                    u1661 03F9                      u1830 039A                      u1590 0308  
                    u1910 06C6                      u1831 0399                      u1655 0674  
                    u1591 0307                      u1911 06C5                      u1920 0475  
                    u1760 0610                      u1680 040F                      u1585 02F8  
                    u1745 070E                      u1921 0474                      u1761 060F  
                    u1681 040E                      u1850 03AD                      u1930 04B4  
                    u1770 062B                      u1851 03AC                      u1931 04B3  
                    u1771 062A                      u1755 05F9                      u1675 03FF  
                    u1940 05B8                      u1780 0525                      u1941 05B7  
                    u1845 039E                      u1925 0471                      u1790 0643  
                    u1950 05CA                      u1870 03C0                      u1791 0642  
                    u1951 05C9                      u1871 03BF                      u1695 0413  
                    u1960 05DC                      u1961 05DB                      u1865 03B0  
                    u1785 0520                      u1890 03D5                      u1970 0082  
                    u1891 03D4                      u1875 03BC                      u1980 0098  
                    u1885 03C9                      u1990 00E6                      u1991 00E5  
                    _PASS 0255                      _SSID 024A                      _WPUB 0095  
            __CFG_WRT$OFF 0000                      _fifo 0057                      _main 0078  
            fp__wifi_init 0075              fp__wifi_send 0054                      _wifi 0048  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
                   ??_isr 0073                     ?_main 0070           __end_of___awdiv 03E8  
            wifi_send@msg 0021                     STR_10 02D6                     STR_11 02E1  
                   STR_12 028C             __CFG_WDTE$OFF 0000           __end_of___lldiv 0457  
         ___awdiv@divisor 0020                     i1l367 06FF                     i1l368 06FF  
                   i1l377 0731           ___awdiv@counter 0025                     _RCREG 001A  
                   _PORTB 0006                     _TRISB 0086                     _TXREG 0019  
         __end_of_dispLCD 04B6            _txStatusEUSART 0791            __CFG_FCMEN$OFF 0000  
                   _delay 069E                     main@d 00E9                     fpbase 004D  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E      __end_of_dispLCD_init 0514              __end_of_PASS 025E  
            __end_of_SSID 0255            __CFG_MCLRE$OFF 0000           __initialization 0011  
            __end_of_main 0234          ?_dispLCD_dataReg 0070                    ??_main 003C  
    __size_of_dispLCD_clr 0007    __end_of_txStatusEUSART 079B          ?_dispLCD_newChar 0023  
      dispLCD_newChar@ptr 0023          ?_dispLCD_instReg 0070                    ?_delay 0020  
        ___awdiv@dividend 0022                    _ANSELH 0189                    i1l1810 071E  
                  i1l1812 0728                    i1l1980 06F2                    i1l1982 06F8  
                  u157_20 06F8                    u157_21 06F7          __end_of__fptable 0078  
    __end_of_fifo_inserir 0732            __CFG_PWRTE$OFF 0000      __end_of_fifo_retirar 06DB  
        __end_of_fifo_tam 07AB          _Wifi_autoconnect 0000                 ??___awdiv 0024  
               ??___lldiv 0028    __size_of_keyboard_init 000F          fp__keyboard_init 006F  
                  _eusart 0040                    delay@t 0020          __end_of_txEUSART 07B7  
                  _search 0000          ___awdiv@quotient 0027                 ??_dispLCD 002F  
                  fptable 0048           ?_txStatusEUSART 0070                _Wifi_state 0765  
                  fptotal 001C                Wifi_mode@d 0023        __size_of_Wifi_mode 0042  
                  saved_w 007E   __end_of__initialization 0044   __size_of_dispLCD_lincol 0015  
          __pcstackCOMMON 0070              __pidataBANK0 06DB              __pidataBANK1 07B7  
            __pidataBANK3 0568             __end_of_delay 06BD            _OPTION_REGbits 0081  
                 ??_delay 0022             _keyboard_init 0756             _keyboard_scan 0000  
              __pbssBANK0 0057     __size_of_dispLCD_init 005E       dispLCD_newChar@adrs 0025  
       __end_of_Wifi_mode 05F3                __pmaintext 0078           fp__Wifi_connect 0057  
              _dispLCD_B0 0787                _dispLCD_B1 077D                __pintentry 0004  
              _dispLCDstr 0000               ?_Wifi_state 0070                   _LCDbits 0008  
            _dispLCD_init 04B6        __size_of_wifi_init 0011        __size_of_wifi_send 003A  
          _newChar_degree 0261            ?_keyboard_init 0070                 ?_fifo_tam 0070  
   __size_of_fifo_inserir 0015                __stringtab 0234     __size_of_fifo_retirar 001E  
         entry__wifi_init 0075           entry__wifi_send 0054                _initEUSART 0514  
               ?_txEUSART 0020                   _Wifi_ip 0000                   ___awdiv 0375  
                 ___lldiv 03E8                _currentKey 0000             ?_Wifi_connect 0070  
                 _dispLCD 0457                   __ptext1 0745                   __ptext2 0514  
                 __ptext3 03E8                   __ptext4 0756                   __ptext5 07A3  
                 __ptext6 06BD                   __ptext7 04B6                   __ptext8 05F3  
                 __ptext9 069E              _fifo_inserir 071D                   _currKey 0076  
  __end_of_newChar_degree 0269              __size_of_isr 0016              _fifo_retirar 06BD  
                 _prevKey 0077                ??_fifo_tam 0076                   main@hex 00A0  
                 clrloop0 079C                   main@vtr 00C8      end_of_initialization 0044  
              ??_txEUSART 0076            _dispLCD_lincol 0708                dispLCD@col 002D  
         ___lldiv@divisor 0020                dispLCD@lin 002C                dispLCD@str 002E  
     __size_of_Wifi_state 000C           ___lldiv@counter 002D         __end_of_wifi_init 0756  
       __end_of_wifi_send 066D                 _RCSTAbits 0018               ?_dispLCD_B0 0070  
             ?_dispLCD_B1 0070          ??_txStatusEUSART 0076             ??_dispLCD_clr 0076  
          ??_Wifi_connect 0023                 _PORTAbits 0005                fp__dispLCD 0060  
            _KEYBOARDbits 0006           ??_keyboard_init 0076                 _TRISAbits 0085  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 0031  __size_of_dispLCD_newChar 0040  
  __end_of_dispLCD_lincol 071D  __size_of_dispLCD_instReg 0084               ?_initEUSART 002E  
              main@indice 00EA                 _TXSTAbits 0098                main@string 025E  
             wifi_init@br 0038               _BAUDCTLbits 0187       start_initialization 0011  
     __end_of_dispLCD_clr 07B2               __end_of_isr 0708       __size_of_dispLCD_B0 000A  
     __size_of_dispLCD_B1 000A           ?_dispLCD_lincol 0029         dispLCD_lincol@col 0029  
       dispLCD_lincol@lin 002B                init_fetch0 0732            _keyboardMatrix 023A  
             __pdataBANK0 0040               __pdataBANK1 00EB               __pdataBANK3 0190  
               _Wifi_mode 05B1              ??_Wifi_state 0023       __size_of_initEUSART 0054  
             __pbssCOMMON 0076                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0         __size_of__fptable 0030         __size_of_fifo_tam 0008  
    __end_of_Wifi_connect 077D         ??_dispLCD_dataReg 0020         ??_dispLCD_newChar 0024  
       __size_of_txEUSART 0005    __end_of_keyboardMatrix 024A        __end_of_Wifi_state 0771  
       ??_dispLCD_instReg 0020                 __pfunctab 0048                  ?___awdiv 0020  
                ?___lldiv 0020                 _fifo_head 0068                ?_Wifi_mode 0023  
               _fifo_tail 0067               _dispLCD_clr 07AB               _dispLCD_num 0000  
                ?_dispLCD 002C                 __pstrings 0234             _rxErrorEUSART 0000  
          __size_of_delay 001F         interrupt_function 0004                 clear_ram0 079B  
                _PIE1bits 008C                  _PIR1bits 000C              ??_dispLCD_B0 0076  
            ??_dispLCD_B1 0076                 main@F1434 01B8                 main@F1436 0190  
        dispLCD_dataReg@d 0021                  _SPBRbits 0099                 _wifi_init 0745  
               _wifi_send 0633               __stringbase 0239        initEUSART@baudRate 002E  
      __end_of_dispLCD_B0 0791        __end_of_dispLCD_B1 0787              ??_initEUSART 0032  
        dispLCD_newChar@i 0026          dispLCD_instReg@i 0022                 txEUSART@d 0020  
             ??_Wifi_mode 0024          __size_of___awdiv 0073          __size_of___lldiv 006F  
              ?_wifi_init 0038                ?_wifi_send 0021           fp__dispLCD_init 006C  
      __end_of__stringtab 023A          __size_of_dispLCD 005F                  __fptable 0048  
          _rxStatusEUSART 0000        __end_of_initEUSART 0568          ??_dispLCD_lincol 002A  
   __size_of_Wifi_connect 000C                  __ptext10 07AB                  __ptext11 077D  
                __ptext20 0771                  __ptext12 0787                  __ptext21 0633  
                __ptext13 0457                  __ptext22 0791                  __ptext14 0708  
                __ptext23 07B2                  __ptext15 02F1                  __ptext24 06F2  
                __ptext16 066D                  __ptext25 071D                  __ptext17 0375  
                __ptext18 0765                  __ptext19 05B1             fp__Wifi_state 005D  
   __end_of_keyboard_init 0765         __CFG_BOR4V$BOR40V 0000                  _fifo_tam 07A3  
                _rxEUSART 0000        _rxResetErrorEUSART 0000                  _keyboard 00EB  
           __size_of_main 01BC                  _txEUSART 07B2              _Wifi_connect 0771  
              _INTCONbits 000B             ?_dispLCD_init 0070           _dispLCD_dataReg 066D  
 __size_of_txStatusEUSART 000A         fp__txStatusEUSART 0051                  init_ram0 0736  
          fp__dispLCD_clr 0069           _dispLCD_newChar 05F3           _dispLCD_instReg 02F1  
                intlevel1 0048              fp__Wifi_mode 005A          ___lldiv@dividend 0024  
             dispLCD@cont 0030                 stringcode 0234               ??_wifi_init 0076  
             ??_wifi_send 0022              ?_dispLCD_clr 0070             fp__dispLCD_B0 0063  
           fp__dispLCD_B1 0066             ?_fifo_inserir 0070           fifo_retirar@aux 0022  
          ??_dispLCD_init 0027          ___lldiv@quotient 0029             ?_fifo_retirar 0070  
                stringdir 0234                  stringtab 0234             fifo_inserir@d 0072  
      __end_ofmain@string 0261              _wifi_receive 0000               _previousKey 0000  
           fp__initEUSART 0072  
